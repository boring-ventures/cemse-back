
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model JobOffer
 * 
 */
export type JobOffer = $Result.DefaultSelection<Prisma.$JobOfferPayload>
/**
 * Model JobQuestion
 * 
 */
export type JobQuestion = $Result.DefaultSelection<Prisma.$JobQuestionPayload>
/**
 * Model JobApplication
 * 
 */
export type JobApplication = $Result.DefaultSelection<Prisma.$JobApplicationPayload>
/**
 * Model JobQuestionAnswer
 * 
 */
export type JobQuestionAnswer = $Result.DefaultSelection<Prisma.$JobQuestionAnswerPayload>
/**
 * Model JobApplicationMessage
 * 
 */
export type JobApplicationMessage = $Result.DefaultSelection<Prisma.$JobApplicationMessagePayload>
/**
 * Model Course
 * 
 */
export type Course = $Result.DefaultSelection<Prisma.$CoursePayload>
/**
 * Model CourseModule
 * 
 */
export type CourseModule = $Result.DefaultSelection<Prisma.$CourseModulePayload>
/**
 * Model Lesson
 * 
 */
export type Lesson = $Result.DefaultSelection<Prisma.$LessonPayload>
/**
 * Model CourseEnrollment
 * 
 */
export type CourseEnrollment = $Result.DefaultSelection<Prisma.$CourseEnrollmentPayload>
/**
 * Model LessonProgress
 * 
 */
export type LessonProgress = $Result.DefaultSelection<Prisma.$LessonProgressPayload>
/**
 * Model Quiz
 * 
 */
export type Quiz = $Result.DefaultSelection<Prisma.$QuizPayload>
/**
 * Model QuizQuestion
 * 
 */
export type QuizQuestion = $Result.DefaultSelection<Prisma.$QuizQuestionPayload>
/**
 * Model QuizAttempt
 * 
 */
export type QuizAttempt = $Result.DefaultSelection<Prisma.$QuizAttemptPayload>
/**
 * Model QuizAnswer
 * 
 */
export type QuizAnswer = $Result.DefaultSelection<Prisma.$QuizAnswerPayload>
/**
 * Model Certificate
 * 
 */
export type Certificate = $Result.DefaultSelection<Prisma.$CertificatePayload>
/**
 * Model StudentNote
 * 
 */
export type StudentNote = $Result.DefaultSelection<Prisma.$StudentNotePayload>
/**
 * Model Discussion
 * 
 */
export type Discussion = $Result.DefaultSelection<Prisma.$DiscussionPayload>
/**
 * Model Entrepreneurship
 * 
 */
export type Entrepreneurship = $Result.DefaultSelection<Prisma.$EntrepreneurshipPayload>
/**
 * Model BusinessPlan
 * 
 */
export type BusinessPlan = $Result.DefaultSelection<Prisma.$BusinessPlanPayload>
/**
 * Model NewsArticle
 * 
 */
export type NewsArticle = $Result.DefaultSelection<Prisma.$NewsArticlePayload>
/**
 * Model NewsComment
 * 
 */
export type NewsComment = $Result.DefaultSelection<Prisma.$NewsCommentPayload>
/**
 * Model Resource
 * 
 */
export type Resource = $Result.DefaultSelection<Prisma.$ResourcePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model ExternalApiKey
 * 
 */
export type ExternalApiKey = $Result.DefaultSelection<Prisma.$ExternalApiKeyPayload>
/**
 * Model Institution
 * 
 */
export type Institution = $Result.DefaultSelection<Prisma.$InstitutionPayload>
/**
 * Model Municipality
 * 
 */
export type Municipality = $Result.DefaultSelection<Prisma.$MunicipalityPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>
/**
 * Model Conversation
 * 
 */
export type Conversation = $Result.DefaultSelection<Prisma.$ConversationPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model LessonResource
 * 
 */
export type LessonResource = $Result.DefaultSelection<Prisma.$LessonResourcePayload>
/**
 * Model ModuleCertificate
 * 
 */
export type ModuleCertificate = $Result.DefaultSelection<Prisma.$ModuleCertificatePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PENDING_VERIFICATION: 'PENDING_VERIFICATION',
  SUSPENDED: 'SUSPENDED'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const UserRole: {
  YOUTH: 'YOUTH',
  ADOLESCENTS: 'ADOLESCENTS',
  COMPANIES: 'COMPANIES',
  MUNICIPAL_GOVERNMENTS: 'MUNICIPAL_GOVERNMENTS',
  TRAINING_CENTERS: 'TRAINING_CENTERS',
  NGOS_AND_FOUNDATIONS: 'NGOS_AND_FOUNDATIONS',
  SUPERADMIN: 'SUPERADMIN',
  INSTRUCTOR: 'INSTRUCTOR'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const EducationLevel: {
  PRIMARY: 'PRIMARY',
  SECONDARY: 'SECONDARY',
  TECHNICAL: 'TECHNICAL',
  UNIVERSITY: 'UNIVERSITY',
  POSTGRADUATE: 'POSTGRADUATE',
  OTHER: 'OTHER'
};

export type EducationLevel = (typeof EducationLevel)[keyof typeof EducationLevel]


export const CompanySize: {
  MICRO: 'MICRO',
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  LARGE: 'LARGE'
};

export type CompanySize = (typeof CompanySize)[keyof typeof CompanySize]


export const ContractType: {
  FULL_TIME: 'FULL_TIME',
  PART_TIME: 'PART_TIME',
  INTERNSHIP: 'INTERNSHIP',
  VOLUNTEER: 'VOLUNTEER',
  FREELANCE: 'FREELANCE'
};

export type ContractType = (typeof ContractType)[keyof typeof ContractType]


export const WorkModality: {
  ON_SITE: 'ON_SITE',
  REMOTE: 'REMOTE',
  HYBRID: 'HYBRID'
};

export type WorkModality = (typeof WorkModality)[keyof typeof WorkModality]


export const ExperienceLevel: {
  NO_EXPERIENCE: 'NO_EXPERIENCE',
  ENTRY_LEVEL: 'ENTRY_LEVEL',
  MID_LEVEL: 'MID_LEVEL',
  SENIOR_LEVEL: 'SENIOR_LEVEL'
};

export type ExperienceLevel = (typeof ExperienceLevel)[keyof typeof ExperienceLevel]


export const JobStatus: {
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  CLOSED: 'CLOSED',
  DRAFT: 'DRAFT'
};

export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus]


export const ApplicationStatus: {
  SENT: 'SENT',
  UNDER_REVIEW: 'UNDER_REVIEW',
  PRE_SELECTED: 'PRE_SELECTED',
  REJECTED: 'REJECTED',
  HIRED: 'HIRED'
};

export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus]


export const SenderType: {
  COMPANY: 'COMPANY',
  APPLICANT: 'APPLICANT'
};

export type SenderType = (typeof SenderType)[keyof typeof SenderType]


export const MessageType: {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  FILE: 'FILE'
};

export type MessageType = (typeof MessageType)[keyof typeof MessageType]


export const MessageStatus: {
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  READ: 'READ'
};

export type MessageStatus = (typeof MessageStatus)[keyof typeof MessageStatus]


export const CourseLevel: {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED'
};

export type CourseLevel = (typeof CourseLevel)[keyof typeof CourseLevel]


export const CourseCategory: {
  SOFT_SKILLS: 'SOFT_SKILLS',
  BASIC_COMPETENCIES: 'BASIC_COMPETENCIES',
  JOB_PLACEMENT: 'JOB_PLACEMENT',
  ENTREPRENEURSHIP: 'ENTREPRENEURSHIP',
  TECHNICAL_SKILLS: 'TECHNICAL_SKILLS',
  DIGITAL_LITERACY: 'DIGITAL_LITERACY',
  COMMUNICATION: 'COMMUNICATION',
  LEADERSHIP: 'LEADERSHIP'
};

export type CourseCategory = (typeof CourseCategory)[keyof typeof CourseCategory]


export const LessonType: {
  VIDEO: 'VIDEO',
  TEXT: 'TEXT',
  QUIZ: 'QUIZ',
  EXERCISE: 'EXERCISE',
  DOCUMENT: 'DOCUMENT',
  INTERACTIVE: 'INTERACTIVE'
};

export type LessonType = (typeof LessonType)[keyof typeof LessonType]


export const EnrollmentStatus: {
  ENROLLED: 'ENROLLED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  DROPPED: 'DROPPED',
  SUSPENDED: 'SUSPENDED'
};

export type EnrollmentStatus = (typeof EnrollmentStatus)[keyof typeof EnrollmentStatus]


export const QuestionType: {
  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE',
  TRUE_FALSE: 'TRUE_FALSE',
  FILL_BLANK: 'FILL_BLANK',
  SORT_ELEMENTS: 'SORT_ELEMENTS',
  MULTIPLE_SELECT: 'MULTIPLE_SELECT',
  SHORT_ANSWER: 'SHORT_ANSWER'
};

export type QuestionType = (typeof QuestionType)[keyof typeof QuestionType]


export const BusinessStage: {
  IDEA: 'IDEA',
  STARTUP: 'STARTUP',
  GROWING: 'GROWING',
  ESTABLISHED: 'ESTABLISHED'
};

export type BusinessStage = (typeof BusinessStage)[keyof typeof BusinessStage]


export const NewsType: {
  COMPANY: 'COMPANY',
  GOVERNMENT: 'GOVERNMENT',
  NGO: 'NGO'
};

export type NewsType = (typeof NewsType)[keyof typeof NewsType]


export const NewsStatus: {
  PUBLISHED: 'PUBLISHED',
  DRAFT: 'DRAFT',
  ARCHIVED: 'ARCHIVED'
};

export type NewsStatus = (typeof NewsStatus)[keyof typeof NewsStatus]


export const NewsPriority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type NewsPriority = (typeof NewsPriority)[keyof typeof NewsPriority]


export const InstitutionType: {
  MUNICIPALITY: 'MUNICIPALITY',
  NGO: 'NGO',
  FOUNDATION: 'FOUNDATION',
  OTHER: 'OTHER'
};

export type InstitutionType = (typeof InstitutionType)[keyof typeof InstitutionType]


export const ContactStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  BLOCKED: 'BLOCKED'
};

export type ContactStatus = (typeof ContactStatus)[keyof typeof ContactStatus]


export const ResourceType: {
  PDF: 'PDF',
  DOCUMENT: 'DOCUMENT',
  VIDEO: 'VIDEO',
  AUDIO: 'AUDIO',
  IMAGE: 'IMAGE',
  LINK: 'LINK',
  ZIP: 'ZIP',
  OTHER: 'OTHER'
};

export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType]

}

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type EducationLevel = $Enums.EducationLevel

export const EducationLevel: typeof $Enums.EducationLevel

export type CompanySize = $Enums.CompanySize

export const CompanySize: typeof $Enums.CompanySize

export type ContractType = $Enums.ContractType

export const ContractType: typeof $Enums.ContractType

export type WorkModality = $Enums.WorkModality

export const WorkModality: typeof $Enums.WorkModality

export type ExperienceLevel = $Enums.ExperienceLevel

export const ExperienceLevel: typeof $Enums.ExperienceLevel

export type JobStatus = $Enums.JobStatus

export const JobStatus: typeof $Enums.JobStatus

export type ApplicationStatus = $Enums.ApplicationStatus

export const ApplicationStatus: typeof $Enums.ApplicationStatus

export type SenderType = $Enums.SenderType

export const SenderType: typeof $Enums.SenderType

export type MessageType = $Enums.MessageType

export const MessageType: typeof $Enums.MessageType

export type MessageStatus = $Enums.MessageStatus

export const MessageStatus: typeof $Enums.MessageStatus

export type CourseLevel = $Enums.CourseLevel

export const CourseLevel: typeof $Enums.CourseLevel

export type CourseCategory = $Enums.CourseCategory

export const CourseCategory: typeof $Enums.CourseCategory

export type LessonType = $Enums.LessonType

export const LessonType: typeof $Enums.LessonType

export type EnrollmentStatus = $Enums.EnrollmentStatus

export const EnrollmentStatus: typeof $Enums.EnrollmentStatus

export type QuestionType = $Enums.QuestionType

export const QuestionType: typeof $Enums.QuestionType

export type BusinessStage = $Enums.BusinessStage

export const BusinessStage: typeof $Enums.BusinessStage

export type NewsType = $Enums.NewsType

export const NewsType: typeof $Enums.NewsType

export type NewsStatus = $Enums.NewsStatus

export const NewsStatus: typeof $Enums.NewsStatus

export type NewsPriority = $Enums.NewsPriority

export const NewsPriority: typeof $Enums.NewsPriority

export type InstitutionType = $Enums.InstitutionType

export const InstitutionType: typeof $Enums.InstitutionType

export type ContactStatus = $Enums.ContactStatus

export const ContactStatus: typeof $Enums.ContactStatus

export type ResourceType = $Enums.ResourceType

export const ResourceType: typeof $Enums.ResourceType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Profiles
 * const profiles = await prisma.profile.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Profiles
   * const profiles = await prisma.profile.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs>;

  /**
   * `prisma.jobOffer`: Exposes CRUD operations for the **JobOffer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobOffers
    * const jobOffers = await prisma.jobOffer.findMany()
    * ```
    */
  get jobOffer(): Prisma.JobOfferDelegate<ExtArgs>;

  /**
   * `prisma.jobQuestion`: Exposes CRUD operations for the **JobQuestion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobQuestions
    * const jobQuestions = await prisma.jobQuestion.findMany()
    * ```
    */
  get jobQuestion(): Prisma.JobQuestionDelegate<ExtArgs>;

  /**
   * `prisma.jobApplication`: Exposes CRUD operations for the **JobApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobApplications
    * const jobApplications = await prisma.jobApplication.findMany()
    * ```
    */
  get jobApplication(): Prisma.JobApplicationDelegate<ExtArgs>;

  /**
   * `prisma.jobQuestionAnswer`: Exposes CRUD operations for the **JobQuestionAnswer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobQuestionAnswers
    * const jobQuestionAnswers = await prisma.jobQuestionAnswer.findMany()
    * ```
    */
  get jobQuestionAnswer(): Prisma.JobQuestionAnswerDelegate<ExtArgs>;

  /**
   * `prisma.jobApplicationMessage`: Exposes CRUD operations for the **JobApplicationMessage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobApplicationMessages
    * const jobApplicationMessages = await prisma.jobApplicationMessage.findMany()
    * ```
    */
  get jobApplicationMessage(): Prisma.JobApplicationMessageDelegate<ExtArgs>;

  /**
   * `prisma.course`: Exposes CRUD operations for the **Course** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Courses
    * const courses = await prisma.course.findMany()
    * ```
    */
  get course(): Prisma.CourseDelegate<ExtArgs>;

  /**
   * `prisma.courseModule`: Exposes CRUD operations for the **CourseModule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CourseModules
    * const courseModules = await prisma.courseModule.findMany()
    * ```
    */
  get courseModule(): Prisma.CourseModuleDelegate<ExtArgs>;

  /**
   * `prisma.lesson`: Exposes CRUD operations for the **Lesson** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lessons
    * const lessons = await prisma.lesson.findMany()
    * ```
    */
  get lesson(): Prisma.LessonDelegate<ExtArgs>;

  /**
   * `prisma.courseEnrollment`: Exposes CRUD operations for the **CourseEnrollment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CourseEnrollments
    * const courseEnrollments = await prisma.courseEnrollment.findMany()
    * ```
    */
  get courseEnrollment(): Prisma.CourseEnrollmentDelegate<ExtArgs>;

  /**
   * `prisma.lessonProgress`: Exposes CRUD operations for the **LessonProgress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LessonProgresses
    * const lessonProgresses = await prisma.lessonProgress.findMany()
    * ```
    */
  get lessonProgress(): Prisma.LessonProgressDelegate<ExtArgs>;

  /**
   * `prisma.quiz`: Exposes CRUD operations for the **Quiz** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Quizzes
    * const quizzes = await prisma.quiz.findMany()
    * ```
    */
  get quiz(): Prisma.QuizDelegate<ExtArgs>;

  /**
   * `prisma.quizQuestion`: Exposes CRUD operations for the **QuizQuestion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QuizQuestions
    * const quizQuestions = await prisma.quizQuestion.findMany()
    * ```
    */
  get quizQuestion(): Prisma.QuizQuestionDelegate<ExtArgs>;

  /**
   * `prisma.quizAttempt`: Exposes CRUD operations for the **QuizAttempt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QuizAttempts
    * const quizAttempts = await prisma.quizAttempt.findMany()
    * ```
    */
  get quizAttempt(): Prisma.QuizAttemptDelegate<ExtArgs>;

  /**
   * `prisma.quizAnswer`: Exposes CRUD operations for the **QuizAnswer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QuizAnswers
    * const quizAnswers = await prisma.quizAnswer.findMany()
    * ```
    */
  get quizAnswer(): Prisma.QuizAnswerDelegate<ExtArgs>;

  /**
   * `prisma.certificate`: Exposes CRUD operations for the **Certificate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Certificates
    * const certificates = await prisma.certificate.findMany()
    * ```
    */
  get certificate(): Prisma.CertificateDelegate<ExtArgs>;

  /**
   * `prisma.studentNote`: Exposes CRUD operations for the **StudentNote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StudentNotes
    * const studentNotes = await prisma.studentNote.findMany()
    * ```
    */
  get studentNote(): Prisma.StudentNoteDelegate<ExtArgs>;

  /**
   * `prisma.discussion`: Exposes CRUD operations for the **Discussion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discussions
    * const discussions = await prisma.discussion.findMany()
    * ```
    */
  get discussion(): Prisma.DiscussionDelegate<ExtArgs>;

  /**
   * `prisma.entrepreneurship`: Exposes CRUD operations for the **Entrepreneurship** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entrepreneurships
    * const entrepreneurships = await prisma.entrepreneurship.findMany()
    * ```
    */
  get entrepreneurship(): Prisma.EntrepreneurshipDelegate<ExtArgs>;

  /**
   * `prisma.businessPlan`: Exposes CRUD operations for the **BusinessPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessPlans
    * const businessPlans = await prisma.businessPlan.findMany()
    * ```
    */
  get businessPlan(): Prisma.BusinessPlanDelegate<ExtArgs>;

  /**
   * `prisma.newsArticle`: Exposes CRUD operations for the **NewsArticle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NewsArticles
    * const newsArticles = await prisma.newsArticle.findMany()
    * ```
    */
  get newsArticle(): Prisma.NewsArticleDelegate<ExtArgs>;

  /**
   * `prisma.newsComment`: Exposes CRUD operations for the **NewsComment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NewsComments
    * const newsComments = await prisma.newsComment.findMany()
    * ```
    */
  get newsComment(): Prisma.NewsCommentDelegate<ExtArgs>;

  /**
   * `prisma.resource`: Exposes CRUD operations for the **Resource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Resources
    * const resources = await prisma.resource.findMany()
    * ```
    */
  get resource(): Prisma.ResourceDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.externalApiKey`: Exposes CRUD operations for the **ExternalApiKey** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ExternalApiKeys
    * const externalApiKeys = await prisma.externalApiKey.findMany()
    * ```
    */
  get externalApiKey(): Prisma.ExternalApiKeyDelegate<ExtArgs>;

  /**
   * `prisma.institution`: Exposes CRUD operations for the **Institution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Institutions
    * const institutions = await prisma.institution.findMany()
    * ```
    */
  get institution(): Prisma.InstitutionDelegate<ExtArgs>;

  /**
   * `prisma.municipality`: Exposes CRUD operations for the **Municipality** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Municipalities
    * const municipalities = await prisma.municipality.findMany()
    * ```
    */
  get municipality(): Prisma.MunicipalityDelegate<ExtArgs>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs>;

  /**
   * `prisma.conversation`: Exposes CRUD operations for the **Conversation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Conversations
    * const conversations = await prisma.conversation.findMany()
    * ```
    */
  get conversation(): Prisma.ConversationDelegate<ExtArgs>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs>;

  /**
   * `prisma.lessonResource`: Exposes CRUD operations for the **LessonResource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LessonResources
    * const lessonResources = await prisma.lessonResource.findMany()
    * ```
    */
  get lessonResource(): Prisma.LessonResourceDelegate<ExtArgs>;

  /**
   * `prisma.moduleCertificate`: Exposes CRUD operations for the **ModuleCertificate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModuleCertificates
    * const moduleCertificates = await prisma.moduleCertificate.findMany()
    * ```
    */
  get moduleCertificate(): Prisma.ModuleCertificateDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Profile: 'Profile',
    JobOffer: 'JobOffer',
    JobQuestion: 'JobQuestion',
    JobApplication: 'JobApplication',
    JobQuestionAnswer: 'JobQuestionAnswer',
    JobApplicationMessage: 'JobApplicationMessage',
    Course: 'Course',
    CourseModule: 'CourseModule',
    Lesson: 'Lesson',
    CourseEnrollment: 'CourseEnrollment',
    LessonProgress: 'LessonProgress',
    Quiz: 'Quiz',
    QuizQuestion: 'QuizQuestion',
    QuizAttempt: 'QuizAttempt',
    QuizAnswer: 'QuizAnswer',
    Certificate: 'Certificate',
    StudentNote: 'StudentNote',
    Discussion: 'Discussion',
    Entrepreneurship: 'Entrepreneurship',
    BusinessPlan: 'BusinessPlan',
    NewsArticle: 'NewsArticle',
    NewsComment: 'NewsComment',
    Resource: 'Resource',
    User: 'User',
    RefreshToken: 'RefreshToken',
    ExternalApiKey: 'ExternalApiKey',
    Institution: 'Institution',
    Municipality: 'Municipality',
    Company: 'Company',
    Contact: 'Contact',
    Conversation: 'Conversation',
    Message: 'Message',
    LessonResource: 'LessonResource',
    ModuleCertificate: 'ModuleCertificate'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "profile" | "jobOffer" | "jobQuestion" | "jobApplication" | "jobQuestionAnswer" | "jobApplicationMessage" | "course" | "courseModule" | "lesson" | "courseEnrollment" | "lessonProgress" | "quiz" | "quizQuestion" | "quizAttempt" | "quizAnswer" | "certificate" | "studentNote" | "discussion" | "entrepreneurship" | "businessPlan" | "newsArticle" | "newsComment" | "resource" | "user" | "refreshToken" | "externalApiKey" | "institution" | "municipality" | "company" | "contact" | "conversation" | "message" | "lessonResource" | "moduleCertificate"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      JobOffer: {
        payload: Prisma.$JobOfferPayload<ExtArgs>
        fields: Prisma.JobOfferFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobOfferFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobOfferFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          findFirst: {
            args: Prisma.JobOfferFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobOfferFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          findMany: {
            args: Prisma.JobOfferFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>[]
          }
          create: {
            args: Prisma.JobOfferCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          createMany: {
            args: Prisma.JobOfferCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobOfferCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>[]
          }
          delete: {
            args: Prisma.JobOfferDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          update: {
            args: Prisma.JobOfferUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          deleteMany: {
            args: Prisma.JobOfferDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobOfferUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobOfferUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobOfferPayload>
          }
          aggregate: {
            args: Prisma.JobOfferAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobOffer>
          }
          groupBy: {
            args: Prisma.JobOfferGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobOfferGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobOfferCountArgs<ExtArgs>
            result: $Utils.Optional<JobOfferCountAggregateOutputType> | number
          }
        }
      }
      JobQuestion: {
        payload: Prisma.$JobQuestionPayload<ExtArgs>
        fields: Prisma.JobQuestionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobQuestionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobQuestionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          findFirst: {
            args: Prisma.JobQuestionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobQuestionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          findMany: {
            args: Prisma.JobQuestionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>[]
          }
          create: {
            args: Prisma.JobQuestionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          createMany: {
            args: Prisma.JobQuestionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobQuestionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>[]
          }
          delete: {
            args: Prisma.JobQuestionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          update: {
            args: Prisma.JobQuestionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          deleteMany: {
            args: Prisma.JobQuestionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobQuestionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobQuestionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionPayload>
          }
          aggregate: {
            args: Prisma.JobQuestionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobQuestion>
          }
          groupBy: {
            args: Prisma.JobQuestionGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobQuestionGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobQuestionCountArgs<ExtArgs>
            result: $Utils.Optional<JobQuestionCountAggregateOutputType> | number
          }
        }
      }
      JobApplication: {
        payload: Prisma.$JobApplicationPayload<ExtArgs>
        fields: Prisma.JobApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          findFirst: {
            args: Prisma.JobApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          findMany: {
            args: Prisma.JobApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>[]
          }
          create: {
            args: Prisma.JobApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          createMany: {
            args: Prisma.JobApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>[]
          }
          delete: {
            args: Prisma.JobApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          update: {
            args: Prisma.JobApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          deleteMany: {
            args: Prisma.JobApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          aggregate: {
            args: Prisma.JobApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobApplication>
          }
          groupBy: {
            args: Prisma.JobApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationCountAggregateOutputType> | number
          }
        }
      }
      JobQuestionAnswer: {
        payload: Prisma.$JobQuestionAnswerPayload<ExtArgs>
        fields: Prisma.JobQuestionAnswerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobQuestionAnswerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobQuestionAnswerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          findFirst: {
            args: Prisma.JobQuestionAnswerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobQuestionAnswerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          findMany: {
            args: Prisma.JobQuestionAnswerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>[]
          }
          create: {
            args: Prisma.JobQuestionAnswerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          createMany: {
            args: Prisma.JobQuestionAnswerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobQuestionAnswerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>[]
          }
          delete: {
            args: Prisma.JobQuestionAnswerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          update: {
            args: Prisma.JobQuestionAnswerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          deleteMany: {
            args: Prisma.JobQuestionAnswerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobQuestionAnswerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobQuestionAnswerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobQuestionAnswerPayload>
          }
          aggregate: {
            args: Prisma.JobQuestionAnswerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobQuestionAnswer>
          }
          groupBy: {
            args: Prisma.JobQuestionAnswerGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobQuestionAnswerGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobQuestionAnswerCountArgs<ExtArgs>
            result: $Utils.Optional<JobQuestionAnswerCountAggregateOutputType> | number
          }
        }
      }
      JobApplicationMessage: {
        payload: Prisma.$JobApplicationMessagePayload<ExtArgs>
        fields: Prisma.JobApplicationMessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobApplicationMessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobApplicationMessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          findFirst: {
            args: Prisma.JobApplicationMessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobApplicationMessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          findMany: {
            args: Prisma.JobApplicationMessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>[]
          }
          create: {
            args: Prisma.JobApplicationMessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          createMany: {
            args: Prisma.JobApplicationMessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobApplicationMessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>[]
          }
          delete: {
            args: Prisma.JobApplicationMessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          update: {
            args: Prisma.JobApplicationMessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          deleteMany: {
            args: Prisma.JobApplicationMessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobApplicationMessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobApplicationMessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationMessagePayload>
          }
          aggregate: {
            args: Prisma.JobApplicationMessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobApplicationMessage>
          }
          groupBy: {
            args: Prisma.JobApplicationMessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationMessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobApplicationMessageCountArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationMessageCountAggregateOutputType> | number
          }
        }
      }
      Course: {
        payload: Prisma.$CoursePayload<ExtArgs>
        fields: Prisma.CourseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CourseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CourseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          findFirst: {
            args: Prisma.CourseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CourseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          findMany: {
            args: Prisma.CourseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>[]
          }
          create: {
            args: Prisma.CourseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          createMany: {
            args: Prisma.CourseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CourseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>[]
          }
          delete: {
            args: Prisma.CourseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          update: {
            args: Prisma.CourseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          deleteMany: {
            args: Prisma.CourseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CourseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CourseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          aggregate: {
            args: Prisma.CourseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourse>
          }
          groupBy: {
            args: Prisma.CourseGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourseGroupByOutputType>[]
          }
          count: {
            args: Prisma.CourseCountArgs<ExtArgs>
            result: $Utils.Optional<CourseCountAggregateOutputType> | number
          }
        }
      }
      CourseModule: {
        payload: Prisma.$CourseModulePayload<ExtArgs>
        fields: Prisma.CourseModuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CourseModuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CourseModuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          findFirst: {
            args: Prisma.CourseModuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CourseModuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          findMany: {
            args: Prisma.CourseModuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>[]
          }
          create: {
            args: Prisma.CourseModuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          createMany: {
            args: Prisma.CourseModuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CourseModuleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>[]
          }
          delete: {
            args: Prisma.CourseModuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          update: {
            args: Prisma.CourseModuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          deleteMany: {
            args: Prisma.CourseModuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CourseModuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CourseModuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseModulePayload>
          }
          aggregate: {
            args: Prisma.CourseModuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourseModule>
          }
          groupBy: {
            args: Prisma.CourseModuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourseModuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.CourseModuleCountArgs<ExtArgs>
            result: $Utils.Optional<CourseModuleCountAggregateOutputType> | number
          }
        }
      }
      Lesson: {
        payload: Prisma.$LessonPayload<ExtArgs>
        fields: Prisma.LessonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LessonFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LessonFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          findFirst: {
            args: Prisma.LessonFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LessonFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          findMany: {
            args: Prisma.LessonFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>[]
          }
          create: {
            args: Prisma.LessonCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          createMany: {
            args: Prisma.LessonCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LessonCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>[]
          }
          delete: {
            args: Prisma.LessonDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          update: {
            args: Prisma.LessonUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          deleteMany: {
            args: Prisma.LessonDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LessonUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LessonUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonPayload>
          }
          aggregate: {
            args: Prisma.LessonAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLesson>
          }
          groupBy: {
            args: Prisma.LessonGroupByArgs<ExtArgs>
            result: $Utils.Optional<LessonGroupByOutputType>[]
          }
          count: {
            args: Prisma.LessonCountArgs<ExtArgs>
            result: $Utils.Optional<LessonCountAggregateOutputType> | number
          }
        }
      }
      CourseEnrollment: {
        payload: Prisma.$CourseEnrollmentPayload<ExtArgs>
        fields: Prisma.CourseEnrollmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CourseEnrollmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CourseEnrollmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          findFirst: {
            args: Prisma.CourseEnrollmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CourseEnrollmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          findMany: {
            args: Prisma.CourseEnrollmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>[]
          }
          create: {
            args: Prisma.CourseEnrollmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          createMany: {
            args: Prisma.CourseEnrollmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CourseEnrollmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>[]
          }
          delete: {
            args: Prisma.CourseEnrollmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          update: {
            args: Prisma.CourseEnrollmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          deleteMany: {
            args: Prisma.CourseEnrollmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CourseEnrollmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CourseEnrollmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CourseEnrollmentPayload>
          }
          aggregate: {
            args: Prisma.CourseEnrollmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourseEnrollment>
          }
          groupBy: {
            args: Prisma.CourseEnrollmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourseEnrollmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CourseEnrollmentCountArgs<ExtArgs>
            result: $Utils.Optional<CourseEnrollmentCountAggregateOutputType> | number
          }
        }
      }
      LessonProgress: {
        payload: Prisma.$LessonProgressPayload<ExtArgs>
        fields: Prisma.LessonProgressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LessonProgressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LessonProgressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          findFirst: {
            args: Prisma.LessonProgressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LessonProgressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          findMany: {
            args: Prisma.LessonProgressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>[]
          }
          create: {
            args: Prisma.LessonProgressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          createMany: {
            args: Prisma.LessonProgressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LessonProgressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>[]
          }
          delete: {
            args: Prisma.LessonProgressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          update: {
            args: Prisma.LessonProgressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          deleteMany: {
            args: Prisma.LessonProgressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LessonProgressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LessonProgressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonProgressPayload>
          }
          aggregate: {
            args: Prisma.LessonProgressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLessonProgress>
          }
          groupBy: {
            args: Prisma.LessonProgressGroupByArgs<ExtArgs>
            result: $Utils.Optional<LessonProgressGroupByOutputType>[]
          }
          count: {
            args: Prisma.LessonProgressCountArgs<ExtArgs>
            result: $Utils.Optional<LessonProgressCountAggregateOutputType> | number
          }
        }
      }
      Quiz: {
        payload: Prisma.$QuizPayload<ExtArgs>
        fields: Prisma.QuizFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuizFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuizFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          findFirst: {
            args: Prisma.QuizFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuizFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          findMany: {
            args: Prisma.QuizFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>[]
          }
          create: {
            args: Prisma.QuizCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          createMany: {
            args: Prisma.QuizCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QuizCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>[]
          }
          delete: {
            args: Prisma.QuizDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          update: {
            args: Prisma.QuizUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          deleteMany: {
            args: Prisma.QuizDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuizUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QuizUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizPayload>
          }
          aggregate: {
            args: Prisma.QuizAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuiz>
          }
          groupBy: {
            args: Prisma.QuizGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuizGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuizCountArgs<ExtArgs>
            result: $Utils.Optional<QuizCountAggregateOutputType> | number
          }
        }
      }
      QuizQuestion: {
        payload: Prisma.$QuizQuestionPayload<ExtArgs>
        fields: Prisma.QuizQuestionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuizQuestionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuizQuestionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          findFirst: {
            args: Prisma.QuizQuestionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuizQuestionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          findMany: {
            args: Prisma.QuizQuestionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>[]
          }
          create: {
            args: Prisma.QuizQuestionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          createMany: {
            args: Prisma.QuizQuestionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QuizQuestionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>[]
          }
          delete: {
            args: Prisma.QuizQuestionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          update: {
            args: Prisma.QuizQuestionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          deleteMany: {
            args: Prisma.QuizQuestionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuizQuestionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QuizQuestionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizQuestionPayload>
          }
          aggregate: {
            args: Prisma.QuizQuestionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuizQuestion>
          }
          groupBy: {
            args: Prisma.QuizQuestionGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuizQuestionGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuizQuestionCountArgs<ExtArgs>
            result: $Utils.Optional<QuizQuestionCountAggregateOutputType> | number
          }
        }
      }
      QuizAttempt: {
        payload: Prisma.$QuizAttemptPayload<ExtArgs>
        fields: Prisma.QuizAttemptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuizAttemptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuizAttemptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          findFirst: {
            args: Prisma.QuizAttemptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuizAttemptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          findMany: {
            args: Prisma.QuizAttemptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>[]
          }
          create: {
            args: Prisma.QuizAttemptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          createMany: {
            args: Prisma.QuizAttemptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QuizAttemptCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>[]
          }
          delete: {
            args: Prisma.QuizAttemptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          update: {
            args: Prisma.QuizAttemptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          deleteMany: {
            args: Prisma.QuizAttemptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuizAttemptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QuizAttemptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAttemptPayload>
          }
          aggregate: {
            args: Prisma.QuizAttemptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuizAttempt>
          }
          groupBy: {
            args: Prisma.QuizAttemptGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuizAttemptGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuizAttemptCountArgs<ExtArgs>
            result: $Utils.Optional<QuizAttemptCountAggregateOutputType> | number
          }
        }
      }
      QuizAnswer: {
        payload: Prisma.$QuizAnswerPayload<ExtArgs>
        fields: Prisma.QuizAnswerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QuizAnswerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QuizAnswerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          findFirst: {
            args: Prisma.QuizAnswerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QuizAnswerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          findMany: {
            args: Prisma.QuizAnswerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>[]
          }
          create: {
            args: Prisma.QuizAnswerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          createMany: {
            args: Prisma.QuizAnswerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QuizAnswerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>[]
          }
          delete: {
            args: Prisma.QuizAnswerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          update: {
            args: Prisma.QuizAnswerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          deleteMany: {
            args: Prisma.QuizAnswerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QuizAnswerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.QuizAnswerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QuizAnswerPayload>
          }
          aggregate: {
            args: Prisma.QuizAnswerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuizAnswer>
          }
          groupBy: {
            args: Prisma.QuizAnswerGroupByArgs<ExtArgs>
            result: $Utils.Optional<QuizAnswerGroupByOutputType>[]
          }
          count: {
            args: Prisma.QuizAnswerCountArgs<ExtArgs>
            result: $Utils.Optional<QuizAnswerCountAggregateOutputType> | number
          }
        }
      }
      Certificate: {
        payload: Prisma.$CertificatePayload<ExtArgs>
        fields: Prisma.CertificateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CertificateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CertificateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          findFirst: {
            args: Prisma.CertificateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CertificateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          findMany: {
            args: Prisma.CertificateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>[]
          }
          create: {
            args: Prisma.CertificateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          createMany: {
            args: Prisma.CertificateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CertificateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>[]
          }
          delete: {
            args: Prisma.CertificateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          update: {
            args: Prisma.CertificateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          deleteMany: {
            args: Prisma.CertificateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CertificateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CertificateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CertificatePayload>
          }
          aggregate: {
            args: Prisma.CertificateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCertificate>
          }
          groupBy: {
            args: Prisma.CertificateGroupByArgs<ExtArgs>
            result: $Utils.Optional<CertificateGroupByOutputType>[]
          }
          count: {
            args: Prisma.CertificateCountArgs<ExtArgs>
            result: $Utils.Optional<CertificateCountAggregateOutputType> | number
          }
        }
      }
      StudentNote: {
        payload: Prisma.$StudentNotePayload<ExtArgs>
        fields: Prisma.StudentNoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StudentNoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StudentNoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          findFirst: {
            args: Prisma.StudentNoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StudentNoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          findMany: {
            args: Prisma.StudentNoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>[]
          }
          create: {
            args: Prisma.StudentNoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          createMany: {
            args: Prisma.StudentNoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StudentNoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>[]
          }
          delete: {
            args: Prisma.StudentNoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          update: {
            args: Prisma.StudentNoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          deleteMany: {
            args: Prisma.StudentNoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StudentNoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StudentNoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudentNotePayload>
          }
          aggregate: {
            args: Prisma.StudentNoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStudentNote>
          }
          groupBy: {
            args: Prisma.StudentNoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<StudentNoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.StudentNoteCountArgs<ExtArgs>
            result: $Utils.Optional<StudentNoteCountAggregateOutputType> | number
          }
        }
      }
      Discussion: {
        payload: Prisma.$DiscussionPayload<ExtArgs>
        fields: Prisma.DiscussionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscussionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscussionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          findFirst: {
            args: Prisma.DiscussionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscussionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          findMany: {
            args: Prisma.DiscussionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>[]
          }
          create: {
            args: Prisma.DiscussionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          createMany: {
            args: Prisma.DiscussionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscussionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>[]
          }
          delete: {
            args: Prisma.DiscussionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          update: {
            args: Prisma.DiscussionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          deleteMany: {
            args: Prisma.DiscussionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscussionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DiscussionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscussionPayload>
          }
          aggregate: {
            args: Prisma.DiscussionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscussion>
          }
          groupBy: {
            args: Prisma.DiscussionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscussionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscussionCountArgs<ExtArgs>
            result: $Utils.Optional<DiscussionCountAggregateOutputType> | number
          }
        }
      }
      Entrepreneurship: {
        payload: Prisma.$EntrepreneurshipPayload<ExtArgs>
        fields: Prisma.EntrepreneurshipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EntrepreneurshipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EntrepreneurshipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          findFirst: {
            args: Prisma.EntrepreneurshipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EntrepreneurshipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          findMany: {
            args: Prisma.EntrepreneurshipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>[]
          }
          create: {
            args: Prisma.EntrepreneurshipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          createMany: {
            args: Prisma.EntrepreneurshipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EntrepreneurshipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>[]
          }
          delete: {
            args: Prisma.EntrepreneurshipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          update: {
            args: Prisma.EntrepreneurshipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          deleteMany: {
            args: Prisma.EntrepreneurshipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EntrepreneurshipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EntrepreneurshipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntrepreneurshipPayload>
          }
          aggregate: {
            args: Prisma.EntrepreneurshipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEntrepreneurship>
          }
          groupBy: {
            args: Prisma.EntrepreneurshipGroupByArgs<ExtArgs>
            result: $Utils.Optional<EntrepreneurshipGroupByOutputType>[]
          }
          count: {
            args: Prisma.EntrepreneurshipCountArgs<ExtArgs>
            result: $Utils.Optional<EntrepreneurshipCountAggregateOutputType> | number
          }
        }
      }
      BusinessPlan: {
        payload: Prisma.$BusinessPlanPayload<ExtArgs>
        fields: Prisma.BusinessPlanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessPlanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessPlanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          findFirst: {
            args: Prisma.BusinessPlanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessPlanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          findMany: {
            args: Prisma.BusinessPlanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>[]
          }
          create: {
            args: Prisma.BusinessPlanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          createMany: {
            args: Prisma.BusinessPlanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessPlanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>[]
          }
          delete: {
            args: Prisma.BusinessPlanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          update: {
            args: Prisma.BusinessPlanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          deleteMany: {
            args: Prisma.BusinessPlanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessPlanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BusinessPlanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPlanPayload>
          }
          aggregate: {
            args: Prisma.BusinessPlanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessPlan>
          }
          groupBy: {
            args: Prisma.BusinessPlanGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessPlanGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessPlanCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessPlanCountAggregateOutputType> | number
          }
        }
      }
      NewsArticle: {
        payload: Prisma.$NewsArticlePayload<ExtArgs>
        fields: Prisma.NewsArticleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsArticleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsArticleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          findFirst: {
            args: Prisma.NewsArticleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsArticleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          findMany: {
            args: Prisma.NewsArticleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>[]
          }
          create: {
            args: Prisma.NewsArticleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          createMany: {
            args: Prisma.NewsArticleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NewsArticleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>[]
          }
          delete: {
            args: Prisma.NewsArticleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          update: {
            args: Prisma.NewsArticleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          deleteMany: {
            args: Prisma.NewsArticleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsArticleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NewsArticleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsArticlePayload>
          }
          aggregate: {
            args: Prisma.NewsArticleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNewsArticle>
          }
          groupBy: {
            args: Prisma.NewsArticleGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsArticleGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsArticleCountArgs<ExtArgs>
            result: $Utils.Optional<NewsArticleCountAggregateOutputType> | number
          }
        }
      }
      NewsComment: {
        payload: Prisma.$NewsCommentPayload<ExtArgs>
        fields: Prisma.NewsCommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsCommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsCommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          findFirst: {
            args: Prisma.NewsCommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsCommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          findMany: {
            args: Prisma.NewsCommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>[]
          }
          create: {
            args: Prisma.NewsCommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          createMany: {
            args: Prisma.NewsCommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NewsCommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>[]
          }
          delete: {
            args: Prisma.NewsCommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          update: {
            args: Prisma.NewsCommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          deleteMany: {
            args: Prisma.NewsCommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsCommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NewsCommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsCommentPayload>
          }
          aggregate: {
            args: Prisma.NewsCommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNewsComment>
          }
          groupBy: {
            args: Prisma.NewsCommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsCommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsCommentCountArgs<ExtArgs>
            result: $Utils.Optional<NewsCommentCountAggregateOutputType> | number
          }
        }
      }
      Resource: {
        payload: Prisma.$ResourcePayload<ExtArgs>
        fields: Prisma.ResourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          findFirst: {
            args: Prisma.ResourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          findMany: {
            args: Prisma.ResourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>[]
          }
          create: {
            args: Prisma.ResourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          createMany: {
            args: Prisma.ResourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ResourceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>[]
          }
          delete: {
            args: Prisma.ResourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          update: {
            args: Prisma.ResourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          deleteMany: {
            args: Prisma.ResourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ResourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ResourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResourcePayload>
          }
          aggregate: {
            args: Prisma.ResourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResource>
          }
          groupBy: {
            args: Prisma.ResourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ResourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResourceCountArgs<ExtArgs>
            result: $Utils.Optional<ResourceCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      ExternalApiKey: {
        payload: Prisma.$ExternalApiKeyPayload<ExtArgs>
        fields: Prisma.ExternalApiKeyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExternalApiKeyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExternalApiKeyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          findFirst: {
            args: Prisma.ExternalApiKeyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExternalApiKeyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          findMany: {
            args: Prisma.ExternalApiKeyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>[]
          }
          create: {
            args: Prisma.ExternalApiKeyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          createMany: {
            args: Prisma.ExternalApiKeyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExternalApiKeyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>[]
          }
          delete: {
            args: Prisma.ExternalApiKeyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          update: {
            args: Prisma.ExternalApiKeyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          deleteMany: {
            args: Prisma.ExternalApiKeyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExternalApiKeyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ExternalApiKeyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalApiKeyPayload>
          }
          aggregate: {
            args: Prisma.ExternalApiKeyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExternalApiKey>
          }
          groupBy: {
            args: Prisma.ExternalApiKeyGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExternalApiKeyGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExternalApiKeyCountArgs<ExtArgs>
            result: $Utils.Optional<ExternalApiKeyCountAggregateOutputType> | number
          }
        }
      }
      Institution: {
        payload: Prisma.$InstitutionPayload<ExtArgs>
        fields: Prisma.InstitutionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InstitutionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InstitutionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          findFirst: {
            args: Prisma.InstitutionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InstitutionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          findMany: {
            args: Prisma.InstitutionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>[]
          }
          create: {
            args: Prisma.InstitutionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          createMany: {
            args: Prisma.InstitutionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InstitutionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>[]
          }
          delete: {
            args: Prisma.InstitutionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          update: {
            args: Prisma.InstitutionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          deleteMany: {
            args: Prisma.InstitutionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InstitutionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InstitutionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          aggregate: {
            args: Prisma.InstitutionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstitution>
          }
          groupBy: {
            args: Prisma.InstitutionGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstitutionGroupByOutputType>[]
          }
          count: {
            args: Prisma.InstitutionCountArgs<ExtArgs>
            result: $Utils.Optional<InstitutionCountAggregateOutputType> | number
          }
        }
      }
      Municipality: {
        payload: Prisma.$MunicipalityPayload<ExtArgs>
        fields: Prisma.MunicipalityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MunicipalityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MunicipalityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          findFirst: {
            args: Prisma.MunicipalityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MunicipalityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          findMany: {
            args: Prisma.MunicipalityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>[]
          }
          create: {
            args: Prisma.MunicipalityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          createMany: {
            args: Prisma.MunicipalityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MunicipalityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>[]
          }
          delete: {
            args: Prisma.MunicipalityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          update: {
            args: Prisma.MunicipalityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          deleteMany: {
            args: Prisma.MunicipalityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MunicipalityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MunicipalityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipalityPayload>
          }
          aggregate: {
            args: Prisma.MunicipalityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMunicipality>
          }
          groupBy: {
            args: Prisma.MunicipalityGroupByArgs<ExtArgs>
            result: $Utils.Optional<MunicipalityGroupByOutputType>[]
          }
          count: {
            args: Prisma.MunicipalityCountArgs<ExtArgs>
            result: $Utils.Optional<MunicipalityCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompanyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      Conversation: {
        payload: Prisma.$ConversationPayload<ExtArgs>
        fields: Prisma.ConversationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConversationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConversationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findFirst: {
            args: Prisma.ConversationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConversationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findMany: {
            args: Prisma.ConversationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          create: {
            args: Prisma.ConversationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          createMany: {
            args: Prisma.ConversationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConversationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          delete: {
            args: Prisma.ConversationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          update: {
            args: Prisma.ConversationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          deleteMany: {
            args: Prisma.ConversationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConversationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConversationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          aggregate: {
            args: Prisma.ConversationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConversation>
          }
          groupBy: {
            args: Prisma.ConversationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConversationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConversationCountArgs<ExtArgs>
            result: $Utils.Optional<ConversationCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      LessonResource: {
        payload: Prisma.$LessonResourcePayload<ExtArgs>
        fields: Prisma.LessonResourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LessonResourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LessonResourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          findFirst: {
            args: Prisma.LessonResourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LessonResourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          findMany: {
            args: Prisma.LessonResourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>[]
          }
          create: {
            args: Prisma.LessonResourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          createMany: {
            args: Prisma.LessonResourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LessonResourceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>[]
          }
          delete: {
            args: Prisma.LessonResourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          update: {
            args: Prisma.LessonResourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          deleteMany: {
            args: Prisma.LessonResourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LessonResourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LessonResourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LessonResourcePayload>
          }
          aggregate: {
            args: Prisma.LessonResourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLessonResource>
          }
          groupBy: {
            args: Prisma.LessonResourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<LessonResourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.LessonResourceCountArgs<ExtArgs>
            result: $Utils.Optional<LessonResourceCountAggregateOutputType> | number
          }
        }
      }
      ModuleCertificate: {
        payload: Prisma.$ModuleCertificatePayload<ExtArgs>
        fields: Prisma.ModuleCertificateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModuleCertificateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModuleCertificateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          findFirst: {
            args: Prisma.ModuleCertificateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModuleCertificateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          findMany: {
            args: Prisma.ModuleCertificateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>[]
          }
          create: {
            args: Prisma.ModuleCertificateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          createMany: {
            args: Prisma.ModuleCertificateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModuleCertificateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>[]
          }
          delete: {
            args: Prisma.ModuleCertificateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          update: {
            args: Prisma.ModuleCertificateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          deleteMany: {
            args: Prisma.ModuleCertificateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModuleCertificateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ModuleCertificateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModuleCertificatePayload>
          }
          aggregate: {
            args: Prisma.ModuleCertificateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModuleCertificate>
          }
          groupBy: {
            args: Prisma.ModuleCertificateGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModuleCertificateGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModuleCertificateCountArgs<ExtArgs>
            result: $Utils.Optional<ModuleCertificateCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    contacts: number
    contactOf: number
    sentMessages: number
    receivedMessages: number
    certificates: number
    courseEnrollments: number
    instructedCourses: number
    discussions: number
    entrepreneurships: number
    jobApplications: number
    newsArticles: number
    newsComments: number
    quizAttempts: number
    studentNotes: number
    moduleCertificates: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | ProfileCountOutputTypeCountContactsArgs
    contactOf?: boolean | ProfileCountOutputTypeCountContactOfArgs
    sentMessages?: boolean | ProfileCountOutputTypeCountSentMessagesArgs
    receivedMessages?: boolean | ProfileCountOutputTypeCountReceivedMessagesArgs
    certificates?: boolean | ProfileCountOutputTypeCountCertificatesArgs
    courseEnrollments?: boolean | ProfileCountOutputTypeCountCourseEnrollmentsArgs
    instructedCourses?: boolean | ProfileCountOutputTypeCountInstructedCoursesArgs
    discussions?: boolean | ProfileCountOutputTypeCountDiscussionsArgs
    entrepreneurships?: boolean | ProfileCountOutputTypeCountEntrepreneurshipsArgs
    jobApplications?: boolean | ProfileCountOutputTypeCountJobApplicationsArgs
    newsArticles?: boolean | ProfileCountOutputTypeCountNewsArticlesArgs
    newsComments?: boolean | ProfileCountOutputTypeCountNewsCommentsArgs
    quizAttempts?: boolean | ProfileCountOutputTypeCountQuizAttemptsArgs
    studentNotes?: boolean | ProfileCountOutputTypeCountStudentNotesArgs
    moduleCertificates?: boolean | ProfileCountOutputTypeCountModuleCertificatesArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountContactOfArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificateWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountCourseEnrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseEnrollmentWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountInstructedCoursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountDiscussionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscussionWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountEntrepreneurshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntrepreneurshipWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountJobApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountNewsArticlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsArticleWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountNewsCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsCommentWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountQuizAttemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAttemptWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountStudentNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StudentNoteWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountModuleCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModuleCertificateWhereInput
  }


  /**
   * Count Type JobOfferCountOutputType
   */

  export type JobOfferCountOutputType = {
    applications: number
    jobQuestions: number
  }

  export type JobOfferCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | JobOfferCountOutputTypeCountApplicationsArgs
    jobQuestions?: boolean | JobOfferCountOutputTypeCountJobQuestionsArgs
  }

  // Custom InputTypes
  /**
   * JobOfferCountOutputType without action
   */
  export type JobOfferCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOfferCountOutputType
     */
    select?: JobOfferCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobOfferCountOutputType without action
   */
  export type JobOfferCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationWhereInput
  }

  /**
   * JobOfferCountOutputType without action
   */
  export type JobOfferCountOutputTypeCountJobQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobQuestionWhereInput
  }


  /**
   * Count Type JobQuestionCountOutputType
   */

  export type JobQuestionCountOutputType = {
    questionAnswers: number
  }

  export type JobQuestionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    questionAnswers?: boolean | JobQuestionCountOutputTypeCountQuestionAnswersArgs
  }

  // Custom InputTypes
  /**
   * JobQuestionCountOutputType without action
   */
  export type JobQuestionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionCountOutputType
     */
    select?: JobQuestionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobQuestionCountOutputType without action
   */
  export type JobQuestionCountOutputTypeCountQuestionAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobQuestionAnswerWhereInput
  }


  /**
   * Count Type JobApplicationCountOutputType
   */

  export type JobApplicationCountOutputType = {
    questionAnswers: number
    messages: number
  }

  export type JobApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    questionAnswers?: boolean | JobApplicationCountOutputTypeCountQuestionAnswersArgs
    messages?: boolean | JobApplicationCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * JobApplicationCountOutputType without action
   */
  export type JobApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationCountOutputType
     */
    select?: JobApplicationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobApplicationCountOutputType without action
   */
  export type JobApplicationCountOutputTypeCountQuestionAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobQuestionAnswerWhereInput
  }

  /**
   * JobApplicationCountOutputType without action
   */
  export type JobApplicationCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationMessageWhereInput
  }


  /**
   * Count Type CourseCountOutputType
   */

  export type CourseCountOutputType = {
    certificates: number
    enrollments: number
    modules: number
    quizzes: number
  }

  export type CourseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    certificates?: boolean | CourseCountOutputTypeCountCertificatesArgs
    enrollments?: boolean | CourseCountOutputTypeCountEnrollmentsArgs
    modules?: boolean | CourseCountOutputTypeCountModulesArgs
    quizzes?: boolean | CourseCountOutputTypeCountQuizzesArgs
  }

  // Custom InputTypes
  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseCountOutputType
     */
    select?: CourseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificateWhereInput
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountEnrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseEnrollmentWhereInput
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseModuleWhereInput
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountQuizzesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizWhereInput
  }


  /**
   * Count Type CourseModuleCountOutputType
   */

  export type CourseModuleCountOutputType = {
    lessons: number
    moduleCertificates: number
  }

  export type CourseModuleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lessons?: boolean | CourseModuleCountOutputTypeCountLessonsArgs
    moduleCertificates?: boolean | CourseModuleCountOutputTypeCountModuleCertificatesArgs
  }

  // Custom InputTypes
  /**
   * CourseModuleCountOutputType without action
   */
  export type CourseModuleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModuleCountOutputType
     */
    select?: CourseModuleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CourseModuleCountOutputType without action
   */
  export type CourseModuleCountOutputTypeCountLessonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonWhereInput
  }

  /**
   * CourseModuleCountOutputType without action
   */
  export type CourseModuleCountOutputTypeCountModuleCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModuleCertificateWhereInput
  }


  /**
   * Count Type LessonCountOutputType
   */

  export type LessonCountOutputType = {
    resources: number
    discussions: number
    progress: number
    quizzes: number
    notes: number
  }

  export type LessonCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    resources?: boolean | LessonCountOutputTypeCountResourcesArgs
    discussions?: boolean | LessonCountOutputTypeCountDiscussionsArgs
    progress?: boolean | LessonCountOutputTypeCountProgressArgs
    quizzes?: boolean | LessonCountOutputTypeCountQuizzesArgs
    notes?: boolean | LessonCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes
  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonCountOutputType
     */
    select?: LessonCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeCountResourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonResourceWhereInput
  }

  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeCountDiscussionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscussionWhereInput
  }

  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeCountProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonProgressWhereInput
  }

  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeCountQuizzesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizWhereInput
  }

  /**
   * LessonCountOutputType without action
   */
  export type LessonCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StudentNoteWhereInput
  }


  /**
   * Count Type CourseEnrollmentCountOutputType
   */

  export type CourseEnrollmentCountOutputType = {
    lessonProgress: number
    quizAttempts: number
  }

  export type CourseEnrollmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lessonProgress?: boolean | CourseEnrollmentCountOutputTypeCountLessonProgressArgs
    quizAttempts?: boolean | CourseEnrollmentCountOutputTypeCountQuizAttemptsArgs
  }

  // Custom InputTypes
  /**
   * CourseEnrollmentCountOutputType without action
   */
  export type CourseEnrollmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollmentCountOutputType
     */
    select?: CourseEnrollmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CourseEnrollmentCountOutputType without action
   */
  export type CourseEnrollmentCountOutputTypeCountLessonProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonProgressWhereInput
  }

  /**
   * CourseEnrollmentCountOutputType without action
   */
  export type CourseEnrollmentCountOutputTypeCountQuizAttemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAttemptWhereInput
  }


  /**
   * Count Type QuizCountOutputType
   */

  export type QuizCountOutputType = {
    attempts: number
    questions: number
  }

  export type QuizCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attempts?: boolean | QuizCountOutputTypeCountAttemptsArgs
    questions?: boolean | QuizCountOutputTypeCountQuestionsArgs
  }

  // Custom InputTypes
  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizCountOutputType
     */
    select?: QuizCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeCountAttemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAttemptWhereInput
  }

  /**
   * QuizCountOutputType without action
   */
  export type QuizCountOutputTypeCountQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizQuestionWhereInput
  }


  /**
   * Count Type QuizQuestionCountOutputType
   */

  export type QuizQuestionCountOutputType = {
    answers: number
  }

  export type QuizQuestionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answers?: boolean | QuizQuestionCountOutputTypeCountAnswersArgs
  }

  // Custom InputTypes
  /**
   * QuizQuestionCountOutputType without action
   */
  export type QuizQuestionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestionCountOutputType
     */
    select?: QuizQuestionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * QuizQuestionCountOutputType without action
   */
  export type QuizQuestionCountOutputTypeCountAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAnswerWhereInput
  }


  /**
   * Count Type QuizAttemptCountOutputType
   */

  export type QuizAttemptCountOutputType = {
    answers: number
  }

  export type QuizAttemptCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answers?: boolean | QuizAttemptCountOutputTypeCountAnswersArgs
  }

  // Custom InputTypes
  /**
   * QuizAttemptCountOutputType without action
   */
  export type QuizAttemptCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttemptCountOutputType
     */
    select?: QuizAttemptCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * QuizAttemptCountOutputType without action
   */
  export type QuizAttemptCountOutputTypeCountAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAnswerWhereInput
  }


  /**
   * Count Type DiscussionCountOutputType
   */

  export type DiscussionCountOutputType = {
    replies: number
  }

  export type DiscussionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies?: boolean | DiscussionCountOutputTypeCountRepliesArgs
  }

  // Custom InputTypes
  /**
   * DiscussionCountOutputType without action
   */
  export type DiscussionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscussionCountOutputType
     */
    select?: DiscussionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscussionCountOutputType without action
   */
  export type DiscussionCountOutputTypeCountRepliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscussionWhereInput
  }


  /**
   * Count Type NewsArticleCountOutputType
   */

  export type NewsArticleCountOutputType = {
    comments: number
  }

  export type NewsArticleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | NewsArticleCountOutputTypeCountCommentsArgs
  }

  // Custom InputTypes
  /**
   * NewsArticleCountOutputType without action
   */
  export type NewsArticleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticleCountOutputType
     */
    select?: NewsArticleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NewsArticleCountOutputType without action
   */
  export type NewsArticleCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsCommentWhereInput
  }


  /**
   * Count Type NewsCommentCountOutputType
   */

  export type NewsCommentCountOutputType = {
    replies: number
  }

  export type NewsCommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies?: boolean | NewsCommentCountOutputTypeCountRepliesArgs
  }

  // Custom InputTypes
  /**
   * NewsCommentCountOutputType without action
   */
  export type NewsCommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsCommentCountOutputType
     */
    select?: NewsCommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NewsCommentCountOutputType without action
   */
  export type NewsCommentCountOutputTypeCountRepliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsCommentWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    createdCompanies: number
    createdInstitutions: number
    createdMunicipalities: number
    refreshTokens: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdCompanies?: boolean | UserCountOutputTypeCountCreatedCompaniesArgs
    createdInstitutions?: boolean | UserCountOutputTypeCountCreatedInstitutionsArgs
    createdMunicipalities?: boolean | UserCountOutputTypeCountCreatedMunicipalitiesArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedInstitutionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitutionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedMunicipalitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipalityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type MunicipalityCountOutputType
   */

  export type MunicipalityCountOutputType = {
    companies: number
  }

  export type MunicipalityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | MunicipalityCountOutputTypeCountCompaniesArgs
  }

  // Custom InputTypes
  /**
   * MunicipalityCountOutputType without action
   */
  export type MunicipalityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MunicipalityCountOutputType
     */
    select?: MunicipalityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MunicipalityCountOutputType without action
   */
  export type MunicipalityCountOutputTypeCountCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
  }


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    jobOffers: number
    profiles: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobOffers?: boolean | CompanyCountOutputTypeCountJobOffersArgs
    profiles?: boolean | CompanyCountOutputTypeCountProfilesArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountJobOffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobOfferWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }


  /**
   * Count Type ConversationCountOutputType
   */

  export type ConversationCountOutputType = {
    messages: number
  }

  export type ConversationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    messages?: boolean | ConversationCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversationCountOutputType
     */
    select?: ConversationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    graduationYear: number | null
    gpa: number | null
    foundedYear: number | null
    profileCompletion: number | null
  }

  export type ProfileSumAggregateOutputType = {
    graduationYear: number | null
    gpa: number | null
    foundedYear: number | null
    profileCompletion: number | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    userId: string | null
    avatarUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
    active: boolean | null
    status: $Enums.UserStatus | null
    role: $Enums.UserRole | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string | null
    department: string | null
    country: string | null
    birthDate: Date | null
    gender: string | null
    documentType: string | null
    documentNumber: string | null
    educationLevel: $Enums.EducationLevel | null
    currentInstitution: string | null
    graduationYear: number | null
    isStudying: boolean | null
    currentDegree: string | null
    universityName: string | null
    universityStartDate: Date | null
    universityEndDate: Date | null
    universityStatus: string | null
    gpa: number | null
    companyName: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    companyDescription: string | null
    website: string | null
    foundedYear: number | null
    institutionName: string | null
    institutionType: string | null
    serviceArea: string | null
    institutionDescription: string | null
    profileCompletion: number | null
    lastLoginAt: Date | null
    parentalConsent: boolean | null
    parentEmail: string | null
    consentDate: Date | null
    jobTitle: string | null
    addressLine: string | null
    cityState: string | null
    coverLetterSubject: string | null
    coverLetterContent: string | null
    coverLetterTemplate: string | null
    companyId: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    avatarUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
    active: boolean | null
    status: $Enums.UserStatus | null
    role: $Enums.UserRole | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string | null
    department: string | null
    country: string | null
    birthDate: Date | null
    gender: string | null
    documentType: string | null
    documentNumber: string | null
    educationLevel: $Enums.EducationLevel | null
    currentInstitution: string | null
    graduationYear: number | null
    isStudying: boolean | null
    currentDegree: string | null
    universityName: string | null
    universityStartDate: Date | null
    universityEndDate: Date | null
    universityStatus: string | null
    gpa: number | null
    companyName: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    companyDescription: string | null
    website: string | null
    foundedYear: number | null
    institutionName: string | null
    institutionType: string | null
    serviceArea: string | null
    institutionDescription: string | null
    profileCompletion: number | null
    lastLoginAt: Date | null
    parentalConsent: boolean | null
    parentEmail: string | null
    consentDate: Date | null
    jobTitle: string | null
    addressLine: string | null
    cityState: string | null
    coverLetterSubject: string | null
    coverLetterContent: string | null
    coverLetterTemplate: string | null
    companyId: string | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    userId: number
    avatarUrl: number
    createdAt: number
    updatedAt: number
    active: number
    status: number
    role: number
    firstName: number
    lastName: number
    email: number
    phone: number
    address: number
    municipality: number
    department: number
    country: number
    birthDate: number
    gender: number
    documentType: number
    documentNumber: number
    educationLevel: number
    currentInstitution: number
    graduationYear: number
    isStudying: number
    educationHistory: number
    currentDegree: number
    universityName: number
    universityStartDate: number
    universityEndDate: number
    universityStatus: number
    gpa: number
    academicAchievements: number
    skills: number
    interests: number
    workExperience: number
    companyName: number
    taxId: number
    legalRepresentative: number
    businessSector: number
    companySize: number
    companyDescription: number
    website: number
    foundedYear: number
    institutionName: number
    institutionType: number
    serviceArea: number
    specialization: number
    institutionDescription: number
    profileCompletion: number
    lastLoginAt: number
    parentalConsent: number
    parentEmail: number
    consentDate: number
    achievements: number
    jobTitle: number
    addressLine: number
    cityState: number
    languages: number
    websites: number
    skillsWithLevel: number
    extracurricularActivities: number
    projects: number
    coverLetterRecipient: number
    coverLetterSubject: number
    coverLetterContent: number
    coverLetterTemplate: number
    companyId: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    graduationYear?: true
    gpa?: true
    foundedYear?: true
    profileCompletion?: true
  }

  export type ProfileSumAggregateInputType = {
    graduationYear?: true
    gpa?: true
    foundedYear?: true
    profileCompletion?: true
  }

  export type ProfileMinAggregateInputType = {
    id?: true
    userId?: true
    avatarUrl?: true
    createdAt?: true
    updatedAt?: true
    active?: true
    status?: true
    role?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    country?: true
    birthDate?: true
    gender?: true
    documentType?: true
    documentNumber?: true
    educationLevel?: true
    currentInstitution?: true
    graduationYear?: true
    isStudying?: true
    currentDegree?: true
    universityName?: true
    universityStartDate?: true
    universityEndDate?: true
    universityStatus?: true
    gpa?: true
    companyName?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    companyDescription?: true
    website?: true
    foundedYear?: true
    institutionName?: true
    institutionType?: true
    serviceArea?: true
    institutionDescription?: true
    profileCompletion?: true
    lastLoginAt?: true
    parentalConsent?: true
    parentEmail?: true
    consentDate?: true
    jobTitle?: true
    addressLine?: true
    cityState?: true
    coverLetterSubject?: true
    coverLetterContent?: true
    coverLetterTemplate?: true
    companyId?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    userId?: true
    avatarUrl?: true
    createdAt?: true
    updatedAt?: true
    active?: true
    status?: true
    role?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    country?: true
    birthDate?: true
    gender?: true
    documentType?: true
    documentNumber?: true
    educationLevel?: true
    currentInstitution?: true
    graduationYear?: true
    isStudying?: true
    currentDegree?: true
    universityName?: true
    universityStartDate?: true
    universityEndDate?: true
    universityStatus?: true
    gpa?: true
    companyName?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    companyDescription?: true
    website?: true
    foundedYear?: true
    institutionName?: true
    institutionType?: true
    serviceArea?: true
    institutionDescription?: true
    profileCompletion?: true
    lastLoginAt?: true
    parentalConsent?: true
    parentEmail?: true
    consentDate?: true
    jobTitle?: true
    addressLine?: true
    cityState?: true
    coverLetterSubject?: true
    coverLetterContent?: true
    coverLetterTemplate?: true
    companyId?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    userId?: true
    avatarUrl?: true
    createdAt?: true
    updatedAt?: true
    active?: true
    status?: true
    role?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    country?: true
    birthDate?: true
    gender?: true
    documentType?: true
    documentNumber?: true
    educationLevel?: true
    currentInstitution?: true
    graduationYear?: true
    isStudying?: true
    educationHistory?: true
    currentDegree?: true
    universityName?: true
    universityStartDate?: true
    universityEndDate?: true
    universityStatus?: true
    gpa?: true
    academicAchievements?: true
    skills?: true
    interests?: true
    workExperience?: true
    companyName?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    companyDescription?: true
    website?: true
    foundedYear?: true
    institutionName?: true
    institutionType?: true
    serviceArea?: true
    specialization?: true
    institutionDescription?: true
    profileCompletion?: true
    lastLoginAt?: true
    parentalConsent?: true
    parentEmail?: true
    consentDate?: true
    achievements?: true
    jobTitle?: true
    addressLine?: true
    cityState?: true
    languages?: true
    websites?: true
    skillsWithLevel?: true
    extracurricularActivities?: true
    projects?: true
    coverLetterRecipient?: true
    coverLetterSubject?: true
    coverLetterContent?: true
    coverLetterTemplate?: true
    companyId?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    userId: string
    avatarUrl: string | null
    createdAt: Date
    updatedAt: Date
    active: boolean
    status: $Enums.UserStatus
    role: $Enums.UserRole
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string | null
    department: string | null
    country: string | null
    birthDate: Date | null
    gender: string | null
    documentType: string | null
    documentNumber: string | null
    educationLevel: $Enums.EducationLevel | null
    currentInstitution: string | null
    graduationYear: number | null
    isStudying: boolean | null
    educationHistory: JsonValue | null
    currentDegree: string | null
    universityName: string | null
    universityStartDate: Date | null
    universityEndDate: Date | null
    universityStatus: string | null
    gpa: number | null
    academicAchievements: JsonValue | null
    skills: string[]
    interests: string[]
    workExperience: JsonValue | null
    companyName: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    companyDescription: string | null
    website: string | null
    foundedYear: number | null
    institutionName: string | null
    institutionType: string | null
    serviceArea: string | null
    specialization: string[]
    institutionDescription: string | null
    profileCompletion: number
    lastLoginAt: Date | null
    parentalConsent: boolean
    parentEmail: string | null
    consentDate: Date | null
    achievements: JsonValue | null
    jobTitle: string | null
    addressLine: string | null
    cityState: string | null
    languages: JsonValue | null
    websites: JsonValue | null
    skillsWithLevel: JsonValue | null
    extracurricularActivities: JsonValue | null
    projects: JsonValue | null
    coverLetterRecipient: JsonValue | null
    coverLetterSubject: string | null
    coverLetterContent: string | null
    coverLetterTemplate: string | null
    companyId: string | null
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    avatarUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    active?: boolean
    status?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    country?: boolean
    birthDate?: boolean
    gender?: boolean
    documentType?: boolean
    documentNumber?: boolean
    educationLevel?: boolean
    currentInstitution?: boolean
    graduationYear?: boolean
    isStudying?: boolean
    educationHistory?: boolean
    currentDegree?: boolean
    universityName?: boolean
    universityStartDate?: boolean
    universityEndDate?: boolean
    universityStatus?: boolean
    gpa?: boolean
    academicAchievements?: boolean
    skills?: boolean
    interests?: boolean
    workExperience?: boolean
    companyName?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    companyDescription?: boolean
    website?: boolean
    foundedYear?: boolean
    institutionName?: boolean
    institutionType?: boolean
    serviceArea?: boolean
    specialization?: boolean
    institutionDescription?: boolean
    profileCompletion?: boolean
    lastLoginAt?: boolean
    parentalConsent?: boolean
    parentEmail?: boolean
    consentDate?: boolean
    achievements?: boolean
    jobTitle?: boolean
    addressLine?: boolean
    cityState?: boolean
    languages?: boolean
    websites?: boolean
    skillsWithLevel?: boolean
    extracurricularActivities?: boolean
    projects?: boolean
    coverLetterRecipient?: boolean
    coverLetterSubject?: boolean
    coverLetterContent?: boolean
    coverLetterTemplate?: boolean
    companyId?: boolean
    contacts?: boolean | Profile$contactsArgs<ExtArgs>
    contactOf?: boolean | Profile$contactOfArgs<ExtArgs>
    sentMessages?: boolean | Profile$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | Profile$receivedMessagesArgs<ExtArgs>
    certificates?: boolean | Profile$certificatesArgs<ExtArgs>
    courseEnrollments?: boolean | Profile$courseEnrollmentsArgs<ExtArgs>
    instructedCourses?: boolean | Profile$instructedCoursesArgs<ExtArgs>
    discussions?: boolean | Profile$discussionsArgs<ExtArgs>
    entrepreneurships?: boolean | Profile$entrepreneurshipsArgs<ExtArgs>
    jobApplications?: boolean | Profile$jobApplicationsArgs<ExtArgs>
    newsArticles?: boolean | Profile$newsArticlesArgs<ExtArgs>
    newsComments?: boolean | Profile$newsCommentsArgs<ExtArgs>
    company?: boolean | Profile$companyArgs<ExtArgs>
    quizAttempts?: boolean | Profile$quizAttemptsArgs<ExtArgs>
    studentNotes?: boolean | Profile$studentNotesArgs<ExtArgs>
    moduleCertificates?: boolean | Profile$moduleCertificatesArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    avatarUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    active?: boolean
    status?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    country?: boolean
    birthDate?: boolean
    gender?: boolean
    documentType?: boolean
    documentNumber?: boolean
    educationLevel?: boolean
    currentInstitution?: boolean
    graduationYear?: boolean
    isStudying?: boolean
    educationHistory?: boolean
    currentDegree?: boolean
    universityName?: boolean
    universityStartDate?: boolean
    universityEndDate?: boolean
    universityStatus?: boolean
    gpa?: boolean
    academicAchievements?: boolean
    skills?: boolean
    interests?: boolean
    workExperience?: boolean
    companyName?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    companyDescription?: boolean
    website?: boolean
    foundedYear?: boolean
    institutionName?: boolean
    institutionType?: boolean
    serviceArea?: boolean
    specialization?: boolean
    institutionDescription?: boolean
    profileCompletion?: boolean
    lastLoginAt?: boolean
    parentalConsent?: boolean
    parentEmail?: boolean
    consentDate?: boolean
    achievements?: boolean
    jobTitle?: boolean
    addressLine?: boolean
    cityState?: boolean
    languages?: boolean
    websites?: boolean
    skillsWithLevel?: boolean
    extracurricularActivities?: boolean
    projects?: boolean
    coverLetterRecipient?: boolean
    coverLetterSubject?: boolean
    coverLetterContent?: boolean
    coverLetterTemplate?: boolean
    companyId?: boolean
    company?: boolean | Profile$companyArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectScalar = {
    id?: boolean
    userId?: boolean
    avatarUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    active?: boolean
    status?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    country?: boolean
    birthDate?: boolean
    gender?: boolean
    documentType?: boolean
    documentNumber?: boolean
    educationLevel?: boolean
    currentInstitution?: boolean
    graduationYear?: boolean
    isStudying?: boolean
    educationHistory?: boolean
    currentDegree?: boolean
    universityName?: boolean
    universityStartDate?: boolean
    universityEndDate?: boolean
    universityStatus?: boolean
    gpa?: boolean
    academicAchievements?: boolean
    skills?: boolean
    interests?: boolean
    workExperience?: boolean
    companyName?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    companyDescription?: boolean
    website?: boolean
    foundedYear?: boolean
    institutionName?: boolean
    institutionType?: boolean
    serviceArea?: boolean
    specialization?: boolean
    institutionDescription?: boolean
    profileCompletion?: boolean
    lastLoginAt?: boolean
    parentalConsent?: boolean
    parentEmail?: boolean
    consentDate?: boolean
    achievements?: boolean
    jobTitle?: boolean
    addressLine?: boolean
    cityState?: boolean
    languages?: boolean
    websites?: boolean
    skillsWithLevel?: boolean
    extracurricularActivities?: boolean
    projects?: boolean
    coverLetterRecipient?: boolean
    coverLetterSubject?: boolean
    coverLetterContent?: boolean
    coverLetterTemplate?: boolean
    companyId?: boolean
  }

  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contacts?: boolean | Profile$contactsArgs<ExtArgs>
    contactOf?: boolean | Profile$contactOfArgs<ExtArgs>
    sentMessages?: boolean | Profile$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | Profile$receivedMessagesArgs<ExtArgs>
    certificates?: boolean | Profile$certificatesArgs<ExtArgs>
    courseEnrollments?: boolean | Profile$courseEnrollmentsArgs<ExtArgs>
    instructedCourses?: boolean | Profile$instructedCoursesArgs<ExtArgs>
    discussions?: boolean | Profile$discussionsArgs<ExtArgs>
    entrepreneurships?: boolean | Profile$entrepreneurshipsArgs<ExtArgs>
    jobApplications?: boolean | Profile$jobApplicationsArgs<ExtArgs>
    newsArticles?: boolean | Profile$newsArticlesArgs<ExtArgs>
    newsComments?: boolean | Profile$newsCommentsArgs<ExtArgs>
    company?: boolean | Profile$companyArgs<ExtArgs>
    quizAttempts?: boolean | Profile$quizAttemptsArgs<ExtArgs>
    studentNotes?: boolean | Profile$studentNotesArgs<ExtArgs>
    moduleCertificates?: boolean | Profile$moduleCertificatesArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | Profile$companyArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      contacts: Prisma.$ContactPayload<ExtArgs>[]
      contactOf: Prisma.$ContactPayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      certificates: Prisma.$CertificatePayload<ExtArgs>[]
      courseEnrollments: Prisma.$CourseEnrollmentPayload<ExtArgs>[]
      instructedCourses: Prisma.$CoursePayload<ExtArgs>[]
      discussions: Prisma.$DiscussionPayload<ExtArgs>[]
      entrepreneurships: Prisma.$EntrepreneurshipPayload<ExtArgs>[]
      jobApplications: Prisma.$JobApplicationPayload<ExtArgs>[]
      newsArticles: Prisma.$NewsArticlePayload<ExtArgs>[]
      newsComments: Prisma.$NewsCommentPayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs> | null
      quizAttempts: Prisma.$QuizAttemptPayload<ExtArgs>[]
      studentNotes: Prisma.$StudentNotePayload<ExtArgs>[]
      moduleCertificates: Prisma.$ModuleCertificatePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      avatarUrl: string | null
      createdAt: Date
      updatedAt: Date
      active: boolean
      status: $Enums.UserStatus
      role: $Enums.UserRole
      firstName: string | null
      lastName: string | null
      email: string | null
      phone: string | null
      address: string | null
      municipality: string | null
      department: string | null
      country: string | null
      birthDate: Date | null
      gender: string | null
      documentType: string | null
      documentNumber: string | null
      educationLevel: $Enums.EducationLevel | null
      currentInstitution: string | null
      graduationYear: number | null
      isStudying: boolean | null
      educationHistory: Prisma.JsonValue | null
      currentDegree: string | null
      universityName: string | null
      universityStartDate: Date | null
      universityEndDate: Date | null
      universityStatus: string | null
      gpa: number | null
      academicAchievements: Prisma.JsonValue | null
      skills: string[]
      interests: string[]
      workExperience: Prisma.JsonValue | null
      companyName: string | null
      taxId: string | null
      legalRepresentative: string | null
      businessSector: string | null
      companySize: $Enums.CompanySize | null
      companyDescription: string | null
      website: string | null
      foundedYear: number | null
      institutionName: string | null
      institutionType: string | null
      serviceArea: string | null
      specialization: string[]
      institutionDescription: string | null
      profileCompletion: number
      lastLoginAt: Date | null
      parentalConsent: boolean
      parentEmail: string | null
      consentDate: Date | null
      achievements: Prisma.JsonValue | null
      jobTitle: string | null
      addressLine: string | null
      cityState: string | null
      languages: Prisma.JsonValue | null
      websites: Prisma.JsonValue | null
      skillsWithLevel: Prisma.JsonValue | null
      extracurricularActivities: Prisma.JsonValue | null
      projects: Prisma.JsonValue | null
      coverLetterRecipient: Prisma.JsonValue | null
      coverLetterSubject: string | null
      coverLetterContent: string | null
      coverLetterTemplate: string | null
      companyId: string | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contacts<T extends Profile$contactsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$contactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany"> | Null>
    contactOf<T extends Profile$contactOfArgs<ExtArgs> = {}>(args?: Subset<T, Profile$contactOfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany"> | Null>
    sentMessages<T extends Profile$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    receivedMessages<T extends Profile$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    certificates<T extends Profile$certificatesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$certificatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findMany"> | Null>
    courseEnrollments<T extends Profile$courseEnrollmentsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$courseEnrollmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findMany"> | Null>
    instructedCourses<T extends Profile$instructedCoursesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$instructedCoursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findMany"> | Null>
    discussions<T extends Profile$discussionsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$discussionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findMany"> | Null>
    entrepreneurships<T extends Profile$entrepreneurshipsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$entrepreneurshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findMany"> | Null>
    jobApplications<T extends Profile$jobApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$jobApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    newsArticles<T extends Profile$newsArticlesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$newsArticlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findMany"> | Null>
    newsComments<T extends Profile$newsCommentsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$newsCommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findMany"> | Null>
    company<T extends Profile$companyArgs<ExtArgs> = {}>(args?: Subset<T, Profile$companyArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    quizAttempts<T extends Profile$quizAttemptsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$quizAttemptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findMany"> | Null>
    studentNotes<T extends Profile$studentNotesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$studentNotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findMany"> | Null>
    moduleCertificates<T extends Profile$moduleCertificatesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$moduleCertificatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */ 
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'String'>
    readonly userId: FieldRef<"Profile", 'String'>
    readonly avatarUrl: FieldRef<"Profile", 'String'>
    readonly createdAt: FieldRef<"Profile", 'DateTime'>
    readonly updatedAt: FieldRef<"Profile", 'DateTime'>
    readonly active: FieldRef<"Profile", 'Boolean'>
    readonly status: FieldRef<"Profile", 'UserStatus'>
    readonly role: FieldRef<"Profile", 'UserRole'>
    readonly firstName: FieldRef<"Profile", 'String'>
    readonly lastName: FieldRef<"Profile", 'String'>
    readonly email: FieldRef<"Profile", 'String'>
    readonly phone: FieldRef<"Profile", 'String'>
    readonly address: FieldRef<"Profile", 'String'>
    readonly municipality: FieldRef<"Profile", 'String'>
    readonly department: FieldRef<"Profile", 'String'>
    readonly country: FieldRef<"Profile", 'String'>
    readonly birthDate: FieldRef<"Profile", 'DateTime'>
    readonly gender: FieldRef<"Profile", 'String'>
    readonly documentType: FieldRef<"Profile", 'String'>
    readonly documentNumber: FieldRef<"Profile", 'String'>
    readonly educationLevel: FieldRef<"Profile", 'EducationLevel'>
    readonly currentInstitution: FieldRef<"Profile", 'String'>
    readonly graduationYear: FieldRef<"Profile", 'Int'>
    readonly isStudying: FieldRef<"Profile", 'Boolean'>
    readonly educationHistory: FieldRef<"Profile", 'Json'>
    readonly currentDegree: FieldRef<"Profile", 'String'>
    readonly universityName: FieldRef<"Profile", 'String'>
    readonly universityStartDate: FieldRef<"Profile", 'DateTime'>
    readonly universityEndDate: FieldRef<"Profile", 'DateTime'>
    readonly universityStatus: FieldRef<"Profile", 'String'>
    readonly gpa: FieldRef<"Profile", 'Float'>
    readonly academicAchievements: FieldRef<"Profile", 'Json'>
    readonly skills: FieldRef<"Profile", 'String[]'>
    readonly interests: FieldRef<"Profile", 'String[]'>
    readonly workExperience: FieldRef<"Profile", 'Json'>
    readonly companyName: FieldRef<"Profile", 'String'>
    readonly taxId: FieldRef<"Profile", 'String'>
    readonly legalRepresentative: FieldRef<"Profile", 'String'>
    readonly businessSector: FieldRef<"Profile", 'String'>
    readonly companySize: FieldRef<"Profile", 'CompanySize'>
    readonly companyDescription: FieldRef<"Profile", 'String'>
    readonly website: FieldRef<"Profile", 'String'>
    readonly foundedYear: FieldRef<"Profile", 'Int'>
    readonly institutionName: FieldRef<"Profile", 'String'>
    readonly institutionType: FieldRef<"Profile", 'String'>
    readonly serviceArea: FieldRef<"Profile", 'String'>
    readonly specialization: FieldRef<"Profile", 'String[]'>
    readonly institutionDescription: FieldRef<"Profile", 'String'>
    readonly profileCompletion: FieldRef<"Profile", 'Int'>
    readonly lastLoginAt: FieldRef<"Profile", 'DateTime'>
    readonly parentalConsent: FieldRef<"Profile", 'Boolean'>
    readonly parentEmail: FieldRef<"Profile", 'String'>
    readonly consentDate: FieldRef<"Profile", 'DateTime'>
    readonly achievements: FieldRef<"Profile", 'Json'>
    readonly jobTitle: FieldRef<"Profile", 'String'>
    readonly addressLine: FieldRef<"Profile", 'String'>
    readonly cityState: FieldRef<"Profile", 'String'>
    readonly languages: FieldRef<"Profile", 'Json'>
    readonly websites: FieldRef<"Profile", 'Json'>
    readonly skillsWithLevel: FieldRef<"Profile", 'Json'>
    readonly extracurricularActivities: FieldRef<"Profile", 'Json'>
    readonly projects: FieldRef<"Profile", 'Json'>
    readonly coverLetterRecipient: FieldRef<"Profile", 'Json'>
    readonly coverLetterSubject: FieldRef<"Profile", 'String'>
    readonly coverLetterContent: FieldRef<"Profile", 'String'>
    readonly coverLetterTemplate: FieldRef<"Profile", 'String'>
    readonly companyId: FieldRef<"Profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile createManyAndReturn
   */
  export type ProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
  }

  /**
   * Profile.contacts
   */
  export type Profile$contactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Profile.contactOf
   */
  export type Profile$contactOfArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Profile.sentMessages
   */
  export type Profile$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Profile.receivedMessages
   */
  export type Profile$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Profile.certificates
   */
  export type Profile$certificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    where?: CertificateWhereInput
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    cursor?: CertificateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CertificateScalarFieldEnum | CertificateScalarFieldEnum[]
  }

  /**
   * Profile.courseEnrollments
   */
  export type Profile$courseEnrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    where?: CourseEnrollmentWhereInput
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    cursor?: CourseEnrollmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CourseEnrollmentScalarFieldEnum | CourseEnrollmentScalarFieldEnum[]
  }

  /**
   * Profile.instructedCourses
   */
  export type Profile$instructedCoursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    where?: CourseWhereInput
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    cursor?: CourseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Profile.discussions
   */
  export type Profile$discussionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    where?: DiscussionWhereInput
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    cursor?: DiscussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Profile.entrepreneurships
   */
  export type Profile$entrepreneurshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    where?: EntrepreneurshipWhereInput
    orderBy?: EntrepreneurshipOrderByWithRelationInput | EntrepreneurshipOrderByWithRelationInput[]
    cursor?: EntrepreneurshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntrepreneurshipScalarFieldEnum | EntrepreneurshipScalarFieldEnum[]
  }

  /**
   * Profile.jobApplications
   */
  export type Profile$jobApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    where?: JobApplicationWhereInput
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    cursor?: JobApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * Profile.newsArticles
   */
  export type Profile$newsArticlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    where?: NewsArticleWhereInput
    orderBy?: NewsArticleOrderByWithRelationInput | NewsArticleOrderByWithRelationInput[]
    cursor?: NewsArticleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsArticleScalarFieldEnum | NewsArticleScalarFieldEnum[]
  }

  /**
   * Profile.newsComments
   */
  export type Profile$newsCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    where?: NewsCommentWhereInput
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    cursor?: NewsCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * Profile.company
   */
  export type Profile$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
  }

  /**
   * Profile.quizAttempts
   */
  export type Profile$quizAttemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    where?: QuizAttemptWhereInput
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    cursor?: QuizAttemptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * Profile.studentNotes
   */
  export type Profile$studentNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    where?: StudentNoteWhereInput
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    cursor?: StudentNoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StudentNoteScalarFieldEnum | StudentNoteScalarFieldEnum[]
  }

  /**
   * Profile.moduleCertificates
   */
  export type Profile$moduleCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    where?: ModuleCertificateWhereInput
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    cursor?: ModuleCertificateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModuleCertificateScalarFieldEnum | ModuleCertificateScalarFieldEnum[]
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model JobOffer
   */

  export type AggregateJobOffer = {
    _count: JobOfferCountAggregateOutputType | null
    _avg: JobOfferAvgAggregateOutputType | null
    _sum: JobOfferSumAggregateOutputType | null
    _min: JobOfferMinAggregateOutputType | null
    _max: JobOfferMaxAggregateOutputType | null
  }

  export type JobOfferAvgAggregateOutputType = {
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    latitude: number | null
    longitude: number | null
    viewsCount: number | null
    applicationsCount: number | null
  }

  export type JobOfferSumAggregateOutputType = {
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    latitude: number | null
    longitude: number | null
    viewsCount: number | null
    applicationsCount: number | null
  }

  export type JobOfferMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    requirements: string | null
    benefits: string | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryCurrency: string | null
    contractType: $Enums.ContractType | null
    workSchedule: string | null
    workModality: $Enums.WorkModality | null
    location: string | null
    latitude: number | null
    longitude: number | null
    logo: string | null
    municipality: string | null
    department: string | null
    experienceLevel: $Enums.ExperienceLevel | null
    educationRequired: $Enums.EducationLevel | null
    applicationDeadline: Date | null
    isActive: boolean | null
    status: $Enums.JobStatus | null
    viewsCount: number | null
    applicationsCount: number | null
    featured: boolean | null
    expiresAt: Date | null
    publishedAt: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobOfferMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    requirements: string | null
    benefits: string | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryCurrency: string | null
    contractType: $Enums.ContractType | null
    workSchedule: string | null
    workModality: $Enums.WorkModality | null
    location: string | null
    latitude: number | null
    longitude: number | null
    logo: string | null
    municipality: string | null
    department: string | null
    experienceLevel: $Enums.ExperienceLevel | null
    educationRequired: $Enums.EducationLevel | null
    applicationDeadline: Date | null
    isActive: boolean | null
    status: $Enums.JobStatus | null
    viewsCount: number | null
    applicationsCount: number | null
    featured: boolean | null
    expiresAt: Date | null
    publishedAt: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type JobOfferCountAggregateOutputType = {
    id: number
    title: number
    description: number
    requirements: number
    benefits: number
    salaryMin: number
    salaryMax: number
    salaryCurrency: number
    contractType: number
    workSchedule: number
    workModality: number
    location: number
    latitude: number
    longitude: number
    images: number
    logo: number
    municipality: number
    department: number
    experienceLevel: number
    educationRequired: number
    skillsRequired: number
    desiredSkills: number
    applicationDeadline: number
    isActive: number
    status: number
    viewsCount: number
    applicationsCount: number
    featured: number
    expiresAt: number
    publishedAt: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type JobOfferAvgAggregateInputType = {
    salaryMin?: true
    salaryMax?: true
    latitude?: true
    longitude?: true
    viewsCount?: true
    applicationsCount?: true
  }

  export type JobOfferSumAggregateInputType = {
    salaryMin?: true
    salaryMax?: true
    latitude?: true
    longitude?: true
    viewsCount?: true
    applicationsCount?: true
  }

  export type JobOfferMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    requirements?: true
    benefits?: true
    salaryMin?: true
    salaryMax?: true
    salaryCurrency?: true
    contractType?: true
    workSchedule?: true
    workModality?: true
    location?: true
    latitude?: true
    longitude?: true
    logo?: true
    municipality?: true
    department?: true
    experienceLevel?: true
    educationRequired?: true
    applicationDeadline?: true
    isActive?: true
    status?: true
    viewsCount?: true
    applicationsCount?: true
    featured?: true
    expiresAt?: true
    publishedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobOfferMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    requirements?: true
    benefits?: true
    salaryMin?: true
    salaryMax?: true
    salaryCurrency?: true
    contractType?: true
    workSchedule?: true
    workModality?: true
    location?: true
    latitude?: true
    longitude?: true
    logo?: true
    municipality?: true
    department?: true
    experienceLevel?: true
    educationRequired?: true
    applicationDeadline?: true
    isActive?: true
    status?: true
    viewsCount?: true
    applicationsCount?: true
    featured?: true
    expiresAt?: true
    publishedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type JobOfferCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    requirements?: true
    benefits?: true
    salaryMin?: true
    salaryMax?: true
    salaryCurrency?: true
    contractType?: true
    workSchedule?: true
    workModality?: true
    location?: true
    latitude?: true
    longitude?: true
    images?: true
    logo?: true
    municipality?: true
    department?: true
    experienceLevel?: true
    educationRequired?: true
    skillsRequired?: true
    desiredSkills?: true
    applicationDeadline?: true
    isActive?: true
    status?: true
    viewsCount?: true
    applicationsCount?: true
    featured?: true
    expiresAt?: true
    publishedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type JobOfferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobOffer to aggregate.
     */
    where?: JobOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobOffers to fetch.
     */
    orderBy?: JobOfferOrderByWithRelationInput | JobOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobOffers
    **/
    _count?: true | JobOfferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobOfferAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobOfferSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobOfferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobOfferMaxAggregateInputType
  }

  export type GetJobOfferAggregateType<T extends JobOfferAggregateArgs> = {
        [P in keyof T & keyof AggregateJobOffer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobOffer[P]>
      : GetScalarType<T[P], AggregateJobOffer[P]>
  }




  export type JobOfferGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobOfferWhereInput
    orderBy?: JobOfferOrderByWithAggregationInput | JobOfferOrderByWithAggregationInput[]
    by: JobOfferScalarFieldEnum[] | JobOfferScalarFieldEnum
    having?: JobOfferScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobOfferCountAggregateInputType | true
    _avg?: JobOfferAvgAggregateInputType
    _sum?: JobOfferSumAggregateInputType
    _min?: JobOfferMinAggregateInputType
    _max?: JobOfferMaxAggregateInputType
  }

  export type JobOfferGroupByOutputType = {
    id: string
    title: string
    description: string
    requirements: string
    benefits: string | null
    salaryMin: Decimal | null
    salaryMax: Decimal | null
    salaryCurrency: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude: number | null
    longitude: number | null
    images: string[]
    logo: string | null
    municipality: string
    department: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired: $Enums.EducationLevel | null
    skillsRequired: string[]
    desiredSkills: string[]
    applicationDeadline: Date | null
    isActive: boolean
    status: $Enums.JobStatus
    viewsCount: number
    applicationsCount: number
    featured: boolean
    expiresAt: Date | null
    publishedAt: Date
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: JobOfferCountAggregateOutputType | null
    _avg: JobOfferAvgAggregateOutputType | null
    _sum: JobOfferSumAggregateOutputType | null
    _min: JobOfferMinAggregateOutputType | null
    _max: JobOfferMaxAggregateOutputType | null
  }

  type GetJobOfferGroupByPayload<T extends JobOfferGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobOfferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobOfferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobOfferGroupByOutputType[P]>
            : GetScalarType<T[P], JobOfferGroupByOutputType[P]>
        }
      >
    >


  export type JobOfferSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    requirements?: boolean
    benefits?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryCurrency?: boolean
    contractType?: boolean
    workSchedule?: boolean
    workModality?: boolean
    location?: boolean
    latitude?: boolean
    longitude?: boolean
    images?: boolean
    logo?: boolean
    municipality?: boolean
    department?: boolean
    experienceLevel?: boolean
    educationRequired?: boolean
    skillsRequired?: boolean
    desiredSkills?: boolean
    applicationDeadline?: boolean
    isActive?: boolean
    status?: boolean
    viewsCount?: boolean
    applicationsCount?: boolean
    featured?: boolean
    expiresAt?: boolean
    publishedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    applications?: boolean | JobOffer$applicationsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    jobQuestions?: boolean | JobOffer$jobQuestionsArgs<ExtArgs>
    _count?: boolean | JobOfferCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobOffer"]>

  export type JobOfferSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    requirements?: boolean
    benefits?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryCurrency?: boolean
    contractType?: boolean
    workSchedule?: boolean
    workModality?: boolean
    location?: boolean
    latitude?: boolean
    longitude?: boolean
    images?: boolean
    logo?: boolean
    municipality?: boolean
    department?: boolean
    experienceLevel?: boolean
    educationRequired?: boolean
    skillsRequired?: boolean
    desiredSkills?: boolean
    applicationDeadline?: boolean
    isActive?: boolean
    status?: boolean
    viewsCount?: boolean
    applicationsCount?: boolean
    featured?: boolean
    expiresAt?: boolean
    publishedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobOffer"]>

  export type JobOfferSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    requirements?: boolean
    benefits?: boolean
    salaryMin?: boolean
    salaryMax?: boolean
    salaryCurrency?: boolean
    contractType?: boolean
    workSchedule?: boolean
    workModality?: boolean
    location?: boolean
    latitude?: boolean
    longitude?: boolean
    images?: boolean
    logo?: boolean
    municipality?: boolean
    department?: boolean
    experienceLevel?: boolean
    educationRequired?: boolean
    skillsRequired?: boolean
    desiredSkills?: boolean
    applicationDeadline?: boolean
    isActive?: boolean
    status?: boolean
    viewsCount?: boolean
    applicationsCount?: boolean
    featured?: boolean
    expiresAt?: boolean
    publishedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type JobOfferInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | JobOffer$applicationsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    jobQuestions?: boolean | JobOffer$jobQuestionsArgs<ExtArgs>
    _count?: boolean | JobOfferCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobOfferIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $JobOfferPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobOffer"
    objects: {
      applications: Prisma.$JobApplicationPayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs>
      jobQuestions: Prisma.$JobQuestionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string
      requirements: string
      benefits: string | null
      salaryMin: Prisma.Decimal | null
      salaryMax: Prisma.Decimal | null
      salaryCurrency: string | null
      contractType: $Enums.ContractType
      workSchedule: string
      workModality: $Enums.WorkModality
      location: string
      latitude: number | null
      longitude: number | null
      images: string[]
      logo: string | null
      municipality: string
      department: string
      experienceLevel: $Enums.ExperienceLevel
      educationRequired: $Enums.EducationLevel | null
      skillsRequired: string[]
      desiredSkills: string[]
      applicationDeadline: Date | null
      isActive: boolean
      status: $Enums.JobStatus
      viewsCount: number
      applicationsCount: number
      featured: boolean
      expiresAt: Date | null
      publishedAt: Date
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["jobOffer"]>
    composites: {}
  }

  type JobOfferGetPayload<S extends boolean | null | undefined | JobOfferDefaultArgs> = $Result.GetResult<Prisma.$JobOfferPayload, S>

  type JobOfferCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobOfferFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobOfferCountAggregateInputType | true
    }

  export interface JobOfferDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobOffer'], meta: { name: 'JobOffer' } }
    /**
     * Find zero or one JobOffer that matches the filter.
     * @param {JobOfferFindUniqueArgs} args - Arguments to find a JobOffer
     * @example
     * // Get one JobOffer
     * const jobOffer = await prisma.jobOffer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobOfferFindUniqueArgs>(args: SelectSubset<T, JobOfferFindUniqueArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobOffer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobOfferFindUniqueOrThrowArgs} args - Arguments to find a JobOffer
     * @example
     * // Get one JobOffer
     * const jobOffer = await prisma.jobOffer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobOfferFindUniqueOrThrowArgs>(args: SelectSubset<T, JobOfferFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobOffer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferFindFirstArgs} args - Arguments to find a JobOffer
     * @example
     * // Get one JobOffer
     * const jobOffer = await prisma.jobOffer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobOfferFindFirstArgs>(args?: SelectSubset<T, JobOfferFindFirstArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobOffer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferFindFirstOrThrowArgs} args - Arguments to find a JobOffer
     * @example
     * // Get one JobOffer
     * const jobOffer = await prisma.jobOffer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobOfferFindFirstOrThrowArgs>(args?: SelectSubset<T, JobOfferFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobOffers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobOffers
     * const jobOffers = await prisma.jobOffer.findMany()
     * 
     * // Get first 10 JobOffers
     * const jobOffers = await prisma.jobOffer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobOfferWithIdOnly = await prisma.jobOffer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobOfferFindManyArgs>(args?: SelectSubset<T, JobOfferFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobOffer.
     * @param {JobOfferCreateArgs} args - Arguments to create a JobOffer.
     * @example
     * // Create one JobOffer
     * const JobOffer = await prisma.jobOffer.create({
     *   data: {
     *     // ... data to create a JobOffer
     *   }
     * })
     * 
     */
    create<T extends JobOfferCreateArgs>(args: SelectSubset<T, JobOfferCreateArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobOffers.
     * @param {JobOfferCreateManyArgs} args - Arguments to create many JobOffers.
     * @example
     * // Create many JobOffers
     * const jobOffer = await prisma.jobOffer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobOfferCreateManyArgs>(args?: SelectSubset<T, JobOfferCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobOffers and returns the data saved in the database.
     * @param {JobOfferCreateManyAndReturnArgs} args - Arguments to create many JobOffers.
     * @example
     * // Create many JobOffers
     * const jobOffer = await prisma.jobOffer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobOffers and only return the `id`
     * const jobOfferWithIdOnly = await prisma.jobOffer.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobOfferCreateManyAndReturnArgs>(args?: SelectSubset<T, JobOfferCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobOffer.
     * @param {JobOfferDeleteArgs} args - Arguments to delete one JobOffer.
     * @example
     * // Delete one JobOffer
     * const JobOffer = await prisma.jobOffer.delete({
     *   where: {
     *     // ... filter to delete one JobOffer
     *   }
     * })
     * 
     */
    delete<T extends JobOfferDeleteArgs>(args: SelectSubset<T, JobOfferDeleteArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobOffer.
     * @param {JobOfferUpdateArgs} args - Arguments to update one JobOffer.
     * @example
     * // Update one JobOffer
     * const jobOffer = await prisma.jobOffer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobOfferUpdateArgs>(args: SelectSubset<T, JobOfferUpdateArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobOffers.
     * @param {JobOfferDeleteManyArgs} args - Arguments to filter JobOffers to delete.
     * @example
     * // Delete a few JobOffers
     * const { count } = await prisma.jobOffer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobOfferDeleteManyArgs>(args?: SelectSubset<T, JobOfferDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobOffers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobOffers
     * const jobOffer = await prisma.jobOffer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobOfferUpdateManyArgs>(args: SelectSubset<T, JobOfferUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobOffer.
     * @param {JobOfferUpsertArgs} args - Arguments to update or create a JobOffer.
     * @example
     * // Update or create a JobOffer
     * const jobOffer = await prisma.jobOffer.upsert({
     *   create: {
     *     // ... data to create a JobOffer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobOffer we want to update
     *   }
     * })
     */
    upsert<T extends JobOfferUpsertArgs>(args: SelectSubset<T, JobOfferUpsertArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobOffers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferCountArgs} args - Arguments to filter JobOffers to count.
     * @example
     * // Count the number of JobOffers
     * const count = await prisma.jobOffer.count({
     *   where: {
     *     // ... the filter for the JobOffers we want to count
     *   }
     * })
    **/
    count<T extends JobOfferCountArgs>(
      args?: Subset<T, JobOfferCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobOfferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobOffer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobOfferAggregateArgs>(args: Subset<T, JobOfferAggregateArgs>): Prisma.PrismaPromise<GetJobOfferAggregateType<T>>

    /**
     * Group by JobOffer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobOfferGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobOfferGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobOfferGroupByArgs['orderBy'] }
        : { orderBy?: JobOfferGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobOfferGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobOfferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobOffer model
   */
  readonly fields: JobOfferFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobOffer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobOfferClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    applications<T extends JobOffer$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, JobOffer$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    jobQuestions<T extends JobOffer$jobQuestionsArgs<ExtArgs> = {}>(args?: Subset<T, JobOffer$jobQuestionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobOffer model
   */ 
  interface JobOfferFieldRefs {
    readonly id: FieldRef<"JobOffer", 'String'>
    readonly title: FieldRef<"JobOffer", 'String'>
    readonly description: FieldRef<"JobOffer", 'String'>
    readonly requirements: FieldRef<"JobOffer", 'String'>
    readonly benefits: FieldRef<"JobOffer", 'String'>
    readonly salaryMin: FieldRef<"JobOffer", 'Decimal'>
    readonly salaryMax: FieldRef<"JobOffer", 'Decimal'>
    readonly salaryCurrency: FieldRef<"JobOffer", 'String'>
    readonly contractType: FieldRef<"JobOffer", 'ContractType'>
    readonly workSchedule: FieldRef<"JobOffer", 'String'>
    readonly workModality: FieldRef<"JobOffer", 'WorkModality'>
    readonly location: FieldRef<"JobOffer", 'String'>
    readonly latitude: FieldRef<"JobOffer", 'Float'>
    readonly longitude: FieldRef<"JobOffer", 'Float'>
    readonly images: FieldRef<"JobOffer", 'String[]'>
    readonly logo: FieldRef<"JobOffer", 'String'>
    readonly municipality: FieldRef<"JobOffer", 'String'>
    readonly department: FieldRef<"JobOffer", 'String'>
    readonly experienceLevel: FieldRef<"JobOffer", 'ExperienceLevel'>
    readonly educationRequired: FieldRef<"JobOffer", 'EducationLevel'>
    readonly skillsRequired: FieldRef<"JobOffer", 'String[]'>
    readonly desiredSkills: FieldRef<"JobOffer", 'String[]'>
    readonly applicationDeadline: FieldRef<"JobOffer", 'DateTime'>
    readonly isActive: FieldRef<"JobOffer", 'Boolean'>
    readonly status: FieldRef<"JobOffer", 'JobStatus'>
    readonly viewsCount: FieldRef<"JobOffer", 'Int'>
    readonly applicationsCount: FieldRef<"JobOffer", 'Int'>
    readonly featured: FieldRef<"JobOffer", 'Boolean'>
    readonly expiresAt: FieldRef<"JobOffer", 'DateTime'>
    readonly publishedAt: FieldRef<"JobOffer", 'DateTime'>
    readonly companyId: FieldRef<"JobOffer", 'String'>
    readonly createdAt: FieldRef<"JobOffer", 'DateTime'>
    readonly updatedAt: FieldRef<"JobOffer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * JobOffer findUnique
   */
  export type JobOfferFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter, which JobOffer to fetch.
     */
    where: JobOfferWhereUniqueInput
  }

  /**
   * JobOffer findUniqueOrThrow
   */
  export type JobOfferFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter, which JobOffer to fetch.
     */
    where: JobOfferWhereUniqueInput
  }

  /**
   * JobOffer findFirst
   */
  export type JobOfferFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter, which JobOffer to fetch.
     */
    where?: JobOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobOffers to fetch.
     */
    orderBy?: JobOfferOrderByWithRelationInput | JobOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobOffers.
     */
    cursor?: JobOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobOffers.
     */
    distinct?: JobOfferScalarFieldEnum | JobOfferScalarFieldEnum[]
  }

  /**
   * JobOffer findFirstOrThrow
   */
  export type JobOfferFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter, which JobOffer to fetch.
     */
    where?: JobOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobOffers to fetch.
     */
    orderBy?: JobOfferOrderByWithRelationInput | JobOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobOffers.
     */
    cursor?: JobOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobOffers.
     */
    distinct?: JobOfferScalarFieldEnum | JobOfferScalarFieldEnum[]
  }

  /**
   * JobOffer findMany
   */
  export type JobOfferFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter, which JobOffers to fetch.
     */
    where?: JobOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobOffers to fetch.
     */
    orderBy?: JobOfferOrderByWithRelationInput | JobOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobOffers.
     */
    cursor?: JobOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobOffers.
     */
    skip?: number
    distinct?: JobOfferScalarFieldEnum | JobOfferScalarFieldEnum[]
  }

  /**
   * JobOffer create
   */
  export type JobOfferCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * The data needed to create a JobOffer.
     */
    data: XOR<JobOfferCreateInput, JobOfferUncheckedCreateInput>
  }

  /**
   * JobOffer createMany
   */
  export type JobOfferCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobOffers.
     */
    data: JobOfferCreateManyInput | JobOfferCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobOffer createManyAndReturn
   */
  export type JobOfferCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobOffers.
     */
    data: JobOfferCreateManyInput | JobOfferCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobOffer update
   */
  export type JobOfferUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * The data needed to update a JobOffer.
     */
    data: XOR<JobOfferUpdateInput, JobOfferUncheckedUpdateInput>
    /**
     * Choose, which JobOffer to update.
     */
    where: JobOfferWhereUniqueInput
  }

  /**
   * JobOffer updateMany
   */
  export type JobOfferUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobOffers.
     */
    data: XOR<JobOfferUpdateManyMutationInput, JobOfferUncheckedUpdateManyInput>
    /**
     * Filter which JobOffers to update
     */
    where?: JobOfferWhereInput
  }

  /**
   * JobOffer upsert
   */
  export type JobOfferUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * The filter to search for the JobOffer to update in case it exists.
     */
    where: JobOfferWhereUniqueInput
    /**
     * In case the JobOffer found by the `where` argument doesn't exist, create a new JobOffer with this data.
     */
    create: XOR<JobOfferCreateInput, JobOfferUncheckedCreateInput>
    /**
     * In case the JobOffer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobOfferUpdateInput, JobOfferUncheckedUpdateInput>
  }

  /**
   * JobOffer delete
   */
  export type JobOfferDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    /**
     * Filter which JobOffer to delete.
     */
    where: JobOfferWhereUniqueInput
  }

  /**
   * JobOffer deleteMany
   */
  export type JobOfferDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobOffers to delete
     */
    where?: JobOfferWhereInput
  }

  /**
   * JobOffer.applications
   */
  export type JobOffer$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    where?: JobApplicationWhereInput
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    cursor?: JobApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobOffer.jobQuestions
   */
  export type JobOffer$jobQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    where?: JobQuestionWhereInput
    orderBy?: JobQuestionOrderByWithRelationInput | JobQuestionOrderByWithRelationInput[]
    cursor?: JobQuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobQuestionScalarFieldEnum | JobQuestionScalarFieldEnum[]
  }

  /**
   * JobOffer without action
   */
  export type JobOfferDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
  }


  /**
   * Model JobQuestion
   */

  export type AggregateJobQuestion = {
    _count: JobQuestionCountAggregateOutputType | null
    _avg: JobQuestionAvgAggregateOutputType | null
    _sum: JobQuestionSumAggregateOutputType | null
    _min: JobQuestionMinAggregateOutputType | null
    _max: JobQuestionMaxAggregateOutputType | null
  }

  export type JobQuestionAvgAggregateOutputType = {
    orderIndex: number | null
  }

  export type JobQuestionSumAggregateOutputType = {
    orderIndex: number | null
  }

  export type JobQuestionMinAggregateOutputType = {
    id: string | null
    jobOfferId: string | null
    question: string | null
    type: string | null
    required: boolean | null
    orderIndex: number | null
  }

  export type JobQuestionMaxAggregateOutputType = {
    id: string | null
    jobOfferId: string | null
    question: string | null
    type: string | null
    required: boolean | null
    orderIndex: number | null
  }

  export type JobQuestionCountAggregateOutputType = {
    id: number
    jobOfferId: number
    question: number
    type: number
    required: number
    options: number
    orderIndex: number
    _all: number
  }


  export type JobQuestionAvgAggregateInputType = {
    orderIndex?: true
  }

  export type JobQuestionSumAggregateInputType = {
    orderIndex?: true
  }

  export type JobQuestionMinAggregateInputType = {
    id?: true
    jobOfferId?: true
    question?: true
    type?: true
    required?: true
    orderIndex?: true
  }

  export type JobQuestionMaxAggregateInputType = {
    id?: true
    jobOfferId?: true
    question?: true
    type?: true
    required?: true
    orderIndex?: true
  }

  export type JobQuestionCountAggregateInputType = {
    id?: true
    jobOfferId?: true
    question?: true
    type?: true
    required?: true
    options?: true
    orderIndex?: true
    _all?: true
  }

  export type JobQuestionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobQuestion to aggregate.
     */
    where?: JobQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestions to fetch.
     */
    orderBy?: JobQuestionOrderByWithRelationInput | JobQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobQuestions
    **/
    _count?: true | JobQuestionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobQuestionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobQuestionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobQuestionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobQuestionMaxAggregateInputType
  }

  export type GetJobQuestionAggregateType<T extends JobQuestionAggregateArgs> = {
        [P in keyof T & keyof AggregateJobQuestion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobQuestion[P]>
      : GetScalarType<T[P], AggregateJobQuestion[P]>
  }




  export type JobQuestionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobQuestionWhereInput
    orderBy?: JobQuestionOrderByWithAggregationInput | JobQuestionOrderByWithAggregationInput[]
    by: JobQuestionScalarFieldEnum[] | JobQuestionScalarFieldEnum
    having?: JobQuestionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobQuestionCountAggregateInputType | true
    _avg?: JobQuestionAvgAggregateInputType
    _sum?: JobQuestionSumAggregateInputType
    _min?: JobQuestionMinAggregateInputType
    _max?: JobQuestionMaxAggregateInputType
  }

  export type JobQuestionGroupByOutputType = {
    id: string
    jobOfferId: string
    question: string
    type: string
    required: boolean
    options: string[]
    orderIndex: number
    _count: JobQuestionCountAggregateOutputType | null
    _avg: JobQuestionAvgAggregateOutputType | null
    _sum: JobQuestionSumAggregateOutputType | null
    _min: JobQuestionMinAggregateOutputType | null
    _max: JobQuestionMaxAggregateOutputType | null
  }

  type GetJobQuestionGroupByPayload<T extends JobQuestionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobQuestionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobQuestionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobQuestionGroupByOutputType[P]>
            : GetScalarType<T[P], JobQuestionGroupByOutputType[P]>
        }
      >
    >


  export type JobQuestionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobOfferId?: boolean
    question?: boolean
    type?: boolean
    required?: boolean
    options?: boolean
    orderIndex?: boolean
    questionAnswers?: boolean | JobQuestion$questionAnswersArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
    _count?: boolean | JobQuestionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobQuestion"]>

  export type JobQuestionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobOfferId?: boolean
    question?: boolean
    type?: boolean
    required?: boolean
    options?: boolean
    orderIndex?: boolean
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobQuestion"]>

  export type JobQuestionSelectScalar = {
    id?: boolean
    jobOfferId?: boolean
    question?: boolean
    type?: boolean
    required?: boolean
    options?: boolean
    orderIndex?: boolean
  }

  export type JobQuestionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    questionAnswers?: boolean | JobQuestion$questionAnswersArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
    _count?: boolean | JobQuestionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobQuestionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
  }

  export type $JobQuestionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobQuestion"
    objects: {
      questionAnswers: Prisma.$JobQuestionAnswerPayload<ExtArgs>[]
      jobOffer: Prisma.$JobOfferPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobOfferId: string
      question: string
      type: string
      required: boolean
      options: string[]
      orderIndex: number
    }, ExtArgs["result"]["jobQuestion"]>
    composites: {}
  }

  type JobQuestionGetPayload<S extends boolean | null | undefined | JobQuestionDefaultArgs> = $Result.GetResult<Prisma.$JobQuestionPayload, S>

  type JobQuestionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobQuestionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobQuestionCountAggregateInputType | true
    }

  export interface JobQuestionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobQuestion'], meta: { name: 'JobQuestion' } }
    /**
     * Find zero or one JobQuestion that matches the filter.
     * @param {JobQuestionFindUniqueArgs} args - Arguments to find a JobQuestion
     * @example
     * // Get one JobQuestion
     * const jobQuestion = await prisma.jobQuestion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobQuestionFindUniqueArgs>(args: SelectSubset<T, JobQuestionFindUniqueArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobQuestion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobQuestionFindUniqueOrThrowArgs} args - Arguments to find a JobQuestion
     * @example
     * // Get one JobQuestion
     * const jobQuestion = await prisma.jobQuestion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobQuestionFindUniqueOrThrowArgs>(args: SelectSubset<T, JobQuestionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobQuestion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionFindFirstArgs} args - Arguments to find a JobQuestion
     * @example
     * // Get one JobQuestion
     * const jobQuestion = await prisma.jobQuestion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobQuestionFindFirstArgs>(args?: SelectSubset<T, JobQuestionFindFirstArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobQuestion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionFindFirstOrThrowArgs} args - Arguments to find a JobQuestion
     * @example
     * // Get one JobQuestion
     * const jobQuestion = await prisma.jobQuestion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobQuestionFindFirstOrThrowArgs>(args?: SelectSubset<T, JobQuestionFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobQuestions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobQuestions
     * const jobQuestions = await prisma.jobQuestion.findMany()
     * 
     * // Get first 10 JobQuestions
     * const jobQuestions = await prisma.jobQuestion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobQuestionWithIdOnly = await prisma.jobQuestion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobQuestionFindManyArgs>(args?: SelectSubset<T, JobQuestionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobQuestion.
     * @param {JobQuestionCreateArgs} args - Arguments to create a JobQuestion.
     * @example
     * // Create one JobQuestion
     * const JobQuestion = await prisma.jobQuestion.create({
     *   data: {
     *     // ... data to create a JobQuestion
     *   }
     * })
     * 
     */
    create<T extends JobQuestionCreateArgs>(args: SelectSubset<T, JobQuestionCreateArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobQuestions.
     * @param {JobQuestionCreateManyArgs} args - Arguments to create many JobQuestions.
     * @example
     * // Create many JobQuestions
     * const jobQuestion = await prisma.jobQuestion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobQuestionCreateManyArgs>(args?: SelectSubset<T, JobQuestionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobQuestions and returns the data saved in the database.
     * @param {JobQuestionCreateManyAndReturnArgs} args - Arguments to create many JobQuestions.
     * @example
     * // Create many JobQuestions
     * const jobQuestion = await prisma.jobQuestion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobQuestions and only return the `id`
     * const jobQuestionWithIdOnly = await prisma.jobQuestion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobQuestionCreateManyAndReturnArgs>(args?: SelectSubset<T, JobQuestionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobQuestion.
     * @param {JobQuestionDeleteArgs} args - Arguments to delete one JobQuestion.
     * @example
     * // Delete one JobQuestion
     * const JobQuestion = await prisma.jobQuestion.delete({
     *   where: {
     *     // ... filter to delete one JobQuestion
     *   }
     * })
     * 
     */
    delete<T extends JobQuestionDeleteArgs>(args: SelectSubset<T, JobQuestionDeleteArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobQuestion.
     * @param {JobQuestionUpdateArgs} args - Arguments to update one JobQuestion.
     * @example
     * // Update one JobQuestion
     * const jobQuestion = await prisma.jobQuestion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobQuestionUpdateArgs>(args: SelectSubset<T, JobQuestionUpdateArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobQuestions.
     * @param {JobQuestionDeleteManyArgs} args - Arguments to filter JobQuestions to delete.
     * @example
     * // Delete a few JobQuestions
     * const { count } = await prisma.jobQuestion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobQuestionDeleteManyArgs>(args?: SelectSubset<T, JobQuestionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobQuestions
     * const jobQuestion = await prisma.jobQuestion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobQuestionUpdateManyArgs>(args: SelectSubset<T, JobQuestionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobQuestion.
     * @param {JobQuestionUpsertArgs} args - Arguments to update or create a JobQuestion.
     * @example
     * // Update or create a JobQuestion
     * const jobQuestion = await prisma.jobQuestion.upsert({
     *   create: {
     *     // ... data to create a JobQuestion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobQuestion we want to update
     *   }
     * })
     */
    upsert<T extends JobQuestionUpsertArgs>(args: SelectSubset<T, JobQuestionUpsertArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionCountArgs} args - Arguments to filter JobQuestions to count.
     * @example
     * // Count the number of JobQuestions
     * const count = await prisma.jobQuestion.count({
     *   where: {
     *     // ... the filter for the JobQuestions we want to count
     *   }
     * })
    **/
    count<T extends JobQuestionCountArgs>(
      args?: Subset<T, JobQuestionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobQuestionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobQuestionAggregateArgs>(args: Subset<T, JobQuestionAggregateArgs>): Prisma.PrismaPromise<GetJobQuestionAggregateType<T>>

    /**
     * Group by JobQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobQuestionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobQuestionGroupByArgs['orderBy'] }
        : { orderBy?: JobQuestionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobQuestionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobQuestionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobQuestion model
   */
  readonly fields: JobQuestionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobQuestion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobQuestionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    questionAnswers<T extends JobQuestion$questionAnswersArgs<ExtArgs> = {}>(args?: Subset<T, JobQuestion$questionAnswersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findMany"> | Null>
    jobOffer<T extends JobOfferDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobOfferDefaultArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobQuestion model
   */ 
  interface JobQuestionFieldRefs {
    readonly id: FieldRef<"JobQuestion", 'String'>
    readonly jobOfferId: FieldRef<"JobQuestion", 'String'>
    readonly question: FieldRef<"JobQuestion", 'String'>
    readonly type: FieldRef<"JobQuestion", 'String'>
    readonly required: FieldRef<"JobQuestion", 'Boolean'>
    readonly options: FieldRef<"JobQuestion", 'String[]'>
    readonly orderIndex: FieldRef<"JobQuestion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * JobQuestion findUnique
   */
  export type JobQuestionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestion to fetch.
     */
    where: JobQuestionWhereUniqueInput
  }

  /**
   * JobQuestion findUniqueOrThrow
   */
  export type JobQuestionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestion to fetch.
     */
    where: JobQuestionWhereUniqueInput
  }

  /**
   * JobQuestion findFirst
   */
  export type JobQuestionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestion to fetch.
     */
    where?: JobQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestions to fetch.
     */
    orderBy?: JobQuestionOrderByWithRelationInput | JobQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobQuestions.
     */
    cursor?: JobQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobQuestions.
     */
    distinct?: JobQuestionScalarFieldEnum | JobQuestionScalarFieldEnum[]
  }

  /**
   * JobQuestion findFirstOrThrow
   */
  export type JobQuestionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestion to fetch.
     */
    where?: JobQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestions to fetch.
     */
    orderBy?: JobQuestionOrderByWithRelationInput | JobQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobQuestions.
     */
    cursor?: JobQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobQuestions.
     */
    distinct?: JobQuestionScalarFieldEnum | JobQuestionScalarFieldEnum[]
  }

  /**
   * JobQuestion findMany
   */
  export type JobQuestionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestions to fetch.
     */
    where?: JobQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestions to fetch.
     */
    orderBy?: JobQuestionOrderByWithRelationInput | JobQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobQuestions.
     */
    cursor?: JobQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestions.
     */
    skip?: number
    distinct?: JobQuestionScalarFieldEnum | JobQuestionScalarFieldEnum[]
  }

  /**
   * JobQuestion create
   */
  export type JobQuestionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * The data needed to create a JobQuestion.
     */
    data: XOR<JobQuestionCreateInput, JobQuestionUncheckedCreateInput>
  }

  /**
   * JobQuestion createMany
   */
  export type JobQuestionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobQuestions.
     */
    data: JobQuestionCreateManyInput | JobQuestionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobQuestion createManyAndReturn
   */
  export type JobQuestionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobQuestions.
     */
    data: JobQuestionCreateManyInput | JobQuestionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobQuestion update
   */
  export type JobQuestionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * The data needed to update a JobQuestion.
     */
    data: XOR<JobQuestionUpdateInput, JobQuestionUncheckedUpdateInput>
    /**
     * Choose, which JobQuestion to update.
     */
    where: JobQuestionWhereUniqueInput
  }

  /**
   * JobQuestion updateMany
   */
  export type JobQuestionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobQuestions.
     */
    data: XOR<JobQuestionUpdateManyMutationInput, JobQuestionUncheckedUpdateManyInput>
    /**
     * Filter which JobQuestions to update
     */
    where?: JobQuestionWhereInput
  }

  /**
   * JobQuestion upsert
   */
  export type JobQuestionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * The filter to search for the JobQuestion to update in case it exists.
     */
    where: JobQuestionWhereUniqueInput
    /**
     * In case the JobQuestion found by the `where` argument doesn't exist, create a new JobQuestion with this data.
     */
    create: XOR<JobQuestionCreateInput, JobQuestionUncheckedCreateInput>
    /**
     * In case the JobQuestion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobQuestionUpdateInput, JobQuestionUncheckedUpdateInput>
  }

  /**
   * JobQuestion delete
   */
  export type JobQuestionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
    /**
     * Filter which JobQuestion to delete.
     */
    where: JobQuestionWhereUniqueInput
  }

  /**
   * JobQuestion deleteMany
   */
  export type JobQuestionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobQuestions to delete
     */
    where?: JobQuestionWhereInput
  }

  /**
   * JobQuestion.questionAnswers
   */
  export type JobQuestion$questionAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    where?: JobQuestionAnswerWhereInput
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    cursor?: JobQuestionAnswerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobQuestionAnswerScalarFieldEnum | JobQuestionAnswerScalarFieldEnum[]
  }

  /**
   * JobQuestion without action
   */
  export type JobQuestionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestion
     */
    select?: JobQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionInclude<ExtArgs> | null
  }


  /**
   * Model JobApplication
   */

  export type AggregateJobApplication = {
    _count: JobApplicationCountAggregateOutputType | null
    _avg: JobApplicationAvgAggregateOutputType | null
    _sum: JobApplicationSumAggregateOutputType | null
    _min: JobApplicationMinAggregateOutputType | null
    _max: JobApplicationMaxAggregateOutputType | null
  }

  export type JobApplicationAvgAggregateOutputType = {
    rating: number | null
  }

  export type JobApplicationSumAggregateOutputType = {
    rating: number | null
  }

  export type JobApplicationMinAggregateOutputType = {
    id: string | null
    applicantId: string | null
    jobOfferId: string | null
    coverLetter: string | null
    cvFile: string | null
    coverLetterFile: string | null
    profileImage: string | null
    status: $Enums.ApplicationStatus | null
    appliedAt: Date | null
    reviewedAt: Date | null
    notes: string | null
    rating: number | null
    decisionReason: string | null
  }

  export type JobApplicationMaxAggregateOutputType = {
    id: string | null
    applicantId: string | null
    jobOfferId: string | null
    coverLetter: string | null
    cvFile: string | null
    coverLetterFile: string | null
    profileImage: string | null
    status: $Enums.ApplicationStatus | null
    appliedAt: Date | null
    reviewedAt: Date | null
    notes: string | null
    rating: number | null
    decisionReason: string | null
  }

  export type JobApplicationCountAggregateOutputType = {
    id: number
    applicantId: number
    jobOfferId: number
    coverLetter: number
    cvData: number
    cvFile: number
    coverLetterFile: number
    profileImage: number
    status: number
    appliedAt: number
    reviewedAt: number
    notes: number
    rating: number
    decisionReason: number
    _all: number
  }


  export type JobApplicationAvgAggregateInputType = {
    rating?: true
  }

  export type JobApplicationSumAggregateInputType = {
    rating?: true
  }

  export type JobApplicationMinAggregateInputType = {
    id?: true
    applicantId?: true
    jobOfferId?: true
    coverLetter?: true
    cvFile?: true
    coverLetterFile?: true
    profileImage?: true
    status?: true
    appliedAt?: true
    reviewedAt?: true
    notes?: true
    rating?: true
    decisionReason?: true
  }

  export type JobApplicationMaxAggregateInputType = {
    id?: true
    applicantId?: true
    jobOfferId?: true
    coverLetter?: true
    cvFile?: true
    coverLetterFile?: true
    profileImage?: true
    status?: true
    appliedAt?: true
    reviewedAt?: true
    notes?: true
    rating?: true
    decisionReason?: true
  }

  export type JobApplicationCountAggregateInputType = {
    id?: true
    applicantId?: true
    jobOfferId?: true
    coverLetter?: true
    cvData?: true
    cvFile?: true
    coverLetterFile?: true
    profileImage?: true
    status?: true
    appliedAt?: true
    reviewedAt?: true
    notes?: true
    rating?: true
    decisionReason?: true
    _all?: true
  }

  export type JobApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplication to aggregate.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobApplications
    **/
    _count?: true | JobApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobApplicationMaxAggregateInputType
  }

  export type GetJobApplicationAggregateType<T extends JobApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateJobApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobApplication[P]>
      : GetScalarType<T[P], AggregateJobApplication[P]>
  }




  export type JobApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationWhereInput
    orderBy?: JobApplicationOrderByWithAggregationInput | JobApplicationOrderByWithAggregationInput[]
    by: JobApplicationScalarFieldEnum[] | JobApplicationScalarFieldEnum
    having?: JobApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobApplicationCountAggregateInputType | true
    _avg?: JobApplicationAvgAggregateInputType
    _sum?: JobApplicationSumAggregateInputType
    _min?: JobApplicationMinAggregateInputType
    _max?: JobApplicationMaxAggregateInputType
  }

  export type JobApplicationGroupByOutputType = {
    id: string
    applicantId: string
    jobOfferId: string
    coverLetter: string | null
    cvData: JsonValue | null
    cvFile: string | null
    coverLetterFile: string | null
    profileImage: string | null
    status: $Enums.ApplicationStatus
    appliedAt: Date
    reviewedAt: Date | null
    notes: string | null
    rating: number | null
    decisionReason: string | null
    _count: JobApplicationCountAggregateOutputType | null
    _avg: JobApplicationAvgAggregateOutputType | null
    _sum: JobApplicationSumAggregateOutputType | null
    _min: JobApplicationMinAggregateOutputType | null
    _max: JobApplicationMaxAggregateOutputType | null
  }

  type GetJobApplicationGroupByPayload<T extends JobApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], JobApplicationGroupByOutputType[P]>
        }
      >
    >


  export type JobApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicantId?: boolean
    jobOfferId?: boolean
    coverLetter?: boolean
    cvData?: boolean
    cvFile?: boolean
    coverLetterFile?: boolean
    profileImage?: boolean
    status?: boolean
    appliedAt?: boolean
    reviewedAt?: boolean
    notes?: boolean
    rating?: boolean
    decisionReason?: boolean
    applicant?: boolean | ProfileDefaultArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
    questionAnswers?: boolean | JobApplication$questionAnswersArgs<ExtArgs>
    messages?: boolean | JobApplication$messagesArgs<ExtArgs>
    _count?: boolean | JobApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplication"]>

  export type JobApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicantId?: boolean
    jobOfferId?: boolean
    coverLetter?: boolean
    cvData?: boolean
    cvFile?: boolean
    coverLetterFile?: boolean
    profileImage?: boolean
    status?: boolean
    appliedAt?: boolean
    reviewedAt?: boolean
    notes?: boolean
    rating?: boolean
    decisionReason?: boolean
    applicant?: boolean | ProfileDefaultArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplication"]>

  export type JobApplicationSelectScalar = {
    id?: boolean
    applicantId?: boolean
    jobOfferId?: boolean
    coverLetter?: boolean
    cvData?: boolean
    cvFile?: boolean
    coverLetterFile?: boolean
    profileImage?: boolean
    status?: boolean
    appliedAt?: boolean
    reviewedAt?: boolean
    notes?: boolean
    rating?: boolean
    decisionReason?: boolean
  }

  export type JobApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applicant?: boolean | ProfileDefaultArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
    questionAnswers?: boolean | JobApplication$questionAnswersArgs<ExtArgs>
    messages?: boolean | JobApplication$messagesArgs<ExtArgs>
    _count?: boolean | JobApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applicant?: boolean | ProfileDefaultArgs<ExtArgs>
    jobOffer?: boolean | JobOfferDefaultArgs<ExtArgs>
  }

  export type $JobApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobApplication"
    objects: {
      applicant: Prisma.$ProfilePayload<ExtArgs>
      jobOffer: Prisma.$JobOfferPayload<ExtArgs>
      questionAnswers: Prisma.$JobQuestionAnswerPayload<ExtArgs>[]
      messages: Prisma.$JobApplicationMessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicantId: string
      jobOfferId: string
      coverLetter: string | null
      cvData: Prisma.JsonValue | null
      cvFile: string | null
      coverLetterFile: string | null
      profileImage: string | null
      status: $Enums.ApplicationStatus
      appliedAt: Date
      reviewedAt: Date | null
      notes: string | null
      rating: number | null
      decisionReason: string | null
    }, ExtArgs["result"]["jobApplication"]>
    composites: {}
  }

  type JobApplicationGetPayload<S extends boolean | null | undefined | JobApplicationDefaultArgs> = $Result.GetResult<Prisma.$JobApplicationPayload, S>

  type JobApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobApplicationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobApplicationCountAggregateInputType | true
    }

  export interface JobApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobApplication'], meta: { name: 'JobApplication' } }
    /**
     * Find zero or one JobApplication that matches the filter.
     * @param {JobApplicationFindUniqueArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobApplicationFindUniqueArgs>(args: SelectSubset<T, JobApplicationFindUniqueArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobApplication that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobApplicationFindUniqueOrThrowArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, JobApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindFirstArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobApplicationFindFirstArgs>(args?: SelectSubset<T, JobApplicationFindFirstArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindFirstOrThrowArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, JobApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobApplications
     * const jobApplications = await prisma.jobApplication.findMany()
     * 
     * // Get first 10 JobApplications
     * const jobApplications = await prisma.jobApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobApplicationWithIdOnly = await prisma.jobApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobApplicationFindManyArgs>(args?: SelectSubset<T, JobApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobApplication.
     * @param {JobApplicationCreateArgs} args - Arguments to create a JobApplication.
     * @example
     * // Create one JobApplication
     * const JobApplication = await prisma.jobApplication.create({
     *   data: {
     *     // ... data to create a JobApplication
     *   }
     * })
     * 
     */
    create<T extends JobApplicationCreateArgs>(args: SelectSubset<T, JobApplicationCreateArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobApplications.
     * @param {JobApplicationCreateManyArgs} args - Arguments to create many JobApplications.
     * @example
     * // Create many JobApplications
     * const jobApplication = await prisma.jobApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobApplicationCreateManyArgs>(args?: SelectSubset<T, JobApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobApplications and returns the data saved in the database.
     * @param {JobApplicationCreateManyAndReturnArgs} args - Arguments to create many JobApplications.
     * @example
     * // Create many JobApplications
     * const jobApplication = await prisma.jobApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobApplications and only return the `id`
     * const jobApplicationWithIdOnly = await prisma.jobApplication.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, JobApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobApplication.
     * @param {JobApplicationDeleteArgs} args - Arguments to delete one JobApplication.
     * @example
     * // Delete one JobApplication
     * const JobApplication = await prisma.jobApplication.delete({
     *   where: {
     *     // ... filter to delete one JobApplication
     *   }
     * })
     * 
     */
    delete<T extends JobApplicationDeleteArgs>(args: SelectSubset<T, JobApplicationDeleteArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobApplication.
     * @param {JobApplicationUpdateArgs} args - Arguments to update one JobApplication.
     * @example
     * // Update one JobApplication
     * const jobApplication = await prisma.jobApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobApplicationUpdateArgs>(args: SelectSubset<T, JobApplicationUpdateArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobApplications.
     * @param {JobApplicationDeleteManyArgs} args - Arguments to filter JobApplications to delete.
     * @example
     * // Delete a few JobApplications
     * const { count } = await prisma.jobApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobApplicationDeleteManyArgs>(args?: SelectSubset<T, JobApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobApplications
     * const jobApplication = await prisma.jobApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobApplicationUpdateManyArgs>(args: SelectSubset<T, JobApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobApplication.
     * @param {JobApplicationUpsertArgs} args - Arguments to update or create a JobApplication.
     * @example
     * // Update or create a JobApplication
     * const jobApplication = await prisma.jobApplication.upsert({
     *   create: {
     *     // ... data to create a JobApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobApplication we want to update
     *   }
     * })
     */
    upsert<T extends JobApplicationUpsertArgs>(args: SelectSubset<T, JobApplicationUpsertArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationCountArgs} args - Arguments to filter JobApplications to count.
     * @example
     * // Count the number of JobApplications
     * const count = await prisma.jobApplication.count({
     *   where: {
     *     // ... the filter for the JobApplications we want to count
     *   }
     * })
    **/
    count<T extends JobApplicationCountArgs>(
      args?: Subset<T, JobApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobApplicationAggregateArgs>(args: Subset<T, JobApplicationAggregateArgs>): Prisma.PrismaPromise<GetJobApplicationAggregateType<T>>

    /**
     * Group by JobApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobApplicationGroupByArgs['orderBy'] }
        : { orderBy?: JobApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobApplication model
   */
  readonly fields: JobApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    applicant<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    jobOffer<T extends JobOfferDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobOfferDefaultArgs<ExtArgs>>): Prisma__JobOfferClient<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    questionAnswers<T extends JobApplication$questionAnswersArgs<ExtArgs> = {}>(args?: Subset<T, JobApplication$questionAnswersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findMany"> | Null>
    messages<T extends JobApplication$messagesArgs<ExtArgs> = {}>(args?: Subset<T, JobApplication$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobApplication model
   */ 
  interface JobApplicationFieldRefs {
    readonly id: FieldRef<"JobApplication", 'String'>
    readonly applicantId: FieldRef<"JobApplication", 'String'>
    readonly jobOfferId: FieldRef<"JobApplication", 'String'>
    readonly coverLetter: FieldRef<"JobApplication", 'String'>
    readonly cvData: FieldRef<"JobApplication", 'Json'>
    readonly cvFile: FieldRef<"JobApplication", 'String'>
    readonly coverLetterFile: FieldRef<"JobApplication", 'String'>
    readonly profileImage: FieldRef<"JobApplication", 'String'>
    readonly status: FieldRef<"JobApplication", 'ApplicationStatus'>
    readonly appliedAt: FieldRef<"JobApplication", 'DateTime'>
    readonly reviewedAt: FieldRef<"JobApplication", 'DateTime'>
    readonly notes: FieldRef<"JobApplication", 'String'>
    readonly rating: FieldRef<"JobApplication", 'Int'>
    readonly decisionReason: FieldRef<"JobApplication", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JobApplication findUnique
   */
  export type JobApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication findUniqueOrThrow
   */
  export type JobApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication findFirst
   */
  export type JobApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplications.
     */
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication findFirstOrThrow
   */
  export type JobApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplications.
     */
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication findMany
   */
  export type JobApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplications to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication create
   */
  export type JobApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a JobApplication.
     */
    data: XOR<JobApplicationCreateInput, JobApplicationUncheckedCreateInput>
  }

  /**
   * JobApplication createMany
   */
  export type JobApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobApplications.
     */
    data: JobApplicationCreateManyInput | JobApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobApplication createManyAndReturn
   */
  export type JobApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobApplications.
     */
    data: JobApplicationCreateManyInput | JobApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobApplication update
   */
  export type JobApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a JobApplication.
     */
    data: XOR<JobApplicationUpdateInput, JobApplicationUncheckedUpdateInput>
    /**
     * Choose, which JobApplication to update.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication updateMany
   */
  export type JobApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobApplications.
     */
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyInput>
    /**
     * Filter which JobApplications to update
     */
    where?: JobApplicationWhereInput
  }

  /**
   * JobApplication upsert
   */
  export type JobApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the JobApplication to update in case it exists.
     */
    where: JobApplicationWhereUniqueInput
    /**
     * In case the JobApplication found by the `where` argument doesn't exist, create a new JobApplication with this data.
     */
    create: XOR<JobApplicationCreateInput, JobApplicationUncheckedCreateInput>
    /**
     * In case the JobApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobApplicationUpdateInput, JobApplicationUncheckedUpdateInput>
  }

  /**
   * JobApplication delete
   */
  export type JobApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter which JobApplication to delete.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication deleteMany
   */
  export type JobApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplications to delete
     */
    where?: JobApplicationWhereInput
  }

  /**
   * JobApplication.questionAnswers
   */
  export type JobApplication$questionAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    where?: JobQuestionAnswerWhereInput
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    cursor?: JobQuestionAnswerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobQuestionAnswerScalarFieldEnum | JobQuestionAnswerScalarFieldEnum[]
  }

  /**
   * JobApplication.messages
   */
  export type JobApplication$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    where?: JobApplicationMessageWhereInput
    orderBy?: JobApplicationMessageOrderByWithRelationInput | JobApplicationMessageOrderByWithRelationInput[]
    cursor?: JobApplicationMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobApplicationMessageScalarFieldEnum | JobApplicationMessageScalarFieldEnum[]
  }

  /**
   * JobApplication without action
   */
  export type JobApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
  }


  /**
   * Model JobQuestionAnswer
   */

  export type AggregateJobQuestionAnswer = {
    _count: JobQuestionAnswerCountAggregateOutputType | null
    _min: JobQuestionAnswerMinAggregateOutputType | null
    _max: JobQuestionAnswerMaxAggregateOutputType | null
  }

  export type JobQuestionAnswerMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    questionId: string | null
    answer: string | null
  }

  export type JobQuestionAnswerMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    questionId: string | null
    answer: string | null
  }

  export type JobQuestionAnswerCountAggregateOutputType = {
    id: number
    applicationId: number
    questionId: number
    answer: number
    _all: number
  }


  export type JobQuestionAnswerMinAggregateInputType = {
    id?: true
    applicationId?: true
    questionId?: true
    answer?: true
  }

  export type JobQuestionAnswerMaxAggregateInputType = {
    id?: true
    applicationId?: true
    questionId?: true
    answer?: true
  }

  export type JobQuestionAnswerCountAggregateInputType = {
    id?: true
    applicationId?: true
    questionId?: true
    answer?: true
    _all?: true
  }

  export type JobQuestionAnswerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobQuestionAnswer to aggregate.
     */
    where?: JobQuestionAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestionAnswers to fetch.
     */
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobQuestionAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestionAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestionAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobQuestionAnswers
    **/
    _count?: true | JobQuestionAnswerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobQuestionAnswerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobQuestionAnswerMaxAggregateInputType
  }

  export type GetJobQuestionAnswerAggregateType<T extends JobQuestionAnswerAggregateArgs> = {
        [P in keyof T & keyof AggregateJobQuestionAnswer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobQuestionAnswer[P]>
      : GetScalarType<T[P], AggregateJobQuestionAnswer[P]>
  }




  export type JobQuestionAnswerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobQuestionAnswerWhereInput
    orderBy?: JobQuestionAnswerOrderByWithAggregationInput | JobQuestionAnswerOrderByWithAggregationInput[]
    by: JobQuestionAnswerScalarFieldEnum[] | JobQuestionAnswerScalarFieldEnum
    having?: JobQuestionAnswerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobQuestionAnswerCountAggregateInputType | true
    _min?: JobQuestionAnswerMinAggregateInputType
    _max?: JobQuestionAnswerMaxAggregateInputType
  }

  export type JobQuestionAnswerGroupByOutputType = {
    id: string
    applicationId: string
    questionId: string
    answer: string
    _count: JobQuestionAnswerCountAggregateOutputType | null
    _min: JobQuestionAnswerMinAggregateOutputType | null
    _max: JobQuestionAnswerMaxAggregateOutputType | null
  }

  type GetJobQuestionAnswerGroupByPayload<T extends JobQuestionAnswerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobQuestionAnswerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobQuestionAnswerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobQuestionAnswerGroupByOutputType[P]>
            : GetScalarType<T[P], JobQuestionAnswerGroupByOutputType[P]>
        }
      >
    >


  export type JobQuestionAnswerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    questionId?: boolean
    answer?: boolean
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
    question?: boolean | JobQuestionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobQuestionAnswer"]>

  export type JobQuestionAnswerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    questionId?: boolean
    answer?: boolean
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
    question?: boolean | JobQuestionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobQuestionAnswer"]>

  export type JobQuestionAnswerSelectScalar = {
    id?: boolean
    applicationId?: boolean
    questionId?: boolean
    answer?: boolean
  }

  export type JobQuestionAnswerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
    question?: boolean | JobQuestionDefaultArgs<ExtArgs>
  }
  export type JobQuestionAnswerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
    question?: boolean | JobQuestionDefaultArgs<ExtArgs>
  }

  export type $JobQuestionAnswerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobQuestionAnswer"
    objects: {
      application: Prisma.$JobApplicationPayload<ExtArgs>
      question: Prisma.$JobQuestionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      questionId: string
      answer: string
    }, ExtArgs["result"]["jobQuestionAnswer"]>
    composites: {}
  }

  type JobQuestionAnswerGetPayload<S extends boolean | null | undefined | JobQuestionAnswerDefaultArgs> = $Result.GetResult<Prisma.$JobQuestionAnswerPayload, S>

  type JobQuestionAnswerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobQuestionAnswerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobQuestionAnswerCountAggregateInputType | true
    }

  export interface JobQuestionAnswerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobQuestionAnswer'], meta: { name: 'JobQuestionAnswer' } }
    /**
     * Find zero or one JobQuestionAnswer that matches the filter.
     * @param {JobQuestionAnswerFindUniqueArgs} args - Arguments to find a JobQuestionAnswer
     * @example
     * // Get one JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobQuestionAnswerFindUniqueArgs>(args: SelectSubset<T, JobQuestionAnswerFindUniqueArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobQuestionAnswer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobQuestionAnswerFindUniqueOrThrowArgs} args - Arguments to find a JobQuestionAnswer
     * @example
     * // Get one JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobQuestionAnswerFindUniqueOrThrowArgs>(args: SelectSubset<T, JobQuestionAnswerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobQuestionAnswer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerFindFirstArgs} args - Arguments to find a JobQuestionAnswer
     * @example
     * // Get one JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobQuestionAnswerFindFirstArgs>(args?: SelectSubset<T, JobQuestionAnswerFindFirstArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobQuestionAnswer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerFindFirstOrThrowArgs} args - Arguments to find a JobQuestionAnswer
     * @example
     * // Get one JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobQuestionAnswerFindFirstOrThrowArgs>(args?: SelectSubset<T, JobQuestionAnswerFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobQuestionAnswers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobQuestionAnswers
     * const jobQuestionAnswers = await prisma.jobQuestionAnswer.findMany()
     * 
     * // Get first 10 JobQuestionAnswers
     * const jobQuestionAnswers = await prisma.jobQuestionAnswer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobQuestionAnswerWithIdOnly = await prisma.jobQuestionAnswer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobQuestionAnswerFindManyArgs>(args?: SelectSubset<T, JobQuestionAnswerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobQuestionAnswer.
     * @param {JobQuestionAnswerCreateArgs} args - Arguments to create a JobQuestionAnswer.
     * @example
     * // Create one JobQuestionAnswer
     * const JobQuestionAnswer = await prisma.jobQuestionAnswer.create({
     *   data: {
     *     // ... data to create a JobQuestionAnswer
     *   }
     * })
     * 
     */
    create<T extends JobQuestionAnswerCreateArgs>(args: SelectSubset<T, JobQuestionAnswerCreateArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobQuestionAnswers.
     * @param {JobQuestionAnswerCreateManyArgs} args - Arguments to create many JobQuestionAnswers.
     * @example
     * // Create many JobQuestionAnswers
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobQuestionAnswerCreateManyArgs>(args?: SelectSubset<T, JobQuestionAnswerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobQuestionAnswers and returns the data saved in the database.
     * @param {JobQuestionAnswerCreateManyAndReturnArgs} args - Arguments to create many JobQuestionAnswers.
     * @example
     * // Create many JobQuestionAnswers
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobQuestionAnswers and only return the `id`
     * const jobQuestionAnswerWithIdOnly = await prisma.jobQuestionAnswer.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobQuestionAnswerCreateManyAndReturnArgs>(args?: SelectSubset<T, JobQuestionAnswerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobQuestionAnswer.
     * @param {JobQuestionAnswerDeleteArgs} args - Arguments to delete one JobQuestionAnswer.
     * @example
     * // Delete one JobQuestionAnswer
     * const JobQuestionAnswer = await prisma.jobQuestionAnswer.delete({
     *   where: {
     *     // ... filter to delete one JobQuestionAnswer
     *   }
     * })
     * 
     */
    delete<T extends JobQuestionAnswerDeleteArgs>(args: SelectSubset<T, JobQuestionAnswerDeleteArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobQuestionAnswer.
     * @param {JobQuestionAnswerUpdateArgs} args - Arguments to update one JobQuestionAnswer.
     * @example
     * // Update one JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobQuestionAnswerUpdateArgs>(args: SelectSubset<T, JobQuestionAnswerUpdateArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobQuestionAnswers.
     * @param {JobQuestionAnswerDeleteManyArgs} args - Arguments to filter JobQuestionAnswers to delete.
     * @example
     * // Delete a few JobQuestionAnswers
     * const { count } = await prisma.jobQuestionAnswer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobQuestionAnswerDeleteManyArgs>(args?: SelectSubset<T, JobQuestionAnswerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobQuestionAnswers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobQuestionAnswers
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobQuestionAnswerUpdateManyArgs>(args: SelectSubset<T, JobQuestionAnswerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobQuestionAnswer.
     * @param {JobQuestionAnswerUpsertArgs} args - Arguments to update or create a JobQuestionAnswer.
     * @example
     * // Update or create a JobQuestionAnswer
     * const jobQuestionAnswer = await prisma.jobQuestionAnswer.upsert({
     *   create: {
     *     // ... data to create a JobQuestionAnswer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobQuestionAnswer we want to update
     *   }
     * })
     */
    upsert<T extends JobQuestionAnswerUpsertArgs>(args: SelectSubset<T, JobQuestionAnswerUpsertArgs<ExtArgs>>): Prisma__JobQuestionAnswerClient<$Result.GetResult<Prisma.$JobQuestionAnswerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobQuestionAnswers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerCountArgs} args - Arguments to filter JobQuestionAnswers to count.
     * @example
     * // Count the number of JobQuestionAnswers
     * const count = await prisma.jobQuestionAnswer.count({
     *   where: {
     *     // ... the filter for the JobQuestionAnswers we want to count
     *   }
     * })
    **/
    count<T extends JobQuestionAnswerCountArgs>(
      args?: Subset<T, JobQuestionAnswerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobQuestionAnswerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobQuestionAnswer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobQuestionAnswerAggregateArgs>(args: Subset<T, JobQuestionAnswerAggregateArgs>): Prisma.PrismaPromise<GetJobQuestionAnswerAggregateType<T>>

    /**
     * Group by JobQuestionAnswer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobQuestionAnswerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobQuestionAnswerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobQuestionAnswerGroupByArgs['orderBy'] }
        : { orderBy?: JobQuestionAnswerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobQuestionAnswerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobQuestionAnswerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobQuestionAnswer model
   */
  readonly fields: JobQuestionAnswerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobQuestionAnswer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobQuestionAnswerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    application<T extends JobApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobApplicationDefaultArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    question<T extends JobQuestionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobQuestionDefaultArgs<ExtArgs>>): Prisma__JobQuestionClient<$Result.GetResult<Prisma.$JobQuestionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobQuestionAnswer model
   */ 
  interface JobQuestionAnswerFieldRefs {
    readonly id: FieldRef<"JobQuestionAnswer", 'String'>
    readonly applicationId: FieldRef<"JobQuestionAnswer", 'String'>
    readonly questionId: FieldRef<"JobQuestionAnswer", 'String'>
    readonly answer: FieldRef<"JobQuestionAnswer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JobQuestionAnswer findUnique
   */
  export type JobQuestionAnswerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestionAnswer to fetch.
     */
    where: JobQuestionAnswerWhereUniqueInput
  }

  /**
   * JobQuestionAnswer findUniqueOrThrow
   */
  export type JobQuestionAnswerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestionAnswer to fetch.
     */
    where: JobQuestionAnswerWhereUniqueInput
  }

  /**
   * JobQuestionAnswer findFirst
   */
  export type JobQuestionAnswerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestionAnswer to fetch.
     */
    where?: JobQuestionAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestionAnswers to fetch.
     */
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobQuestionAnswers.
     */
    cursor?: JobQuestionAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestionAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestionAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobQuestionAnswers.
     */
    distinct?: JobQuestionAnswerScalarFieldEnum | JobQuestionAnswerScalarFieldEnum[]
  }

  /**
   * JobQuestionAnswer findFirstOrThrow
   */
  export type JobQuestionAnswerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestionAnswer to fetch.
     */
    where?: JobQuestionAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestionAnswers to fetch.
     */
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobQuestionAnswers.
     */
    cursor?: JobQuestionAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestionAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestionAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobQuestionAnswers.
     */
    distinct?: JobQuestionAnswerScalarFieldEnum | JobQuestionAnswerScalarFieldEnum[]
  }

  /**
   * JobQuestionAnswer findMany
   */
  export type JobQuestionAnswerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter, which JobQuestionAnswers to fetch.
     */
    where?: JobQuestionAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobQuestionAnswers to fetch.
     */
    orderBy?: JobQuestionAnswerOrderByWithRelationInput | JobQuestionAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobQuestionAnswers.
     */
    cursor?: JobQuestionAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobQuestionAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobQuestionAnswers.
     */
    skip?: number
    distinct?: JobQuestionAnswerScalarFieldEnum | JobQuestionAnswerScalarFieldEnum[]
  }

  /**
   * JobQuestionAnswer create
   */
  export type JobQuestionAnswerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * The data needed to create a JobQuestionAnswer.
     */
    data: XOR<JobQuestionAnswerCreateInput, JobQuestionAnswerUncheckedCreateInput>
  }

  /**
   * JobQuestionAnswer createMany
   */
  export type JobQuestionAnswerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobQuestionAnswers.
     */
    data: JobQuestionAnswerCreateManyInput | JobQuestionAnswerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobQuestionAnswer createManyAndReturn
   */
  export type JobQuestionAnswerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobQuestionAnswers.
     */
    data: JobQuestionAnswerCreateManyInput | JobQuestionAnswerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobQuestionAnswer update
   */
  export type JobQuestionAnswerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * The data needed to update a JobQuestionAnswer.
     */
    data: XOR<JobQuestionAnswerUpdateInput, JobQuestionAnswerUncheckedUpdateInput>
    /**
     * Choose, which JobQuestionAnswer to update.
     */
    where: JobQuestionAnswerWhereUniqueInput
  }

  /**
   * JobQuestionAnswer updateMany
   */
  export type JobQuestionAnswerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobQuestionAnswers.
     */
    data: XOR<JobQuestionAnswerUpdateManyMutationInput, JobQuestionAnswerUncheckedUpdateManyInput>
    /**
     * Filter which JobQuestionAnswers to update
     */
    where?: JobQuestionAnswerWhereInput
  }

  /**
   * JobQuestionAnswer upsert
   */
  export type JobQuestionAnswerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * The filter to search for the JobQuestionAnswer to update in case it exists.
     */
    where: JobQuestionAnswerWhereUniqueInput
    /**
     * In case the JobQuestionAnswer found by the `where` argument doesn't exist, create a new JobQuestionAnswer with this data.
     */
    create: XOR<JobQuestionAnswerCreateInput, JobQuestionAnswerUncheckedCreateInput>
    /**
     * In case the JobQuestionAnswer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobQuestionAnswerUpdateInput, JobQuestionAnswerUncheckedUpdateInput>
  }

  /**
   * JobQuestionAnswer delete
   */
  export type JobQuestionAnswerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
    /**
     * Filter which JobQuestionAnswer to delete.
     */
    where: JobQuestionAnswerWhereUniqueInput
  }

  /**
   * JobQuestionAnswer deleteMany
   */
  export type JobQuestionAnswerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobQuestionAnswers to delete
     */
    where?: JobQuestionAnswerWhereInput
  }

  /**
   * JobQuestionAnswer without action
   */
  export type JobQuestionAnswerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobQuestionAnswer
     */
    select?: JobQuestionAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobQuestionAnswerInclude<ExtArgs> | null
  }


  /**
   * Model JobApplicationMessage
   */

  export type AggregateJobApplicationMessage = {
    _count: JobApplicationMessageCountAggregateOutputType | null
    _min: JobApplicationMessageMinAggregateOutputType | null
    _max: JobApplicationMessageMaxAggregateOutputType | null
  }

  export type JobApplicationMessageMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    senderId: string | null
    senderType: $Enums.SenderType | null
    content: string | null
    messageType: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type JobApplicationMessageMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    senderId: string | null
    senderType: $Enums.SenderType | null
    content: string | null
    messageType: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type JobApplicationMessageCountAggregateOutputType = {
    id: number
    applicationId: number
    senderId: number
    senderType: number
    content: number
    messageType: number
    status: number
    createdAt: number
    readAt: number
    _all: number
  }


  export type JobApplicationMessageMinAggregateInputType = {
    id?: true
    applicationId?: true
    senderId?: true
    senderType?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
  }

  export type JobApplicationMessageMaxAggregateInputType = {
    id?: true
    applicationId?: true
    senderId?: true
    senderType?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
  }

  export type JobApplicationMessageCountAggregateInputType = {
    id?: true
    applicationId?: true
    senderId?: true
    senderType?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
    _all?: true
  }

  export type JobApplicationMessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplicationMessage to aggregate.
     */
    where?: JobApplicationMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplicationMessages to fetch.
     */
    orderBy?: JobApplicationMessageOrderByWithRelationInput | JobApplicationMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobApplicationMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplicationMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplicationMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobApplicationMessages
    **/
    _count?: true | JobApplicationMessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobApplicationMessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobApplicationMessageMaxAggregateInputType
  }

  export type GetJobApplicationMessageAggregateType<T extends JobApplicationMessageAggregateArgs> = {
        [P in keyof T & keyof AggregateJobApplicationMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobApplicationMessage[P]>
      : GetScalarType<T[P], AggregateJobApplicationMessage[P]>
  }




  export type JobApplicationMessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationMessageWhereInput
    orderBy?: JobApplicationMessageOrderByWithAggregationInput | JobApplicationMessageOrderByWithAggregationInput[]
    by: JobApplicationMessageScalarFieldEnum[] | JobApplicationMessageScalarFieldEnum
    having?: JobApplicationMessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobApplicationMessageCountAggregateInputType | true
    _min?: JobApplicationMessageMinAggregateInputType
    _max?: JobApplicationMessageMaxAggregateInputType
  }

  export type JobApplicationMessageGroupByOutputType = {
    id: string
    applicationId: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date
    readAt: Date | null
    _count: JobApplicationMessageCountAggregateOutputType | null
    _min: JobApplicationMessageMinAggregateOutputType | null
    _max: JobApplicationMessageMaxAggregateOutputType | null
  }

  type GetJobApplicationMessageGroupByPayload<T extends JobApplicationMessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobApplicationMessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobApplicationMessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobApplicationMessageGroupByOutputType[P]>
            : GetScalarType<T[P], JobApplicationMessageGroupByOutputType[P]>
        }
      >
    >


  export type JobApplicationMessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    senderId?: boolean
    senderType?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplicationMessage"]>

  export type JobApplicationMessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    senderId?: boolean
    senderType?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplicationMessage"]>

  export type JobApplicationMessageSelectScalar = {
    id?: boolean
    applicationId?: boolean
    senderId?: boolean
    senderType?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
  }

  export type JobApplicationMessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
  }
  export type JobApplicationMessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | JobApplicationDefaultArgs<ExtArgs>
  }

  export type $JobApplicationMessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobApplicationMessage"
    objects: {
      application: Prisma.$JobApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      senderId: string
      senderType: $Enums.SenderType
      content: string
      messageType: $Enums.MessageType
      status: $Enums.MessageStatus
      createdAt: Date
      readAt: Date | null
    }, ExtArgs["result"]["jobApplicationMessage"]>
    composites: {}
  }

  type JobApplicationMessageGetPayload<S extends boolean | null | undefined | JobApplicationMessageDefaultArgs> = $Result.GetResult<Prisma.$JobApplicationMessagePayload, S>

  type JobApplicationMessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobApplicationMessageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobApplicationMessageCountAggregateInputType | true
    }

  export interface JobApplicationMessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobApplicationMessage'], meta: { name: 'JobApplicationMessage' } }
    /**
     * Find zero or one JobApplicationMessage that matches the filter.
     * @param {JobApplicationMessageFindUniqueArgs} args - Arguments to find a JobApplicationMessage
     * @example
     * // Get one JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobApplicationMessageFindUniqueArgs>(args: SelectSubset<T, JobApplicationMessageFindUniqueArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobApplicationMessage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobApplicationMessageFindUniqueOrThrowArgs} args - Arguments to find a JobApplicationMessage
     * @example
     * // Get one JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobApplicationMessageFindUniqueOrThrowArgs>(args: SelectSubset<T, JobApplicationMessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobApplicationMessage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageFindFirstArgs} args - Arguments to find a JobApplicationMessage
     * @example
     * // Get one JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobApplicationMessageFindFirstArgs>(args?: SelectSubset<T, JobApplicationMessageFindFirstArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobApplicationMessage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageFindFirstOrThrowArgs} args - Arguments to find a JobApplicationMessage
     * @example
     * // Get one JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobApplicationMessageFindFirstOrThrowArgs>(args?: SelectSubset<T, JobApplicationMessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobApplicationMessages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobApplicationMessages
     * const jobApplicationMessages = await prisma.jobApplicationMessage.findMany()
     * 
     * // Get first 10 JobApplicationMessages
     * const jobApplicationMessages = await prisma.jobApplicationMessage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobApplicationMessageWithIdOnly = await prisma.jobApplicationMessage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobApplicationMessageFindManyArgs>(args?: SelectSubset<T, JobApplicationMessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobApplicationMessage.
     * @param {JobApplicationMessageCreateArgs} args - Arguments to create a JobApplicationMessage.
     * @example
     * // Create one JobApplicationMessage
     * const JobApplicationMessage = await prisma.jobApplicationMessage.create({
     *   data: {
     *     // ... data to create a JobApplicationMessage
     *   }
     * })
     * 
     */
    create<T extends JobApplicationMessageCreateArgs>(args: SelectSubset<T, JobApplicationMessageCreateArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobApplicationMessages.
     * @param {JobApplicationMessageCreateManyArgs} args - Arguments to create many JobApplicationMessages.
     * @example
     * // Create many JobApplicationMessages
     * const jobApplicationMessage = await prisma.jobApplicationMessage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobApplicationMessageCreateManyArgs>(args?: SelectSubset<T, JobApplicationMessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobApplicationMessages and returns the data saved in the database.
     * @param {JobApplicationMessageCreateManyAndReturnArgs} args - Arguments to create many JobApplicationMessages.
     * @example
     * // Create many JobApplicationMessages
     * const jobApplicationMessage = await prisma.jobApplicationMessage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobApplicationMessages and only return the `id`
     * const jobApplicationMessageWithIdOnly = await prisma.jobApplicationMessage.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobApplicationMessageCreateManyAndReturnArgs>(args?: SelectSubset<T, JobApplicationMessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobApplicationMessage.
     * @param {JobApplicationMessageDeleteArgs} args - Arguments to delete one JobApplicationMessage.
     * @example
     * // Delete one JobApplicationMessage
     * const JobApplicationMessage = await prisma.jobApplicationMessage.delete({
     *   where: {
     *     // ... filter to delete one JobApplicationMessage
     *   }
     * })
     * 
     */
    delete<T extends JobApplicationMessageDeleteArgs>(args: SelectSubset<T, JobApplicationMessageDeleteArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobApplicationMessage.
     * @param {JobApplicationMessageUpdateArgs} args - Arguments to update one JobApplicationMessage.
     * @example
     * // Update one JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobApplicationMessageUpdateArgs>(args: SelectSubset<T, JobApplicationMessageUpdateArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobApplicationMessages.
     * @param {JobApplicationMessageDeleteManyArgs} args - Arguments to filter JobApplicationMessages to delete.
     * @example
     * // Delete a few JobApplicationMessages
     * const { count } = await prisma.jobApplicationMessage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobApplicationMessageDeleteManyArgs>(args?: SelectSubset<T, JobApplicationMessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobApplicationMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobApplicationMessages
     * const jobApplicationMessage = await prisma.jobApplicationMessage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobApplicationMessageUpdateManyArgs>(args: SelectSubset<T, JobApplicationMessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobApplicationMessage.
     * @param {JobApplicationMessageUpsertArgs} args - Arguments to update or create a JobApplicationMessage.
     * @example
     * // Update or create a JobApplicationMessage
     * const jobApplicationMessage = await prisma.jobApplicationMessage.upsert({
     *   create: {
     *     // ... data to create a JobApplicationMessage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobApplicationMessage we want to update
     *   }
     * })
     */
    upsert<T extends JobApplicationMessageUpsertArgs>(args: SelectSubset<T, JobApplicationMessageUpsertArgs<ExtArgs>>): Prisma__JobApplicationMessageClient<$Result.GetResult<Prisma.$JobApplicationMessagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobApplicationMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageCountArgs} args - Arguments to filter JobApplicationMessages to count.
     * @example
     * // Count the number of JobApplicationMessages
     * const count = await prisma.jobApplicationMessage.count({
     *   where: {
     *     // ... the filter for the JobApplicationMessages we want to count
     *   }
     * })
    **/
    count<T extends JobApplicationMessageCountArgs>(
      args?: Subset<T, JobApplicationMessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobApplicationMessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobApplicationMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobApplicationMessageAggregateArgs>(args: Subset<T, JobApplicationMessageAggregateArgs>): Prisma.PrismaPromise<GetJobApplicationMessageAggregateType<T>>

    /**
     * Group by JobApplicationMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationMessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobApplicationMessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobApplicationMessageGroupByArgs['orderBy'] }
        : { orderBy?: JobApplicationMessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobApplicationMessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobApplicationMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobApplicationMessage model
   */
  readonly fields: JobApplicationMessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobApplicationMessage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobApplicationMessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    application<T extends JobApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JobApplicationDefaultArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobApplicationMessage model
   */ 
  interface JobApplicationMessageFieldRefs {
    readonly id: FieldRef<"JobApplicationMessage", 'String'>
    readonly applicationId: FieldRef<"JobApplicationMessage", 'String'>
    readonly senderId: FieldRef<"JobApplicationMessage", 'String'>
    readonly senderType: FieldRef<"JobApplicationMessage", 'SenderType'>
    readonly content: FieldRef<"JobApplicationMessage", 'String'>
    readonly messageType: FieldRef<"JobApplicationMessage", 'MessageType'>
    readonly status: FieldRef<"JobApplicationMessage", 'MessageStatus'>
    readonly createdAt: FieldRef<"JobApplicationMessage", 'DateTime'>
    readonly readAt: FieldRef<"JobApplicationMessage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * JobApplicationMessage findUnique
   */
  export type JobApplicationMessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter, which JobApplicationMessage to fetch.
     */
    where: JobApplicationMessageWhereUniqueInput
  }

  /**
   * JobApplicationMessage findUniqueOrThrow
   */
  export type JobApplicationMessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter, which JobApplicationMessage to fetch.
     */
    where: JobApplicationMessageWhereUniqueInput
  }

  /**
   * JobApplicationMessage findFirst
   */
  export type JobApplicationMessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter, which JobApplicationMessage to fetch.
     */
    where?: JobApplicationMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplicationMessages to fetch.
     */
    orderBy?: JobApplicationMessageOrderByWithRelationInput | JobApplicationMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplicationMessages.
     */
    cursor?: JobApplicationMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplicationMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplicationMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplicationMessages.
     */
    distinct?: JobApplicationMessageScalarFieldEnum | JobApplicationMessageScalarFieldEnum[]
  }

  /**
   * JobApplicationMessage findFirstOrThrow
   */
  export type JobApplicationMessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter, which JobApplicationMessage to fetch.
     */
    where?: JobApplicationMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplicationMessages to fetch.
     */
    orderBy?: JobApplicationMessageOrderByWithRelationInput | JobApplicationMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplicationMessages.
     */
    cursor?: JobApplicationMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplicationMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplicationMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplicationMessages.
     */
    distinct?: JobApplicationMessageScalarFieldEnum | JobApplicationMessageScalarFieldEnum[]
  }

  /**
   * JobApplicationMessage findMany
   */
  export type JobApplicationMessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter, which JobApplicationMessages to fetch.
     */
    where?: JobApplicationMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplicationMessages to fetch.
     */
    orderBy?: JobApplicationMessageOrderByWithRelationInput | JobApplicationMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobApplicationMessages.
     */
    cursor?: JobApplicationMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplicationMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplicationMessages.
     */
    skip?: number
    distinct?: JobApplicationMessageScalarFieldEnum | JobApplicationMessageScalarFieldEnum[]
  }

  /**
   * JobApplicationMessage create
   */
  export type JobApplicationMessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * The data needed to create a JobApplicationMessage.
     */
    data: XOR<JobApplicationMessageCreateInput, JobApplicationMessageUncheckedCreateInput>
  }

  /**
   * JobApplicationMessage createMany
   */
  export type JobApplicationMessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobApplicationMessages.
     */
    data: JobApplicationMessageCreateManyInput | JobApplicationMessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobApplicationMessage createManyAndReturn
   */
  export type JobApplicationMessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobApplicationMessages.
     */
    data: JobApplicationMessageCreateManyInput | JobApplicationMessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobApplicationMessage update
   */
  export type JobApplicationMessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * The data needed to update a JobApplicationMessage.
     */
    data: XOR<JobApplicationMessageUpdateInput, JobApplicationMessageUncheckedUpdateInput>
    /**
     * Choose, which JobApplicationMessage to update.
     */
    where: JobApplicationMessageWhereUniqueInput
  }

  /**
   * JobApplicationMessage updateMany
   */
  export type JobApplicationMessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobApplicationMessages.
     */
    data: XOR<JobApplicationMessageUpdateManyMutationInput, JobApplicationMessageUncheckedUpdateManyInput>
    /**
     * Filter which JobApplicationMessages to update
     */
    where?: JobApplicationMessageWhereInput
  }

  /**
   * JobApplicationMessage upsert
   */
  export type JobApplicationMessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * The filter to search for the JobApplicationMessage to update in case it exists.
     */
    where: JobApplicationMessageWhereUniqueInput
    /**
     * In case the JobApplicationMessage found by the `where` argument doesn't exist, create a new JobApplicationMessage with this data.
     */
    create: XOR<JobApplicationMessageCreateInput, JobApplicationMessageUncheckedCreateInput>
    /**
     * In case the JobApplicationMessage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobApplicationMessageUpdateInput, JobApplicationMessageUncheckedUpdateInput>
  }

  /**
   * JobApplicationMessage delete
   */
  export type JobApplicationMessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
    /**
     * Filter which JobApplicationMessage to delete.
     */
    where: JobApplicationMessageWhereUniqueInput
  }

  /**
   * JobApplicationMessage deleteMany
   */
  export type JobApplicationMessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplicationMessages to delete
     */
    where?: JobApplicationMessageWhereInput
  }

  /**
   * JobApplicationMessage without action
   */
  export type JobApplicationMessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationMessage
     */
    select?: JobApplicationMessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationMessageInclude<ExtArgs> | null
  }


  /**
   * Model Course
   */

  export type AggregateCourse = {
    _count: CourseCountAggregateOutputType | null
    _avg: CourseAvgAggregateOutputType | null
    _sum: CourseSumAggregateOutputType | null
    _min: CourseMinAggregateOutputType | null
    _max: CourseMaxAggregateOutputType | null
  }

  export type CourseAvgAggregateOutputType = {
    duration: number | null
    price: Decimal | null
    rating: Decimal | null
    studentsCount: number | null
    completionRate: Decimal | null
    totalLessons: number | null
    totalQuizzes: number | null
    totalResources: number | null
  }

  export type CourseSumAggregateOutputType = {
    duration: number | null
    price: Decimal | null
    rating: Decimal | null
    studentsCount: number | null
    completionRate: Decimal | null
    totalLessons: number | null
    totalQuizzes: number | null
    totalResources: number | null
  }

  export type CourseMinAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    thumbnail: string | null
    videoPreview: string | null
    duration: number | null
    level: $Enums.CourseLevel | null
    category: $Enums.CourseCategory | null
    isMandatory: boolean | null
    isActive: boolean | null
    price: Decimal | null
    rating: Decimal | null
    studentsCount: number | null
    completionRate: Decimal | null
    totalLessons: number | null
    totalQuizzes: number | null
    totalResources: number | null
    certification: boolean | null
    instructorId: string | null
    institutionName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    publishedAt: Date | null
  }

  export type CourseMaxAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    thumbnail: string | null
    videoPreview: string | null
    duration: number | null
    level: $Enums.CourseLevel | null
    category: $Enums.CourseCategory | null
    isMandatory: boolean | null
    isActive: boolean | null
    price: Decimal | null
    rating: Decimal | null
    studentsCount: number | null
    completionRate: Decimal | null
    totalLessons: number | null
    totalQuizzes: number | null
    totalResources: number | null
    certification: boolean | null
    instructorId: string | null
    institutionName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    publishedAt: Date | null
  }

  export type CourseCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    description: number
    shortDescription: number
    thumbnail: number
    videoPreview: number
    objectives: number
    prerequisites: number
    duration: number
    level: number
    category: number
    isMandatory: number
    isActive: number
    price: number
    rating: number
    studentsCount: number
    completionRate: number
    totalLessons: number
    totalQuizzes: number
    totalResources: number
    tags: number
    certification: number
    includedMaterials: number
    instructorId: number
    institutionName: number
    createdAt: number
    updatedAt: number
    publishedAt: number
    _all: number
  }


  export type CourseAvgAggregateInputType = {
    duration?: true
    price?: true
    rating?: true
    studentsCount?: true
    completionRate?: true
    totalLessons?: true
    totalQuizzes?: true
    totalResources?: true
  }

  export type CourseSumAggregateInputType = {
    duration?: true
    price?: true
    rating?: true
    studentsCount?: true
    completionRate?: true
    totalLessons?: true
    totalQuizzes?: true
    totalResources?: true
  }

  export type CourseMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    thumbnail?: true
    videoPreview?: true
    duration?: true
    level?: true
    category?: true
    isMandatory?: true
    isActive?: true
    price?: true
    rating?: true
    studentsCount?: true
    completionRate?: true
    totalLessons?: true
    totalQuizzes?: true
    totalResources?: true
    certification?: true
    instructorId?: true
    institutionName?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
  }

  export type CourseMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    thumbnail?: true
    videoPreview?: true
    duration?: true
    level?: true
    category?: true
    isMandatory?: true
    isActive?: true
    price?: true
    rating?: true
    studentsCount?: true
    completionRate?: true
    totalLessons?: true
    totalQuizzes?: true
    totalResources?: true
    certification?: true
    instructorId?: true
    institutionName?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
  }

  export type CourseCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    description?: true
    shortDescription?: true
    thumbnail?: true
    videoPreview?: true
    objectives?: true
    prerequisites?: true
    duration?: true
    level?: true
    category?: true
    isMandatory?: true
    isActive?: true
    price?: true
    rating?: true
    studentsCount?: true
    completionRate?: true
    totalLessons?: true
    totalQuizzes?: true
    totalResources?: true
    tags?: true
    certification?: true
    includedMaterials?: true
    instructorId?: true
    institutionName?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
    _all?: true
  }

  export type CourseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Course to aggregate.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Courses
    **/
    _count?: true | CourseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CourseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CourseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourseMaxAggregateInputType
  }

  export type GetCourseAggregateType<T extends CourseAggregateArgs> = {
        [P in keyof T & keyof AggregateCourse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourse[P]>
      : GetScalarType<T[P], AggregateCourse[P]>
  }




  export type CourseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseWhereInput
    orderBy?: CourseOrderByWithAggregationInput | CourseOrderByWithAggregationInput[]
    by: CourseScalarFieldEnum[] | CourseScalarFieldEnum
    having?: CourseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourseCountAggregateInputType | true
    _avg?: CourseAvgAggregateInputType
    _sum?: CourseSumAggregateInputType
    _min?: CourseMinAggregateInputType
    _max?: CourseMaxAggregateInputType
  }

  export type CourseGroupByOutputType = {
    id: string
    title: string
    slug: string
    description: string
    shortDescription: string | null
    thumbnail: string | null
    videoPreview: string | null
    objectives: string[]
    prerequisites: string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory: boolean
    isActive: boolean
    price: Decimal | null
    rating: Decimal | null
    studentsCount: number
    completionRate: Decimal | null
    totalLessons: number
    totalQuizzes: number
    totalResources: number
    tags: string[]
    certification: boolean
    includedMaterials: string[]
    instructorId: string | null
    institutionName: string | null
    createdAt: Date
    updatedAt: Date
    publishedAt: Date | null
    _count: CourseCountAggregateOutputType | null
    _avg: CourseAvgAggregateOutputType | null
    _sum: CourseSumAggregateOutputType | null
    _min: CourseMinAggregateOutputType | null
    _max: CourseMaxAggregateOutputType | null
  }

  type GetCourseGroupByPayload<T extends CourseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourseGroupByOutputType[P]>
            : GetScalarType<T[P], CourseGroupByOutputType[P]>
        }
      >
    >


  export type CourseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    thumbnail?: boolean
    videoPreview?: boolean
    objectives?: boolean
    prerequisites?: boolean
    duration?: boolean
    level?: boolean
    category?: boolean
    isMandatory?: boolean
    isActive?: boolean
    price?: boolean
    rating?: boolean
    studentsCount?: boolean
    completionRate?: boolean
    totalLessons?: boolean
    totalQuizzes?: boolean
    totalResources?: boolean
    tags?: boolean
    certification?: boolean
    includedMaterials?: boolean
    instructorId?: boolean
    institutionName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    certificates?: boolean | Course$certificatesArgs<ExtArgs>
    enrollments?: boolean | Course$enrollmentsArgs<ExtArgs>
    modules?: boolean | Course$modulesArgs<ExtArgs>
    instructor?: boolean | Course$instructorArgs<ExtArgs>
    quizzes?: boolean | Course$quizzesArgs<ExtArgs>
    _count?: boolean | CourseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["course"]>

  export type CourseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    thumbnail?: boolean
    videoPreview?: boolean
    objectives?: boolean
    prerequisites?: boolean
    duration?: boolean
    level?: boolean
    category?: boolean
    isMandatory?: boolean
    isActive?: boolean
    price?: boolean
    rating?: boolean
    studentsCount?: boolean
    completionRate?: boolean
    totalLessons?: boolean
    totalQuizzes?: boolean
    totalResources?: boolean
    tags?: boolean
    certification?: boolean
    includedMaterials?: boolean
    instructorId?: boolean
    institutionName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    instructor?: boolean | Course$instructorArgs<ExtArgs>
  }, ExtArgs["result"]["course"]>

  export type CourseSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    thumbnail?: boolean
    videoPreview?: boolean
    objectives?: boolean
    prerequisites?: boolean
    duration?: boolean
    level?: boolean
    category?: boolean
    isMandatory?: boolean
    isActive?: boolean
    price?: boolean
    rating?: boolean
    studentsCount?: boolean
    completionRate?: boolean
    totalLessons?: boolean
    totalQuizzes?: boolean
    totalResources?: boolean
    tags?: boolean
    certification?: boolean
    includedMaterials?: boolean
    instructorId?: boolean
    institutionName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
  }

  export type CourseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    certificates?: boolean | Course$certificatesArgs<ExtArgs>
    enrollments?: boolean | Course$enrollmentsArgs<ExtArgs>
    modules?: boolean | Course$modulesArgs<ExtArgs>
    instructor?: boolean | Course$instructorArgs<ExtArgs>
    quizzes?: boolean | Course$quizzesArgs<ExtArgs>
    _count?: boolean | CourseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CourseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    instructor?: boolean | Course$instructorArgs<ExtArgs>
  }

  export type $CoursePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Course"
    objects: {
      certificates: Prisma.$CertificatePayload<ExtArgs>[]
      enrollments: Prisma.$CourseEnrollmentPayload<ExtArgs>[]
      modules: Prisma.$CourseModulePayload<ExtArgs>[]
      instructor: Prisma.$ProfilePayload<ExtArgs> | null
      quizzes: Prisma.$QuizPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      slug: string
      description: string
      shortDescription: string | null
      thumbnail: string | null
      videoPreview: string | null
      objectives: string[]
      prerequisites: string[]
      duration: number
      level: $Enums.CourseLevel
      category: $Enums.CourseCategory
      isMandatory: boolean
      isActive: boolean
      price: Prisma.Decimal | null
      rating: Prisma.Decimal | null
      studentsCount: number
      completionRate: Prisma.Decimal | null
      totalLessons: number
      totalQuizzes: number
      totalResources: number
      tags: string[]
      certification: boolean
      includedMaterials: string[]
      instructorId: string | null
      institutionName: string | null
      createdAt: Date
      updatedAt: Date
      publishedAt: Date | null
    }, ExtArgs["result"]["course"]>
    composites: {}
  }

  type CourseGetPayload<S extends boolean | null | undefined | CourseDefaultArgs> = $Result.GetResult<Prisma.$CoursePayload, S>

  type CourseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CourseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CourseCountAggregateInputType | true
    }

  export interface CourseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Course'], meta: { name: 'Course' } }
    /**
     * Find zero or one Course that matches the filter.
     * @param {CourseFindUniqueArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CourseFindUniqueArgs>(args: SelectSubset<T, CourseFindUniqueArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Course that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CourseFindUniqueOrThrowArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CourseFindUniqueOrThrowArgs>(args: SelectSubset<T, CourseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Course that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindFirstArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CourseFindFirstArgs>(args?: SelectSubset<T, CourseFindFirstArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Course that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindFirstOrThrowArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CourseFindFirstOrThrowArgs>(args?: SelectSubset<T, CourseFindFirstOrThrowArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Courses
     * const courses = await prisma.course.findMany()
     * 
     * // Get first 10 Courses
     * const courses = await prisma.course.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const courseWithIdOnly = await prisma.course.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CourseFindManyArgs>(args?: SelectSubset<T, CourseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Course.
     * @param {CourseCreateArgs} args - Arguments to create a Course.
     * @example
     * // Create one Course
     * const Course = await prisma.course.create({
     *   data: {
     *     // ... data to create a Course
     *   }
     * })
     * 
     */
    create<T extends CourseCreateArgs>(args: SelectSubset<T, CourseCreateArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Courses.
     * @param {CourseCreateManyArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const course = await prisma.course.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CourseCreateManyArgs>(args?: SelectSubset<T, CourseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Courses and returns the data saved in the database.
     * @param {CourseCreateManyAndReturnArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const course = await prisma.course.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Courses and only return the `id`
     * const courseWithIdOnly = await prisma.course.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CourseCreateManyAndReturnArgs>(args?: SelectSubset<T, CourseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Course.
     * @param {CourseDeleteArgs} args - Arguments to delete one Course.
     * @example
     * // Delete one Course
     * const Course = await prisma.course.delete({
     *   where: {
     *     // ... filter to delete one Course
     *   }
     * })
     * 
     */
    delete<T extends CourseDeleteArgs>(args: SelectSubset<T, CourseDeleteArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Course.
     * @param {CourseUpdateArgs} args - Arguments to update one Course.
     * @example
     * // Update one Course
     * const course = await prisma.course.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CourseUpdateArgs>(args: SelectSubset<T, CourseUpdateArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Courses.
     * @param {CourseDeleteManyArgs} args - Arguments to filter Courses to delete.
     * @example
     * // Delete a few Courses
     * const { count } = await prisma.course.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CourseDeleteManyArgs>(args?: SelectSubset<T, CourseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Courses
     * const course = await prisma.course.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CourseUpdateManyArgs>(args: SelectSubset<T, CourseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Course.
     * @param {CourseUpsertArgs} args - Arguments to update or create a Course.
     * @example
     * // Update or create a Course
     * const course = await prisma.course.upsert({
     *   create: {
     *     // ... data to create a Course
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Course we want to update
     *   }
     * })
     */
    upsert<T extends CourseUpsertArgs>(args: SelectSubset<T, CourseUpsertArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseCountArgs} args - Arguments to filter Courses to count.
     * @example
     * // Count the number of Courses
     * const count = await prisma.course.count({
     *   where: {
     *     // ... the filter for the Courses we want to count
     *   }
     * })
    **/
    count<T extends CourseCountArgs>(
      args?: Subset<T, CourseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Course.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourseAggregateArgs>(args: Subset<T, CourseAggregateArgs>): Prisma.PrismaPromise<GetCourseAggregateType<T>>

    /**
     * Group by Course.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CourseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CourseGroupByArgs['orderBy'] }
        : { orderBy?: CourseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CourseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Course model
   */
  readonly fields: CourseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Course.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CourseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    certificates<T extends Course$certificatesArgs<ExtArgs> = {}>(args?: Subset<T, Course$certificatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findMany"> | Null>
    enrollments<T extends Course$enrollmentsArgs<ExtArgs> = {}>(args?: Subset<T, Course$enrollmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findMany"> | Null>
    modules<T extends Course$modulesArgs<ExtArgs> = {}>(args?: Subset<T, Course$modulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findMany"> | Null>
    instructor<T extends Course$instructorArgs<ExtArgs> = {}>(args?: Subset<T, Course$instructorArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    quizzes<T extends Course$quizzesArgs<ExtArgs> = {}>(args?: Subset<T, Course$quizzesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Course model
   */ 
  interface CourseFieldRefs {
    readonly id: FieldRef<"Course", 'String'>
    readonly title: FieldRef<"Course", 'String'>
    readonly slug: FieldRef<"Course", 'String'>
    readonly description: FieldRef<"Course", 'String'>
    readonly shortDescription: FieldRef<"Course", 'String'>
    readonly thumbnail: FieldRef<"Course", 'String'>
    readonly videoPreview: FieldRef<"Course", 'String'>
    readonly objectives: FieldRef<"Course", 'String[]'>
    readonly prerequisites: FieldRef<"Course", 'String[]'>
    readonly duration: FieldRef<"Course", 'Int'>
    readonly level: FieldRef<"Course", 'CourseLevel'>
    readonly category: FieldRef<"Course", 'CourseCategory'>
    readonly isMandatory: FieldRef<"Course", 'Boolean'>
    readonly isActive: FieldRef<"Course", 'Boolean'>
    readonly price: FieldRef<"Course", 'Decimal'>
    readonly rating: FieldRef<"Course", 'Decimal'>
    readonly studentsCount: FieldRef<"Course", 'Int'>
    readonly completionRate: FieldRef<"Course", 'Decimal'>
    readonly totalLessons: FieldRef<"Course", 'Int'>
    readonly totalQuizzes: FieldRef<"Course", 'Int'>
    readonly totalResources: FieldRef<"Course", 'Int'>
    readonly tags: FieldRef<"Course", 'String[]'>
    readonly certification: FieldRef<"Course", 'Boolean'>
    readonly includedMaterials: FieldRef<"Course", 'String[]'>
    readonly instructorId: FieldRef<"Course", 'String'>
    readonly institutionName: FieldRef<"Course", 'String'>
    readonly createdAt: FieldRef<"Course", 'DateTime'>
    readonly updatedAt: FieldRef<"Course", 'DateTime'>
    readonly publishedAt: FieldRef<"Course", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Course findUnique
   */
  export type CourseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course findUniqueOrThrow
   */
  export type CourseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course findFirst
   */
  export type CourseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Courses.
     */
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course findFirstOrThrow
   */
  export type CourseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Courses.
     */
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course findMany
   */
  export type CourseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Courses to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course create
   */
  export type CourseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The data needed to create a Course.
     */
    data: XOR<CourseCreateInput, CourseUncheckedCreateInput>
  }

  /**
   * Course createMany
   */
  export type CourseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Courses.
     */
    data: CourseCreateManyInput | CourseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Course createManyAndReturn
   */
  export type CourseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Courses.
     */
    data: CourseCreateManyInput | CourseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Course update
   */
  export type CourseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The data needed to update a Course.
     */
    data: XOR<CourseUpdateInput, CourseUncheckedUpdateInput>
    /**
     * Choose, which Course to update.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course updateMany
   */
  export type CourseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Courses.
     */
    data: XOR<CourseUpdateManyMutationInput, CourseUncheckedUpdateManyInput>
    /**
     * Filter which Courses to update
     */
    where?: CourseWhereInput
  }

  /**
   * Course upsert
   */
  export type CourseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The filter to search for the Course to update in case it exists.
     */
    where: CourseWhereUniqueInput
    /**
     * In case the Course found by the `where` argument doesn't exist, create a new Course with this data.
     */
    create: XOR<CourseCreateInput, CourseUncheckedCreateInput>
    /**
     * In case the Course was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CourseUpdateInput, CourseUncheckedUpdateInput>
  }

  /**
   * Course delete
   */
  export type CourseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter which Course to delete.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course deleteMany
   */
  export type CourseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Courses to delete
     */
    where?: CourseWhereInput
  }

  /**
   * Course.certificates
   */
  export type Course$certificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    where?: CertificateWhereInput
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    cursor?: CertificateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CertificateScalarFieldEnum | CertificateScalarFieldEnum[]
  }

  /**
   * Course.enrollments
   */
  export type Course$enrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    where?: CourseEnrollmentWhereInput
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    cursor?: CourseEnrollmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CourseEnrollmentScalarFieldEnum | CourseEnrollmentScalarFieldEnum[]
  }

  /**
   * Course.modules
   */
  export type Course$modulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    where?: CourseModuleWhereInput
    orderBy?: CourseModuleOrderByWithRelationInput | CourseModuleOrderByWithRelationInput[]
    cursor?: CourseModuleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CourseModuleScalarFieldEnum | CourseModuleScalarFieldEnum[]
  }

  /**
   * Course.instructor
   */
  export type Course$instructorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * Course.quizzes
   */
  export type Course$quizzesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    where?: QuizWhereInput
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    cursor?: QuizWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }

  /**
   * Course without action
   */
  export type CourseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
  }


  /**
   * Model CourseModule
   */

  export type AggregateCourseModule = {
    _count: CourseModuleCountAggregateOutputType | null
    _avg: CourseModuleAvgAggregateOutputType | null
    _sum: CourseModuleSumAggregateOutputType | null
    _min: CourseModuleMinAggregateOutputType | null
    _max: CourseModuleMaxAggregateOutputType | null
  }

  export type CourseModuleAvgAggregateOutputType = {
    orderIndex: number | null
    estimatedDuration: number | null
  }

  export type CourseModuleSumAggregateOutputType = {
    orderIndex: number | null
    estimatedDuration: number | null
  }

  export type CourseModuleMinAggregateOutputType = {
    id: string | null
    courseId: string | null
    title: string | null
    description: string | null
    orderIndex: number | null
    estimatedDuration: number | null
    isLocked: boolean | null
    hasCertificate: boolean | null
    certificateTemplate: string | null
  }

  export type CourseModuleMaxAggregateOutputType = {
    id: string | null
    courseId: string | null
    title: string | null
    description: string | null
    orderIndex: number | null
    estimatedDuration: number | null
    isLocked: boolean | null
    hasCertificate: boolean | null
    certificateTemplate: string | null
  }

  export type CourseModuleCountAggregateOutputType = {
    id: number
    courseId: number
    title: number
    description: number
    orderIndex: number
    estimatedDuration: number
    isLocked: number
    prerequisites: number
    hasCertificate: number
    certificateTemplate: number
    _all: number
  }


  export type CourseModuleAvgAggregateInputType = {
    orderIndex?: true
    estimatedDuration?: true
  }

  export type CourseModuleSumAggregateInputType = {
    orderIndex?: true
    estimatedDuration?: true
  }

  export type CourseModuleMinAggregateInputType = {
    id?: true
    courseId?: true
    title?: true
    description?: true
    orderIndex?: true
    estimatedDuration?: true
    isLocked?: true
    hasCertificate?: true
    certificateTemplate?: true
  }

  export type CourseModuleMaxAggregateInputType = {
    id?: true
    courseId?: true
    title?: true
    description?: true
    orderIndex?: true
    estimatedDuration?: true
    isLocked?: true
    hasCertificate?: true
    certificateTemplate?: true
  }

  export type CourseModuleCountAggregateInputType = {
    id?: true
    courseId?: true
    title?: true
    description?: true
    orderIndex?: true
    estimatedDuration?: true
    isLocked?: true
    prerequisites?: true
    hasCertificate?: true
    certificateTemplate?: true
    _all?: true
  }

  export type CourseModuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CourseModule to aggregate.
     */
    where?: CourseModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseModules to fetch.
     */
    orderBy?: CourseModuleOrderByWithRelationInput | CourseModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CourseModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CourseModules
    **/
    _count?: true | CourseModuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CourseModuleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CourseModuleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourseModuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourseModuleMaxAggregateInputType
  }

  export type GetCourseModuleAggregateType<T extends CourseModuleAggregateArgs> = {
        [P in keyof T & keyof AggregateCourseModule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourseModule[P]>
      : GetScalarType<T[P], AggregateCourseModule[P]>
  }




  export type CourseModuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseModuleWhereInput
    orderBy?: CourseModuleOrderByWithAggregationInput | CourseModuleOrderByWithAggregationInput[]
    by: CourseModuleScalarFieldEnum[] | CourseModuleScalarFieldEnum
    having?: CourseModuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourseModuleCountAggregateInputType | true
    _avg?: CourseModuleAvgAggregateInputType
    _sum?: CourseModuleSumAggregateInputType
    _min?: CourseModuleMinAggregateInputType
    _max?: CourseModuleMaxAggregateInputType
  }

  export type CourseModuleGroupByOutputType = {
    id: string
    courseId: string
    title: string
    description: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked: boolean
    prerequisites: string[]
    hasCertificate: boolean
    certificateTemplate: string | null
    _count: CourseModuleCountAggregateOutputType | null
    _avg: CourseModuleAvgAggregateOutputType | null
    _sum: CourseModuleSumAggregateOutputType | null
    _min: CourseModuleMinAggregateOutputType | null
    _max: CourseModuleMaxAggregateOutputType | null
  }

  type GetCourseModuleGroupByPayload<T extends CourseModuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourseModuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourseModuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourseModuleGroupByOutputType[P]>
            : GetScalarType<T[P], CourseModuleGroupByOutputType[P]>
        }
      >
    >


  export type CourseModuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    courseId?: boolean
    title?: boolean
    description?: boolean
    orderIndex?: boolean
    estimatedDuration?: boolean
    isLocked?: boolean
    prerequisites?: boolean
    hasCertificate?: boolean
    certificateTemplate?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
    lessons?: boolean | CourseModule$lessonsArgs<ExtArgs>
    moduleCertificates?: boolean | CourseModule$moduleCertificatesArgs<ExtArgs>
    _count?: boolean | CourseModuleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courseModule"]>

  export type CourseModuleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    courseId?: boolean
    title?: boolean
    description?: boolean
    orderIndex?: boolean
    estimatedDuration?: boolean
    isLocked?: boolean
    prerequisites?: boolean
    hasCertificate?: boolean
    certificateTemplate?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courseModule"]>

  export type CourseModuleSelectScalar = {
    id?: boolean
    courseId?: boolean
    title?: boolean
    description?: boolean
    orderIndex?: boolean
    estimatedDuration?: boolean
    isLocked?: boolean
    prerequisites?: boolean
    hasCertificate?: boolean
    certificateTemplate?: boolean
  }

  export type CourseModuleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
    lessons?: boolean | CourseModule$lessonsArgs<ExtArgs>
    moduleCertificates?: boolean | CourseModule$moduleCertificatesArgs<ExtArgs>
    _count?: boolean | CourseModuleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CourseModuleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
  }

  export type $CourseModulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CourseModule"
    objects: {
      course: Prisma.$CoursePayload<ExtArgs>
      lessons: Prisma.$LessonPayload<ExtArgs>[]
      moduleCertificates: Prisma.$ModuleCertificatePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      courseId: string
      title: string
      description: string | null
      orderIndex: number
      estimatedDuration: number
      isLocked: boolean
      prerequisites: string[]
      hasCertificate: boolean
      certificateTemplate: string | null
    }, ExtArgs["result"]["courseModule"]>
    composites: {}
  }

  type CourseModuleGetPayload<S extends boolean | null | undefined | CourseModuleDefaultArgs> = $Result.GetResult<Prisma.$CourseModulePayload, S>

  type CourseModuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CourseModuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CourseModuleCountAggregateInputType | true
    }

  export interface CourseModuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CourseModule'], meta: { name: 'CourseModule' } }
    /**
     * Find zero or one CourseModule that matches the filter.
     * @param {CourseModuleFindUniqueArgs} args - Arguments to find a CourseModule
     * @example
     * // Get one CourseModule
     * const courseModule = await prisma.courseModule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CourseModuleFindUniqueArgs>(args: SelectSubset<T, CourseModuleFindUniqueArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CourseModule that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CourseModuleFindUniqueOrThrowArgs} args - Arguments to find a CourseModule
     * @example
     * // Get one CourseModule
     * const courseModule = await prisma.courseModule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CourseModuleFindUniqueOrThrowArgs>(args: SelectSubset<T, CourseModuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CourseModule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleFindFirstArgs} args - Arguments to find a CourseModule
     * @example
     * // Get one CourseModule
     * const courseModule = await prisma.courseModule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CourseModuleFindFirstArgs>(args?: SelectSubset<T, CourseModuleFindFirstArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CourseModule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleFindFirstOrThrowArgs} args - Arguments to find a CourseModule
     * @example
     * // Get one CourseModule
     * const courseModule = await prisma.courseModule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CourseModuleFindFirstOrThrowArgs>(args?: SelectSubset<T, CourseModuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CourseModules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CourseModules
     * const courseModules = await prisma.courseModule.findMany()
     * 
     * // Get first 10 CourseModules
     * const courseModules = await prisma.courseModule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const courseModuleWithIdOnly = await prisma.courseModule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CourseModuleFindManyArgs>(args?: SelectSubset<T, CourseModuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CourseModule.
     * @param {CourseModuleCreateArgs} args - Arguments to create a CourseModule.
     * @example
     * // Create one CourseModule
     * const CourseModule = await prisma.courseModule.create({
     *   data: {
     *     // ... data to create a CourseModule
     *   }
     * })
     * 
     */
    create<T extends CourseModuleCreateArgs>(args: SelectSubset<T, CourseModuleCreateArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CourseModules.
     * @param {CourseModuleCreateManyArgs} args - Arguments to create many CourseModules.
     * @example
     * // Create many CourseModules
     * const courseModule = await prisma.courseModule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CourseModuleCreateManyArgs>(args?: SelectSubset<T, CourseModuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CourseModules and returns the data saved in the database.
     * @param {CourseModuleCreateManyAndReturnArgs} args - Arguments to create many CourseModules.
     * @example
     * // Create many CourseModules
     * const courseModule = await prisma.courseModule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CourseModules and only return the `id`
     * const courseModuleWithIdOnly = await prisma.courseModule.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CourseModuleCreateManyAndReturnArgs>(args?: SelectSubset<T, CourseModuleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CourseModule.
     * @param {CourseModuleDeleteArgs} args - Arguments to delete one CourseModule.
     * @example
     * // Delete one CourseModule
     * const CourseModule = await prisma.courseModule.delete({
     *   where: {
     *     // ... filter to delete one CourseModule
     *   }
     * })
     * 
     */
    delete<T extends CourseModuleDeleteArgs>(args: SelectSubset<T, CourseModuleDeleteArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CourseModule.
     * @param {CourseModuleUpdateArgs} args - Arguments to update one CourseModule.
     * @example
     * // Update one CourseModule
     * const courseModule = await prisma.courseModule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CourseModuleUpdateArgs>(args: SelectSubset<T, CourseModuleUpdateArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CourseModules.
     * @param {CourseModuleDeleteManyArgs} args - Arguments to filter CourseModules to delete.
     * @example
     * // Delete a few CourseModules
     * const { count } = await prisma.courseModule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CourseModuleDeleteManyArgs>(args?: SelectSubset<T, CourseModuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CourseModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CourseModules
     * const courseModule = await prisma.courseModule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CourseModuleUpdateManyArgs>(args: SelectSubset<T, CourseModuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CourseModule.
     * @param {CourseModuleUpsertArgs} args - Arguments to update or create a CourseModule.
     * @example
     * // Update or create a CourseModule
     * const courseModule = await prisma.courseModule.upsert({
     *   create: {
     *     // ... data to create a CourseModule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CourseModule we want to update
     *   }
     * })
     */
    upsert<T extends CourseModuleUpsertArgs>(args: SelectSubset<T, CourseModuleUpsertArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CourseModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleCountArgs} args - Arguments to filter CourseModules to count.
     * @example
     * // Count the number of CourseModules
     * const count = await prisma.courseModule.count({
     *   where: {
     *     // ... the filter for the CourseModules we want to count
     *   }
     * })
    **/
    count<T extends CourseModuleCountArgs>(
      args?: Subset<T, CourseModuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourseModuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CourseModule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourseModuleAggregateArgs>(args: Subset<T, CourseModuleAggregateArgs>): Prisma.PrismaPromise<GetCourseModuleAggregateType<T>>

    /**
     * Group by CourseModule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseModuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CourseModuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CourseModuleGroupByArgs['orderBy'] }
        : { orderBy?: CourseModuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CourseModuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourseModuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CourseModule model
   */
  readonly fields: CourseModuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CourseModule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CourseModuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    course<T extends CourseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseDefaultArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    lessons<T extends CourseModule$lessonsArgs<ExtArgs> = {}>(args?: Subset<T, CourseModule$lessonsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findMany"> | Null>
    moduleCertificates<T extends CourseModule$moduleCertificatesArgs<ExtArgs> = {}>(args?: Subset<T, CourseModule$moduleCertificatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CourseModule model
   */ 
  interface CourseModuleFieldRefs {
    readonly id: FieldRef<"CourseModule", 'String'>
    readonly courseId: FieldRef<"CourseModule", 'String'>
    readonly title: FieldRef<"CourseModule", 'String'>
    readonly description: FieldRef<"CourseModule", 'String'>
    readonly orderIndex: FieldRef<"CourseModule", 'Int'>
    readonly estimatedDuration: FieldRef<"CourseModule", 'Int'>
    readonly isLocked: FieldRef<"CourseModule", 'Boolean'>
    readonly prerequisites: FieldRef<"CourseModule", 'String[]'>
    readonly hasCertificate: FieldRef<"CourseModule", 'Boolean'>
    readonly certificateTemplate: FieldRef<"CourseModule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CourseModule findUnique
   */
  export type CourseModuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter, which CourseModule to fetch.
     */
    where: CourseModuleWhereUniqueInput
  }

  /**
   * CourseModule findUniqueOrThrow
   */
  export type CourseModuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter, which CourseModule to fetch.
     */
    where: CourseModuleWhereUniqueInput
  }

  /**
   * CourseModule findFirst
   */
  export type CourseModuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter, which CourseModule to fetch.
     */
    where?: CourseModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseModules to fetch.
     */
    orderBy?: CourseModuleOrderByWithRelationInput | CourseModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CourseModules.
     */
    cursor?: CourseModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CourseModules.
     */
    distinct?: CourseModuleScalarFieldEnum | CourseModuleScalarFieldEnum[]
  }

  /**
   * CourseModule findFirstOrThrow
   */
  export type CourseModuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter, which CourseModule to fetch.
     */
    where?: CourseModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseModules to fetch.
     */
    orderBy?: CourseModuleOrderByWithRelationInput | CourseModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CourseModules.
     */
    cursor?: CourseModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CourseModules.
     */
    distinct?: CourseModuleScalarFieldEnum | CourseModuleScalarFieldEnum[]
  }

  /**
   * CourseModule findMany
   */
  export type CourseModuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter, which CourseModules to fetch.
     */
    where?: CourseModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseModules to fetch.
     */
    orderBy?: CourseModuleOrderByWithRelationInput | CourseModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CourseModules.
     */
    cursor?: CourseModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseModules.
     */
    skip?: number
    distinct?: CourseModuleScalarFieldEnum | CourseModuleScalarFieldEnum[]
  }

  /**
   * CourseModule create
   */
  export type CourseModuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * The data needed to create a CourseModule.
     */
    data: XOR<CourseModuleCreateInput, CourseModuleUncheckedCreateInput>
  }

  /**
   * CourseModule createMany
   */
  export type CourseModuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CourseModules.
     */
    data: CourseModuleCreateManyInput | CourseModuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CourseModule createManyAndReturn
   */
  export type CourseModuleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CourseModules.
     */
    data: CourseModuleCreateManyInput | CourseModuleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CourseModule update
   */
  export type CourseModuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * The data needed to update a CourseModule.
     */
    data: XOR<CourseModuleUpdateInput, CourseModuleUncheckedUpdateInput>
    /**
     * Choose, which CourseModule to update.
     */
    where: CourseModuleWhereUniqueInput
  }

  /**
   * CourseModule updateMany
   */
  export type CourseModuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CourseModules.
     */
    data: XOR<CourseModuleUpdateManyMutationInput, CourseModuleUncheckedUpdateManyInput>
    /**
     * Filter which CourseModules to update
     */
    where?: CourseModuleWhereInput
  }

  /**
   * CourseModule upsert
   */
  export type CourseModuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * The filter to search for the CourseModule to update in case it exists.
     */
    where: CourseModuleWhereUniqueInput
    /**
     * In case the CourseModule found by the `where` argument doesn't exist, create a new CourseModule with this data.
     */
    create: XOR<CourseModuleCreateInput, CourseModuleUncheckedCreateInput>
    /**
     * In case the CourseModule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CourseModuleUpdateInput, CourseModuleUncheckedUpdateInput>
  }

  /**
   * CourseModule delete
   */
  export type CourseModuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
    /**
     * Filter which CourseModule to delete.
     */
    where: CourseModuleWhereUniqueInput
  }

  /**
   * CourseModule deleteMany
   */
  export type CourseModuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CourseModules to delete
     */
    where?: CourseModuleWhereInput
  }

  /**
   * CourseModule.lessons
   */
  export type CourseModule$lessonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    where?: LessonWhereInput
    orderBy?: LessonOrderByWithRelationInput | LessonOrderByWithRelationInput[]
    cursor?: LessonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]
  }

  /**
   * CourseModule.moduleCertificates
   */
  export type CourseModule$moduleCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    where?: ModuleCertificateWhereInput
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    cursor?: ModuleCertificateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModuleCertificateScalarFieldEnum | ModuleCertificateScalarFieldEnum[]
  }

  /**
   * CourseModule without action
   */
  export type CourseModuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseModule
     */
    select?: CourseModuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseModuleInclude<ExtArgs> | null
  }


  /**
   * Model Lesson
   */

  export type AggregateLesson = {
    _count: LessonCountAggregateOutputType | null
    _avg: LessonAvgAggregateOutputType | null
    _sum: LessonSumAggregateOutputType | null
    _min: LessonMinAggregateOutputType | null
    _max: LessonMaxAggregateOutputType | null
  }

  export type LessonAvgAggregateOutputType = {
    duration: number | null
    orderIndex: number | null
  }

  export type LessonSumAggregateOutputType = {
    duration: number | null
    orderIndex: number | null
  }

  export type LessonMinAggregateOutputType = {
    id: string | null
    moduleId: string | null
    title: string | null
    description: string | null
    content: string | null
    contentType: $Enums.LessonType | null
    videoUrl: string | null
    duration: number | null
    orderIndex: number | null
    isRequired: boolean | null
    isPreview: boolean | null
  }

  export type LessonMaxAggregateOutputType = {
    id: string | null
    moduleId: string | null
    title: string | null
    description: string | null
    content: string | null
    contentType: $Enums.LessonType | null
    videoUrl: string | null
    duration: number | null
    orderIndex: number | null
    isRequired: boolean | null
    isPreview: boolean | null
  }

  export type LessonCountAggregateOutputType = {
    id: number
    moduleId: number
    title: number
    description: number
    content: number
    contentType: number
    videoUrl: number
    duration: number
    orderIndex: number
    isRequired: number
    isPreview: number
    attachments: number
    _all: number
  }


  export type LessonAvgAggregateInputType = {
    duration?: true
    orderIndex?: true
  }

  export type LessonSumAggregateInputType = {
    duration?: true
    orderIndex?: true
  }

  export type LessonMinAggregateInputType = {
    id?: true
    moduleId?: true
    title?: true
    description?: true
    content?: true
    contentType?: true
    videoUrl?: true
    duration?: true
    orderIndex?: true
    isRequired?: true
    isPreview?: true
  }

  export type LessonMaxAggregateInputType = {
    id?: true
    moduleId?: true
    title?: true
    description?: true
    content?: true
    contentType?: true
    videoUrl?: true
    duration?: true
    orderIndex?: true
    isRequired?: true
    isPreview?: true
  }

  export type LessonCountAggregateInputType = {
    id?: true
    moduleId?: true
    title?: true
    description?: true
    content?: true
    contentType?: true
    videoUrl?: true
    duration?: true
    orderIndex?: true
    isRequired?: true
    isPreview?: true
    attachments?: true
    _all?: true
  }

  export type LessonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lesson to aggregate.
     */
    where?: LessonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lessons to fetch.
     */
    orderBy?: LessonOrderByWithRelationInput | LessonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LessonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lessons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lessons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Lessons
    **/
    _count?: true | LessonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LessonAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LessonSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LessonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LessonMaxAggregateInputType
  }

  export type GetLessonAggregateType<T extends LessonAggregateArgs> = {
        [P in keyof T & keyof AggregateLesson]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLesson[P]>
      : GetScalarType<T[P], AggregateLesson[P]>
  }




  export type LessonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonWhereInput
    orderBy?: LessonOrderByWithAggregationInput | LessonOrderByWithAggregationInput[]
    by: LessonScalarFieldEnum[] | LessonScalarFieldEnum
    having?: LessonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LessonCountAggregateInputType | true
    _avg?: LessonAvgAggregateInputType
    _sum?: LessonSumAggregateInputType
    _min?: LessonMinAggregateInputType
    _max?: LessonMaxAggregateInputType
  }

  export type LessonGroupByOutputType = {
    id: string
    moduleId: string
    title: string
    description: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl: string | null
    duration: number | null
    orderIndex: number
    isRequired: boolean
    isPreview: boolean
    attachments: JsonValue | null
    _count: LessonCountAggregateOutputType | null
    _avg: LessonAvgAggregateOutputType | null
    _sum: LessonSumAggregateOutputType | null
    _min: LessonMinAggregateOutputType | null
    _max: LessonMaxAggregateOutputType | null
  }

  type GetLessonGroupByPayload<T extends LessonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LessonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LessonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LessonGroupByOutputType[P]>
            : GetScalarType<T[P], LessonGroupByOutputType[P]>
        }
      >
    >


  export type LessonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    moduleId?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    contentType?: boolean
    videoUrl?: boolean
    duration?: boolean
    orderIndex?: boolean
    isRequired?: boolean
    isPreview?: boolean
    attachments?: boolean
    resources?: boolean | Lesson$resourcesArgs<ExtArgs>
    discussions?: boolean | Lesson$discussionsArgs<ExtArgs>
    progress?: boolean | Lesson$progressArgs<ExtArgs>
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    quizzes?: boolean | Lesson$quizzesArgs<ExtArgs>
    notes?: boolean | Lesson$notesArgs<ExtArgs>
    _count?: boolean | LessonCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lesson"]>

  export type LessonSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    moduleId?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    contentType?: boolean
    videoUrl?: boolean
    duration?: boolean
    orderIndex?: boolean
    isRequired?: boolean
    isPreview?: boolean
    attachments?: boolean
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lesson"]>

  export type LessonSelectScalar = {
    id?: boolean
    moduleId?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    contentType?: boolean
    videoUrl?: boolean
    duration?: boolean
    orderIndex?: boolean
    isRequired?: boolean
    isPreview?: boolean
    attachments?: boolean
  }

  export type LessonInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    resources?: boolean | Lesson$resourcesArgs<ExtArgs>
    discussions?: boolean | Lesson$discussionsArgs<ExtArgs>
    progress?: boolean | Lesson$progressArgs<ExtArgs>
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    quizzes?: boolean | Lesson$quizzesArgs<ExtArgs>
    notes?: boolean | Lesson$notesArgs<ExtArgs>
    _count?: boolean | LessonCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LessonIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
  }

  export type $LessonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Lesson"
    objects: {
      resources: Prisma.$LessonResourcePayload<ExtArgs>[]
      discussions: Prisma.$DiscussionPayload<ExtArgs>[]
      progress: Prisma.$LessonProgressPayload<ExtArgs>[]
      module: Prisma.$CourseModulePayload<ExtArgs>
      quizzes: Prisma.$QuizPayload<ExtArgs>[]
      notes: Prisma.$StudentNotePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      moduleId: string
      title: string
      description: string | null
      content: string
      contentType: $Enums.LessonType
      videoUrl: string | null
      duration: number | null
      orderIndex: number
      isRequired: boolean
      isPreview: boolean
      attachments: Prisma.JsonValue | null
    }, ExtArgs["result"]["lesson"]>
    composites: {}
  }

  type LessonGetPayload<S extends boolean | null | undefined | LessonDefaultArgs> = $Result.GetResult<Prisma.$LessonPayload, S>

  type LessonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LessonFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LessonCountAggregateInputType | true
    }

  export interface LessonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lesson'], meta: { name: 'Lesson' } }
    /**
     * Find zero or one Lesson that matches the filter.
     * @param {LessonFindUniqueArgs} args - Arguments to find a Lesson
     * @example
     * // Get one Lesson
     * const lesson = await prisma.lesson.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LessonFindUniqueArgs>(args: SelectSubset<T, LessonFindUniqueArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Lesson that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LessonFindUniqueOrThrowArgs} args - Arguments to find a Lesson
     * @example
     * // Get one Lesson
     * const lesson = await prisma.lesson.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LessonFindUniqueOrThrowArgs>(args: SelectSubset<T, LessonFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Lesson that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonFindFirstArgs} args - Arguments to find a Lesson
     * @example
     * // Get one Lesson
     * const lesson = await prisma.lesson.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LessonFindFirstArgs>(args?: SelectSubset<T, LessonFindFirstArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Lesson that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonFindFirstOrThrowArgs} args - Arguments to find a Lesson
     * @example
     * // Get one Lesson
     * const lesson = await prisma.lesson.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LessonFindFirstOrThrowArgs>(args?: SelectSubset<T, LessonFindFirstOrThrowArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Lessons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lessons
     * const lessons = await prisma.lesson.findMany()
     * 
     * // Get first 10 Lessons
     * const lessons = await prisma.lesson.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lessonWithIdOnly = await prisma.lesson.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LessonFindManyArgs>(args?: SelectSubset<T, LessonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Lesson.
     * @param {LessonCreateArgs} args - Arguments to create a Lesson.
     * @example
     * // Create one Lesson
     * const Lesson = await prisma.lesson.create({
     *   data: {
     *     // ... data to create a Lesson
     *   }
     * })
     * 
     */
    create<T extends LessonCreateArgs>(args: SelectSubset<T, LessonCreateArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Lessons.
     * @param {LessonCreateManyArgs} args - Arguments to create many Lessons.
     * @example
     * // Create many Lessons
     * const lesson = await prisma.lesson.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LessonCreateManyArgs>(args?: SelectSubset<T, LessonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lessons and returns the data saved in the database.
     * @param {LessonCreateManyAndReturnArgs} args - Arguments to create many Lessons.
     * @example
     * // Create many Lessons
     * const lesson = await prisma.lesson.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lessons and only return the `id`
     * const lessonWithIdOnly = await prisma.lesson.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LessonCreateManyAndReturnArgs>(args?: SelectSubset<T, LessonCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Lesson.
     * @param {LessonDeleteArgs} args - Arguments to delete one Lesson.
     * @example
     * // Delete one Lesson
     * const Lesson = await prisma.lesson.delete({
     *   where: {
     *     // ... filter to delete one Lesson
     *   }
     * })
     * 
     */
    delete<T extends LessonDeleteArgs>(args: SelectSubset<T, LessonDeleteArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Lesson.
     * @param {LessonUpdateArgs} args - Arguments to update one Lesson.
     * @example
     * // Update one Lesson
     * const lesson = await prisma.lesson.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LessonUpdateArgs>(args: SelectSubset<T, LessonUpdateArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Lessons.
     * @param {LessonDeleteManyArgs} args - Arguments to filter Lessons to delete.
     * @example
     * // Delete a few Lessons
     * const { count } = await prisma.lesson.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LessonDeleteManyArgs>(args?: SelectSubset<T, LessonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lessons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lessons
     * const lesson = await prisma.lesson.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LessonUpdateManyArgs>(args: SelectSubset<T, LessonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lesson.
     * @param {LessonUpsertArgs} args - Arguments to update or create a Lesson.
     * @example
     * // Update or create a Lesson
     * const lesson = await prisma.lesson.upsert({
     *   create: {
     *     // ... data to create a Lesson
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lesson we want to update
     *   }
     * })
     */
    upsert<T extends LessonUpsertArgs>(args: SelectSubset<T, LessonUpsertArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Lessons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonCountArgs} args - Arguments to filter Lessons to count.
     * @example
     * // Count the number of Lessons
     * const count = await prisma.lesson.count({
     *   where: {
     *     // ... the filter for the Lessons we want to count
     *   }
     * })
    **/
    count<T extends LessonCountArgs>(
      args?: Subset<T, LessonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LessonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lesson.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LessonAggregateArgs>(args: Subset<T, LessonAggregateArgs>): Prisma.PrismaPromise<GetLessonAggregateType<T>>

    /**
     * Group by Lesson.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LessonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LessonGroupByArgs['orderBy'] }
        : { orderBy?: LessonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LessonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLessonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Lesson model
   */
  readonly fields: LessonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Lesson.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LessonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    resources<T extends Lesson$resourcesArgs<ExtArgs> = {}>(args?: Subset<T, Lesson$resourcesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findMany"> | Null>
    discussions<T extends Lesson$discussionsArgs<ExtArgs> = {}>(args?: Subset<T, Lesson$discussionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findMany"> | Null>
    progress<T extends Lesson$progressArgs<ExtArgs> = {}>(args?: Subset<T, Lesson$progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findMany"> | Null>
    module<T extends CourseModuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseModuleDefaultArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    quizzes<T extends Lesson$quizzesArgs<ExtArgs> = {}>(args?: Subset<T, Lesson$quizzesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findMany"> | Null>
    notes<T extends Lesson$notesArgs<ExtArgs> = {}>(args?: Subset<T, Lesson$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Lesson model
   */ 
  interface LessonFieldRefs {
    readonly id: FieldRef<"Lesson", 'String'>
    readonly moduleId: FieldRef<"Lesson", 'String'>
    readonly title: FieldRef<"Lesson", 'String'>
    readonly description: FieldRef<"Lesson", 'String'>
    readonly content: FieldRef<"Lesson", 'String'>
    readonly contentType: FieldRef<"Lesson", 'LessonType'>
    readonly videoUrl: FieldRef<"Lesson", 'String'>
    readonly duration: FieldRef<"Lesson", 'Int'>
    readonly orderIndex: FieldRef<"Lesson", 'Int'>
    readonly isRequired: FieldRef<"Lesson", 'Boolean'>
    readonly isPreview: FieldRef<"Lesson", 'Boolean'>
    readonly attachments: FieldRef<"Lesson", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Lesson findUnique
   */
  export type LessonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter, which Lesson to fetch.
     */
    where: LessonWhereUniqueInput
  }

  /**
   * Lesson findUniqueOrThrow
   */
  export type LessonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter, which Lesson to fetch.
     */
    where: LessonWhereUniqueInput
  }

  /**
   * Lesson findFirst
   */
  export type LessonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter, which Lesson to fetch.
     */
    where?: LessonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lessons to fetch.
     */
    orderBy?: LessonOrderByWithRelationInput | LessonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lessons.
     */
    cursor?: LessonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lessons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lessons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lessons.
     */
    distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]
  }

  /**
   * Lesson findFirstOrThrow
   */
  export type LessonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter, which Lesson to fetch.
     */
    where?: LessonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lessons to fetch.
     */
    orderBy?: LessonOrderByWithRelationInput | LessonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lessons.
     */
    cursor?: LessonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lessons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lessons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lessons.
     */
    distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]
  }

  /**
   * Lesson findMany
   */
  export type LessonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter, which Lessons to fetch.
     */
    where?: LessonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lessons to fetch.
     */
    orderBy?: LessonOrderByWithRelationInput | LessonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Lessons.
     */
    cursor?: LessonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lessons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lessons.
     */
    skip?: number
    distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]
  }

  /**
   * Lesson create
   */
  export type LessonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * The data needed to create a Lesson.
     */
    data: XOR<LessonCreateInput, LessonUncheckedCreateInput>
  }

  /**
   * Lesson createMany
   */
  export type LessonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Lessons.
     */
    data: LessonCreateManyInput | LessonCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Lesson createManyAndReturn
   */
  export type LessonCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Lessons.
     */
    data: LessonCreateManyInput | LessonCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Lesson update
   */
  export type LessonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * The data needed to update a Lesson.
     */
    data: XOR<LessonUpdateInput, LessonUncheckedUpdateInput>
    /**
     * Choose, which Lesson to update.
     */
    where: LessonWhereUniqueInput
  }

  /**
   * Lesson updateMany
   */
  export type LessonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Lessons.
     */
    data: XOR<LessonUpdateManyMutationInput, LessonUncheckedUpdateManyInput>
    /**
     * Filter which Lessons to update
     */
    where?: LessonWhereInput
  }

  /**
   * Lesson upsert
   */
  export type LessonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * The filter to search for the Lesson to update in case it exists.
     */
    where: LessonWhereUniqueInput
    /**
     * In case the Lesson found by the `where` argument doesn't exist, create a new Lesson with this data.
     */
    create: XOR<LessonCreateInput, LessonUncheckedCreateInput>
    /**
     * In case the Lesson was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LessonUpdateInput, LessonUncheckedUpdateInput>
  }

  /**
   * Lesson delete
   */
  export type LessonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    /**
     * Filter which Lesson to delete.
     */
    where: LessonWhereUniqueInput
  }

  /**
   * Lesson deleteMany
   */
  export type LessonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lessons to delete
     */
    where?: LessonWhereInput
  }

  /**
   * Lesson.resources
   */
  export type Lesson$resourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    where?: LessonResourceWhereInput
    orderBy?: LessonResourceOrderByWithRelationInput | LessonResourceOrderByWithRelationInput[]
    cursor?: LessonResourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LessonResourceScalarFieldEnum | LessonResourceScalarFieldEnum[]
  }

  /**
   * Lesson.discussions
   */
  export type Lesson$discussionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    where?: DiscussionWhereInput
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    cursor?: DiscussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Lesson.progress
   */
  export type Lesson$progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    where?: LessonProgressWhereInput
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    cursor?: LessonProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LessonProgressScalarFieldEnum | LessonProgressScalarFieldEnum[]
  }

  /**
   * Lesson.quizzes
   */
  export type Lesson$quizzesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    where?: QuizWhereInput
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    cursor?: QuizWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }

  /**
   * Lesson.notes
   */
  export type Lesson$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    where?: StudentNoteWhereInput
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    cursor?: StudentNoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StudentNoteScalarFieldEnum | StudentNoteScalarFieldEnum[]
  }

  /**
   * Lesson without action
   */
  export type LessonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
  }


  /**
   * Model CourseEnrollment
   */

  export type AggregateCourseEnrollment = {
    _count: CourseEnrollmentCountAggregateOutputType | null
    _avg: CourseEnrollmentAvgAggregateOutputType | null
    _sum: CourseEnrollmentSumAggregateOutputType | null
    _min: CourseEnrollmentMinAggregateOutputType | null
    _max: CourseEnrollmentMaxAggregateOutputType | null
  }

  export type CourseEnrollmentAvgAggregateOutputType = {
    progress: Decimal | null
    timeSpent: number | null
    finalGrade: number | null
  }

  export type CourseEnrollmentSumAggregateOutputType = {
    progress: Decimal | null
    timeSpent: number | null
    finalGrade: number | null
  }

  export type CourseEnrollmentMinAggregateOutputType = {
    id: string | null
    studentId: string | null
    courseId: string | null
    enrolledAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    status: $Enums.EnrollmentStatus | null
    progress: Decimal | null
    currentModuleId: string | null
    currentLessonId: string | null
    certificateUrl: string | null
    timeSpent: number | null
    certificateIssued: boolean | null
    finalGrade: number | null
  }

  export type CourseEnrollmentMaxAggregateOutputType = {
    id: string | null
    studentId: string | null
    courseId: string | null
    enrolledAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    status: $Enums.EnrollmentStatus | null
    progress: Decimal | null
    currentModuleId: string | null
    currentLessonId: string | null
    certificateUrl: string | null
    timeSpent: number | null
    certificateIssued: boolean | null
    finalGrade: number | null
  }

  export type CourseEnrollmentCountAggregateOutputType = {
    id: number
    studentId: number
    courseId: number
    enrolledAt: number
    startedAt: number
    completedAt: number
    status: number
    progress: number
    currentModuleId: number
    currentLessonId: number
    certificateUrl: number
    timeSpent: number
    certificateIssued: number
    finalGrade: number
    moduleProgress: number
    quizResults: number
    _all: number
  }


  export type CourseEnrollmentAvgAggregateInputType = {
    progress?: true
    timeSpent?: true
    finalGrade?: true
  }

  export type CourseEnrollmentSumAggregateInputType = {
    progress?: true
    timeSpent?: true
    finalGrade?: true
  }

  export type CourseEnrollmentMinAggregateInputType = {
    id?: true
    studentId?: true
    courseId?: true
    enrolledAt?: true
    startedAt?: true
    completedAt?: true
    status?: true
    progress?: true
    currentModuleId?: true
    currentLessonId?: true
    certificateUrl?: true
    timeSpent?: true
    certificateIssued?: true
    finalGrade?: true
  }

  export type CourseEnrollmentMaxAggregateInputType = {
    id?: true
    studentId?: true
    courseId?: true
    enrolledAt?: true
    startedAt?: true
    completedAt?: true
    status?: true
    progress?: true
    currentModuleId?: true
    currentLessonId?: true
    certificateUrl?: true
    timeSpent?: true
    certificateIssued?: true
    finalGrade?: true
  }

  export type CourseEnrollmentCountAggregateInputType = {
    id?: true
    studentId?: true
    courseId?: true
    enrolledAt?: true
    startedAt?: true
    completedAt?: true
    status?: true
    progress?: true
    currentModuleId?: true
    currentLessonId?: true
    certificateUrl?: true
    timeSpent?: true
    certificateIssued?: true
    finalGrade?: true
    moduleProgress?: true
    quizResults?: true
    _all?: true
  }

  export type CourseEnrollmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CourseEnrollment to aggregate.
     */
    where?: CourseEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseEnrollments to fetch.
     */
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CourseEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CourseEnrollments
    **/
    _count?: true | CourseEnrollmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CourseEnrollmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CourseEnrollmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourseEnrollmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourseEnrollmentMaxAggregateInputType
  }

  export type GetCourseEnrollmentAggregateType<T extends CourseEnrollmentAggregateArgs> = {
        [P in keyof T & keyof AggregateCourseEnrollment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourseEnrollment[P]>
      : GetScalarType<T[P], AggregateCourseEnrollment[P]>
  }




  export type CourseEnrollmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseEnrollmentWhereInput
    orderBy?: CourseEnrollmentOrderByWithAggregationInput | CourseEnrollmentOrderByWithAggregationInput[]
    by: CourseEnrollmentScalarFieldEnum[] | CourseEnrollmentScalarFieldEnum
    having?: CourseEnrollmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourseEnrollmentCountAggregateInputType | true
    _avg?: CourseEnrollmentAvgAggregateInputType
    _sum?: CourseEnrollmentSumAggregateInputType
    _min?: CourseEnrollmentMinAggregateInputType
    _max?: CourseEnrollmentMaxAggregateInputType
  }

  export type CourseEnrollmentGroupByOutputType = {
    id: string
    studentId: string
    courseId: string
    enrolledAt: Date
    startedAt: Date | null
    completedAt: Date | null
    status: $Enums.EnrollmentStatus
    progress: Decimal
    currentModuleId: string | null
    currentLessonId: string | null
    certificateUrl: string | null
    timeSpent: number
    certificateIssued: boolean
    finalGrade: number | null
    moduleProgress: JsonValue | null
    quizResults: JsonValue | null
    _count: CourseEnrollmentCountAggregateOutputType | null
    _avg: CourseEnrollmentAvgAggregateOutputType | null
    _sum: CourseEnrollmentSumAggregateOutputType | null
    _min: CourseEnrollmentMinAggregateOutputType | null
    _max: CourseEnrollmentMaxAggregateOutputType | null
  }

  type GetCourseEnrollmentGroupByPayload<T extends CourseEnrollmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourseEnrollmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourseEnrollmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourseEnrollmentGroupByOutputType[P]>
            : GetScalarType<T[P], CourseEnrollmentGroupByOutputType[P]>
        }
      >
    >


  export type CourseEnrollmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    studentId?: boolean
    courseId?: boolean
    enrolledAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    status?: boolean
    progress?: boolean
    currentModuleId?: boolean
    currentLessonId?: boolean
    certificateUrl?: boolean
    timeSpent?: boolean
    certificateIssued?: boolean
    finalGrade?: boolean
    moduleProgress?: boolean
    quizResults?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
    lessonProgress?: boolean | CourseEnrollment$lessonProgressArgs<ExtArgs>
    quizAttempts?: boolean | CourseEnrollment$quizAttemptsArgs<ExtArgs>
    _count?: boolean | CourseEnrollmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courseEnrollment"]>

  export type CourseEnrollmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    studentId?: boolean
    courseId?: boolean
    enrolledAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    status?: boolean
    progress?: boolean
    currentModuleId?: boolean
    currentLessonId?: boolean
    certificateUrl?: boolean
    timeSpent?: boolean
    certificateIssued?: boolean
    finalGrade?: boolean
    moduleProgress?: boolean
    quizResults?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courseEnrollment"]>

  export type CourseEnrollmentSelectScalar = {
    id?: boolean
    studentId?: boolean
    courseId?: boolean
    enrolledAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    status?: boolean
    progress?: boolean
    currentModuleId?: boolean
    currentLessonId?: boolean
    certificateUrl?: boolean
    timeSpent?: boolean
    certificateIssued?: boolean
    finalGrade?: boolean
    moduleProgress?: boolean
    quizResults?: boolean
  }

  export type CourseEnrollmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
    lessonProgress?: boolean | CourseEnrollment$lessonProgressArgs<ExtArgs>
    quizAttempts?: boolean | CourseEnrollment$quizAttemptsArgs<ExtArgs>
    _count?: boolean | CourseEnrollmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CourseEnrollmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $CourseEnrollmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CourseEnrollment"
    objects: {
      course: Prisma.$CoursePayload<ExtArgs>
      student: Prisma.$ProfilePayload<ExtArgs>
      lessonProgress: Prisma.$LessonProgressPayload<ExtArgs>[]
      quizAttempts: Prisma.$QuizAttemptPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      studentId: string
      courseId: string
      enrolledAt: Date
      startedAt: Date | null
      completedAt: Date | null
      status: $Enums.EnrollmentStatus
      progress: Prisma.Decimal
      currentModuleId: string | null
      currentLessonId: string | null
      certificateUrl: string | null
      timeSpent: number
      certificateIssued: boolean
      finalGrade: number | null
      moduleProgress: Prisma.JsonValue | null
      quizResults: Prisma.JsonValue | null
    }, ExtArgs["result"]["courseEnrollment"]>
    composites: {}
  }

  type CourseEnrollmentGetPayload<S extends boolean | null | undefined | CourseEnrollmentDefaultArgs> = $Result.GetResult<Prisma.$CourseEnrollmentPayload, S>

  type CourseEnrollmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CourseEnrollmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CourseEnrollmentCountAggregateInputType | true
    }

  export interface CourseEnrollmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CourseEnrollment'], meta: { name: 'CourseEnrollment' } }
    /**
     * Find zero or one CourseEnrollment that matches the filter.
     * @param {CourseEnrollmentFindUniqueArgs} args - Arguments to find a CourseEnrollment
     * @example
     * // Get one CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CourseEnrollmentFindUniqueArgs>(args: SelectSubset<T, CourseEnrollmentFindUniqueArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CourseEnrollment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CourseEnrollmentFindUniqueOrThrowArgs} args - Arguments to find a CourseEnrollment
     * @example
     * // Get one CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CourseEnrollmentFindUniqueOrThrowArgs>(args: SelectSubset<T, CourseEnrollmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CourseEnrollment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentFindFirstArgs} args - Arguments to find a CourseEnrollment
     * @example
     * // Get one CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CourseEnrollmentFindFirstArgs>(args?: SelectSubset<T, CourseEnrollmentFindFirstArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CourseEnrollment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentFindFirstOrThrowArgs} args - Arguments to find a CourseEnrollment
     * @example
     * // Get one CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CourseEnrollmentFindFirstOrThrowArgs>(args?: SelectSubset<T, CourseEnrollmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CourseEnrollments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CourseEnrollments
     * const courseEnrollments = await prisma.courseEnrollment.findMany()
     * 
     * // Get first 10 CourseEnrollments
     * const courseEnrollments = await prisma.courseEnrollment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const courseEnrollmentWithIdOnly = await prisma.courseEnrollment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CourseEnrollmentFindManyArgs>(args?: SelectSubset<T, CourseEnrollmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CourseEnrollment.
     * @param {CourseEnrollmentCreateArgs} args - Arguments to create a CourseEnrollment.
     * @example
     * // Create one CourseEnrollment
     * const CourseEnrollment = await prisma.courseEnrollment.create({
     *   data: {
     *     // ... data to create a CourseEnrollment
     *   }
     * })
     * 
     */
    create<T extends CourseEnrollmentCreateArgs>(args: SelectSubset<T, CourseEnrollmentCreateArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CourseEnrollments.
     * @param {CourseEnrollmentCreateManyArgs} args - Arguments to create many CourseEnrollments.
     * @example
     * // Create many CourseEnrollments
     * const courseEnrollment = await prisma.courseEnrollment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CourseEnrollmentCreateManyArgs>(args?: SelectSubset<T, CourseEnrollmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CourseEnrollments and returns the data saved in the database.
     * @param {CourseEnrollmentCreateManyAndReturnArgs} args - Arguments to create many CourseEnrollments.
     * @example
     * // Create many CourseEnrollments
     * const courseEnrollment = await prisma.courseEnrollment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CourseEnrollments and only return the `id`
     * const courseEnrollmentWithIdOnly = await prisma.courseEnrollment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CourseEnrollmentCreateManyAndReturnArgs>(args?: SelectSubset<T, CourseEnrollmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CourseEnrollment.
     * @param {CourseEnrollmentDeleteArgs} args - Arguments to delete one CourseEnrollment.
     * @example
     * // Delete one CourseEnrollment
     * const CourseEnrollment = await prisma.courseEnrollment.delete({
     *   where: {
     *     // ... filter to delete one CourseEnrollment
     *   }
     * })
     * 
     */
    delete<T extends CourseEnrollmentDeleteArgs>(args: SelectSubset<T, CourseEnrollmentDeleteArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CourseEnrollment.
     * @param {CourseEnrollmentUpdateArgs} args - Arguments to update one CourseEnrollment.
     * @example
     * // Update one CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CourseEnrollmentUpdateArgs>(args: SelectSubset<T, CourseEnrollmentUpdateArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CourseEnrollments.
     * @param {CourseEnrollmentDeleteManyArgs} args - Arguments to filter CourseEnrollments to delete.
     * @example
     * // Delete a few CourseEnrollments
     * const { count } = await prisma.courseEnrollment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CourseEnrollmentDeleteManyArgs>(args?: SelectSubset<T, CourseEnrollmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CourseEnrollments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CourseEnrollments
     * const courseEnrollment = await prisma.courseEnrollment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CourseEnrollmentUpdateManyArgs>(args: SelectSubset<T, CourseEnrollmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CourseEnrollment.
     * @param {CourseEnrollmentUpsertArgs} args - Arguments to update or create a CourseEnrollment.
     * @example
     * // Update or create a CourseEnrollment
     * const courseEnrollment = await prisma.courseEnrollment.upsert({
     *   create: {
     *     // ... data to create a CourseEnrollment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CourseEnrollment we want to update
     *   }
     * })
     */
    upsert<T extends CourseEnrollmentUpsertArgs>(args: SelectSubset<T, CourseEnrollmentUpsertArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CourseEnrollments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentCountArgs} args - Arguments to filter CourseEnrollments to count.
     * @example
     * // Count the number of CourseEnrollments
     * const count = await prisma.courseEnrollment.count({
     *   where: {
     *     // ... the filter for the CourseEnrollments we want to count
     *   }
     * })
    **/
    count<T extends CourseEnrollmentCountArgs>(
      args?: Subset<T, CourseEnrollmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourseEnrollmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CourseEnrollment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourseEnrollmentAggregateArgs>(args: Subset<T, CourseEnrollmentAggregateArgs>): Prisma.PrismaPromise<GetCourseEnrollmentAggregateType<T>>

    /**
     * Group by CourseEnrollment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseEnrollmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CourseEnrollmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CourseEnrollmentGroupByArgs['orderBy'] }
        : { orderBy?: CourseEnrollmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CourseEnrollmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourseEnrollmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CourseEnrollment model
   */
  readonly fields: CourseEnrollmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CourseEnrollment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CourseEnrollmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    course<T extends CourseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseDefaultArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    student<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    lessonProgress<T extends CourseEnrollment$lessonProgressArgs<ExtArgs> = {}>(args?: Subset<T, CourseEnrollment$lessonProgressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findMany"> | Null>
    quizAttempts<T extends CourseEnrollment$quizAttemptsArgs<ExtArgs> = {}>(args?: Subset<T, CourseEnrollment$quizAttemptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CourseEnrollment model
   */ 
  interface CourseEnrollmentFieldRefs {
    readonly id: FieldRef<"CourseEnrollment", 'String'>
    readonly studentId: FieldRef<"CourseEnrollment", 'String'>
    readonly courseId: FieldRef<"CourseEnrollment", 'String'>
    readonly enrolledAt: FieldRef<"CourseEnrollment", 'DateTime'>
    readonly startedAt: FieldRef<"CourseEnrollment", 'DateTime'>
    readonly completedAt: FieldRef<"CourseEnrollment", 'DateTime'>
    readonly status: FieldRef<"CourseEnrollment", 'EnrollmentStatus'>
    readonly progress: FieldRef<"CourseEnrollment", 'Decimal'>
    readonly currentModuleId: FieldRef<"CourseEnrollment", 'String'>
    readonly currentLessonId: FieldRef<"CourseEnrollment", 'String'>
    readonly certificateUrl: FieldRef<"CourseEnrollment", 'String'>
    readonly timeSpent: FieldRef<"CourseEnrollment", 'Int'>
    readonly certificateIssued: FieldRef<"CourseEnrollment", 'Boolean'>
    readonly finalGrade: FieldRef<"CourseEnrollment", 'Int'>
    readonly moduleProgress: FieldRef<"CourseEnrollment", 'Json'>
    readonly quizResults: FieldRef<"CourseEnrollment", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * CourseEnrollment findUnique
   */
  export type CourseEnrollmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which CourseEnrollment to fetch.
     */
    where: CourseEnrollmentWhereUniqueInput
  }

  /**
   * CourseEnrollment findUniqueOrThrow
   */
  export type CourseEnrollmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which CourseEnrollment to fetch.
     */
    where: CourseEnrollmentWhereUniqueInput
  }

  /**
   * CourseEnrollment findFirst
   */
  export type CourseEnrollmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which CourseEnrollment to fetch.
     */
    where?: CourseEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseEnrollments to fetch.
     */
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CourseEnrollments.
     */
    cursor?: CourseEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CourseEnrollments.
     */
    distinct?: CourseEnrollmentScalarFieldEnum | CourseEnrollmentScalarFieldEnum[]
  }

  /**
   * CourseEnrollment findFirstOrThrow
   */
  export type CourseEnrollmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which CourseEnrollment to fetch.
     */
    where?: CourseEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseEnrollments to fetch.
     */
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CourseEnrollments.
     */
    cursor?: CourseEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CourseEnrollments.
     */
    distinct?: CourseEnrollmentScalarFieldEnum | CourseEnrollmentScalarFieldEnum[]
  }

  /**
   * CourseEnrollment findMany
   */
  export type CourseEnrollmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which CourseEnrollments to fetch.
     */
    where?: CourseEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CourseEnrollments to fetch.
     */
    orderBy?: CourseEnrollmentOrderByWithRelationInput | CourseEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CourseEnrollments.
     */
    cursor?: CourseEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CourseEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CourseEnrollments.
     */
    skip?: number
    distinct?: CourseEnrollmentScalarFieldEnum | CourseEnrollmentScalarFieldEnum[]
  }

  /**
   * CourseEnrollment create
   */
  export type CourseEnrollmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * The data needed to create a CourseEnrollment.
     */
    data: XOR<CourseEnrollmentCreateInput, CourseEnrollmentUncheckedCreateInput>
  }

  /**
   * CourseEnrollment createMany
   */
  export type CourseEnrollmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CourseEnrollments.
     */
    data: CourseEnrollmentCreateManyInput | CourseEnrollmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CourseEnrollment createManyAndReturn
   */
  export type CourseEnrollmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CourseEnrollments.
     */
    data: CourseEnrollmentCreateManyInput | CourseEnrollmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CourseEnrollment update
   */
  export type CourseEnrollmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * The data needed to update a CourseEnrollment.
     */
    data: XOR<CourseEnrollmentUpdateInput, CourseEnrollmentUncheckedUpdateInput>
    /**
     * Choose, which CourseEnrollment to update.
     */
    where: CourseEnrollmentWhereUniqueInput
  }

  /**
   * CourseEnrollment updateMany
   */
  export type CourseEnrollmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CourseEnrollments.
     */
    data: XOR<CourseEnrollmentUpdateManyMutationInput, CourseEnrollmentUncheckedUpdateManyInput>
    /**
     * Filter which CourseEnrollments to update
     */
    where?: CourseEnrollmentWhereInput
  }

  /**
   * CourseEnrollment upsert
   */
  export type CourseEnrollmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * The filter to search for the CourseEnrollment to update in case it exists.
     */
    where: CourseEnrollmentWhereUniqueInput
    /**
     * In case the CourseEnrollment found by the `where` argument doesn't exist, create a new CourseEnrollment with this data.
     */
    create: XOR<CourseEnrollmentCreateInput, CourseEnrollmentUncheckedCreateInput>
    /**
     * In case the CourseEnrollment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CourseEnrollmentUpdateInput, CourseEnrollmentUncheckedUpdateInput>
  }

  /**
   * CourseEnrollment delete
   */
  export type CourseEnrollmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    /**
     * Filter which CourseEnrollment to delete.
     */
    where: CourseEnrollmentWhereUniqueInput
  }

  /**
   * CourseEnrollment deleteMany
   */
  export type CourseEnrollmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CourseEnrollments to delete
     */
    where?: CourseEnrollmentWhereInput
  }

  /**
   * CourseEnrollment.lessonProgress
   */
  export type CourseEnrollment$lessonProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    where?: LessonProgressWhereInput
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    cursor?: LessonProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LessonProgressScalarFieldEnum | LessonProgressScalarFieldEnum[]
  }

  /**
   * CourseEnrollment.quizAttempts
   */
  export type CourseEnrollment$quizAttemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    where?: QuizAttemptWhereInput
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    cursor?: QuizAttemptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * CourseEnrollment without action
   */
  export type CourseEnrollmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
  }


  /**
   * Model LessonProgress
   */

  export type AggregateLessonProgress = {
    _count: LessonProgressCountAggregateOutputType | null
    _avg: LessonProgressAvgAggregateOutputType | null
    _sum: LessonProgressSumAggregateOutputType | null
    _min: LessonProgressMinAggregateOutputType | null
    _max: LessonProgressMaxAggregateOutputType | null
  }

  export type LessonProgressAvgAggregateOutputType = {
    timeSpent: number | null
    videoProgress: number | null
  }

  export type LessonProgressSumAggregateOutputType = {
    timeSpent: number | null
    videoProgress: number | null
  }

  export type LessonProgressMinAggregateOutputType = {
    id: string | null
    enrollmentId: string | null
    lessonId: string | null
    isCompleted: boolean | null
    completedAt: Date | null
    timeSpent: number | null
    videoProgress: number | null
    lastWatchedAt: Date | null
  }

  export type LessonProgressMaxAggregateOutputType = {
    id: string | null
    enrollmentId: string | null
    lessonId: string | null
    isCompleted: boolean | null
    completedAt: Date | null
    timeSpent: number | null
    videoProgress: number | null
    lastWatchedAt: Date | null
  }

  export type LessonProgressCountAggregateOutputType = {
    id: number
    enrollmentId: number
    lessonId: number
    isCompleted: number
    completedAt: number
    timeSpent: number
    videoProgress: number
    lastWatchedAt: number
    _all: number
  }


  export type LessonProgressAvgAggregateInputType = {
    timeSpent?: true
    videoProgress?: true
  }

  export type LessonProgressSumAggregateInputType = {
    timeSpent?: true
    videoProgress?: true
  }

  export type LessonProgressMinAggregateInputType = {
    id?: true
    enrollmentId?: true
    lessonId?: true
    isCompleted?: true
    completedAt?: true
    timeSpent?: true
    videoProgress?: true
    lastWatchedAt?: true
  }

  export type LessonProgressMaxAggregateInputType = {
    id?: true
    enrollmentId?: true
    lessonId?: true
    isCompleted?: true
    completedAt?: true
    timeSpent?: true
    videoProgress?: true
    lastWatchedAt?: true
  }

  export type LessonProgressCountAggregateInputType = {
    id?: true
    enrollmentId?: true
    lessonId?: true
    isCompleted?: true
    completedAt?: true
    timeSpent?: true
    videoProgress?: true
    lastWatchedAt?: true
    _all?: true
  }

  export type LessonProgressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LessonProgress to aggregate.
     */
    where?: LessonProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonProgresses to fetch.
     */
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LessonProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LessonProgresses
    **/
    _count?: true | LessonProgressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LessonProgressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LessonProgressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LessonProgressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LessonProgressMaxAggregateInputType
  }

  export type GetLessonProgressAggregateType<T extends LessonProgressAggregateArgs> = {
        [P in keyof T & keyof AggregateLessonProgress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLessonProgress[P]>
      : GetScalarType<T[P], AggregateLessonProgress[P]>
  }




  export type LessonProgressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonProgressWhereInput
    orderBy?: LessonProgressOrderByWithAggregationInput | LessonProgressOrderByWithAggregationInput[]
    by: LessonProgressScalarFieldEnum[] | LessonProgressScalarFieldEnum
    having?: LessonProgressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LessonProgressCountAggregateInputType | true
    _avg?: LessonProgressAvgAggregateInputType
    _sum?: LessonProgressSumAggregateInputType
    _min?: LessonProgressMinAggregateInputType
    _max?: LessonProgressMaxAggregateInputType
  }

  export type LessonProgressGroupByOutputType = {
    id: string
    enrollmentId: string
    lessonId: string
    isCompleted: boolean
    completedAt: Date | null
    timeSpent: number
    videoProgress: number
    lastWatchedAt: Date | null
    _count: LessonProgressCountAggregateOutputType | null
    _avg: LessonProgressAvgAggregateOutputType | null
    _sum: LessonProgressSumAggregateOutputType | null
    _min: LessonProgressMinAggregateOutputType | null
    _max: LessonProgressMaxAggregateOutputType | null
  }

  type GetLessonProgressGroupByPayload<T extends LessonProgressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LessonProgressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LessonProgressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LessonProgressGroupByOutputType[P]>
            : GetScalarType<T[P], LessonProgressGroupByOutputType[P]>
        }
      >
    >


  export type LessonProgressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    enrollmentId?: boolean
    lessonId?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    timeSpent?: boolean
    videoProgress?: boolean
    lastWatchedAt?: boolean
    enrollment?: boolean | CourseEnrollmentDefaultArgs<ExtArgs>
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lessonProgress"]>

  export type LessonProgressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    enrollmentId?: boolean
    lessonId?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    timeSpent?: boolean
    videoProgress?: boolean
    lastWatchedAt?: boolean
    enrollment?: boolean | CourseEnrollmentDefaultArgs<ExtArgs>
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lessonProgress"]>

  export type LessonProgressSelectScalar = {
    id?: boolean
    enrollmentId?: boolean
    lessonId?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    timeSpent?: boolean
    videoProgress?: boolean
    lastWatchedAt?: boolean
  }

  export type LessonProgressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    enrollment?: boolean | CourseEnrollmentDefaultArgs<ExtArgs>
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }
  export type LessonProgressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    enrollment?: boolean | CourseEnrollmentDefaultArgs<ExtArgs>
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }

  export type $LessonProgressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LessonProgress"
    objects: {
      enrollment: Prisma.$CourseEnrollmentPayload<ExtArgs>
      lesson: Prisma.$LessonPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      enrollmentId: string
      lessonId: string
      isCompleted: boolean
      completedAt: Date | null
      timeSpent: number
      videoProgress: number
      lastWatchedAt: Date | null
    }, ExtArgs["result"]["lessonProgress"]>
    composites: {}
  }

  type LessonProgressGetPayload<S extends boolean | null | undefined | LessonProgressDefaultArgs> = $Result.GetResult<Prisma.$LessonProgressPayload, S>

  type LessonProgressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LessonProgressFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LessonProgressCountAggregateInputType | true
    }

  export interface LessonProgressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LessonProgress'], meta: { name: 'LessonProgress' } }
    /**
     * Find zero or one LessonProgress that matches the filter.
     * @param {LessonProgressFindUniqueArgs} args - Arguments to find a LessonProgress
     * @example
     * // Get one LessonProgress
     * const lessonProgress = await prisma.lessonProgress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LessonProgressFindUniqueArgs>(args: SelectSubset<T, LessonProgressFindUniqueArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LessonProgress that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LessonProgressFindUniqueOrThrowArgs} args - Arguments to find a LessonProgress
     * @example
     * // Get one LessonProgress
     * const lessonProgress = await prisma.lessonProgress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LessonProgressFindUniqueOrThrowArgs>(args: SelectSubset<T, LessonProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LessonProgress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressFindFirstArgs} args - Arguments to find a LessonProgress
     * @example
     * // Get one LessonProgress
     * const lessonProgress = await prisma.lessonProgress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LessonProgressFindFirstArgs>(args?: SelectSubset<T, LessonProgressFindFirstArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LessonProgress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressFindFirstOrThrowArgs} args - Arguments to find a LessonProgress
     * @example
     * // Get one LessonProgress
     * const lessonProgress = await prisma.lessonProgress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LessonProgressFindFirstOrThrowArgs>(args?: SelectSubset<T, LessonProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LessonProgresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LessonProgresses
     * const lessonProgresses = await prisma.lessonProgress.findMany()
     * 
     * // Get first 10 LessonProgresses
     * const lessonProgresses = await prisma.lessonProgress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lessonProgressWithIdOnly = await prisma.lessonProgress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LessonProgressFindManyArgs>(args?: SelectSubset<T, LessonProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LessonProgress.
     * @param {LessonProgressCreateArgs} args - Arguments to create a LessonProgress.
     * @example
     * // Create one LessonProgress
     * const LessonProgress = await prisma.lessonProgress.create({
     *   data: {
     *     // ... data to create a LessonProgress
     *   }
     * })
     * 
     */
    create<T extends LessonProgressCreateArgs>(args: SelectSubset<T, LessonProgressCreateArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LessonProgresses.
     * @param {LessonProgressCreateManyArgs} args - Arguments to create many LessonProgresses.
     * @example
     * // Create many LessonProgresses
     * const lessonProgress = await prisma.lessonProgress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LessonProgressCreateManyArgs>(args?: SelectSubset<T, LessonProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LessonProgresses and returns the data saved in the database.
     * @param {LessonProgressCreateManyAndReturnArgs} args - Arguments to create many LessonProgresses.
     * @example
     * // Create many LessonProgresses
     * const lessonProgress = await prisma.lessonProgress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LessonProgresses and only return the `id`
     * const lessonProgressWithIdOnly = await prisma.lessonProgress.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LessonProgressCreateManyAndReturnArgs>(args?: SelectSubset<T, LessonProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LessonProgress.
     * @param {LessonProgressDeleteArgs} args - Arguments to delete one LessonProgress.
     * @example
     * // Delete one LessonProgress
     * const LessonProgress = await prisma.lessonProgress.delete({
     *   where: {
     *     // ... filter to delete one LessonProgress
     *   }
     * })
     * 
     */
    delete<T extends LessonProgressDeleteArgs>(args: SelectSubset<T, LessonProgressDeleteArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LessonProgress.
     * @param {LessonProgressUpdateArgs} args - Arguments to update one LessonProgress.
     * @example
     * // Update one LessonProgress
     * const lessonProgress = await prisma.lessonProgress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LessonProgressUpdateArgs>(args: SelectSubset<T, LessonProgressUpdateArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LessonProgresses.
     * @param {LessonProgressDeleteManyArgs} args - Arguments to filter LessonProgresses to delete.
     * @example
     * // Delete a few LessonProgresses
     * const { count } = await prisma.lessonProgress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LessonProgressDeleteManyArgs>(args?: SelectSubset<T, LessonProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LessonProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LessonProgresses
     * const lessonProgress = await prisma.lessonProgress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LessonProgressUpdateManyArgs>(args: SelectSubset<T, LessonProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LessonProgress.
     * @param {LessonProgressUpsertArgs} args - Arguments to update or create a LessonProgress.
     * @example
     * // Update or create a LessonProgress
     * const lessonProgress = await prisma.lessonProgress.upsert({
     *   create: {
     *     // ... data to create a LessonProgress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LessonProgress we want to update
     *   }
     * })
     */
    upsert<T extends LessonProgressUpsertArgs>(args: SelectSubset<T, LessonProgressUpsertArgs<ExtArgs>>): Prisma__LessonProgressClient<$Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LessonProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressCountArgs} args - Arguments to filter LessonProgresses to count.
     * @example
     * // Count the number of LessonProgresses
     * const count = await prisma.lessonProgress.count({
     *   where: {
     *     // ... the filter for the LessonProgresses we want to count
     *   }
     * })
    **/
    count<T extends LessonProgressCountArgs>(
      args?: Subset<T, LessonProgressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LessonProgressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LessonProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LessonProgressAggregateArgs>(args: Subset<T, LessonProgressAggregateArgs>): Prisma.PrismaPromise<GetLessonProgressAggregateType<T>>

    /**
     * Group by LessonProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonProgressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LessonProgressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LessonProgressGroupByArgs['orderBy'] }
        : { orderBy?: LessonProgressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LessonProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLessonProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LessonProgress model
   */
  readonly fields: LessonProgressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LessonProgress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LessonProgressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    enrollment<T extends CourseEnrollmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseEnrollmentDefaultArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    lesson<T extends LessonDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LessonDefaultArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LessonProgress model
   */ 
  interface LessonProgressFieldRefs {
    readonly id: FieldRef<"LessonProgress", 'String'>
    readonly enrollmentId: FieldRef<"LessonProgress", 'String'>
    readonly lessonId: FieldRef<"LessonProgress", 'String'>
    readonly isCompleted: FieldRef<"LessonProgress", 'Boolean'>
    readonly completedAt: FieldRef<"LessonProgress", 'DateTime'>
    readonly timeSpent: FieldRef<"LessonProgress", 'Int'>
    readonly videoProgress: FieldRef<"LessonProgress", 'Float'>
    readonly lastWatchedAt: FieldRef<"LessonProgress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LessonProgress findUnique
   */
  export type LessonProgressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter, which LessonProgress to fetch.
     */
    where: LessonProgressWhereUniqueInput
  }

  /**
   * LessonProgress findUniqueOrThrow
   */
  export type LessonProgressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter, which LessonProgress to fetch.
     */
    where: LessonProgressWhereUniqueInput
  }

  /**
   * LessonProgress findFirst
   */
  export type LessonProgressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter, which LessonProgress to fetch.
     */
    where?: LessonProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonProgresses to fetch.
     */
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LessonProgresses.
     */
    cursor?: LessonProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LessonProgresses.
     */
    distinct?: LessonProgressScalarFieldEnum | LessonProgressScalarFieldEnum[]
  }

  /**
   * LessonProgress findFirstOrThrow
   */
  export type LessonProgressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter, which LessonProgress to fetch.
     */
    where?: LessonProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonProgresses to fetch.
     */
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LessonProgresses.
     */
    cursor?: LessonProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LessonProgresses.
     */
    distinct?: LessonProgressScalarFieldEnum | LessonProgressScalarFieldEnum[]
  }

  /**
   * LessonProgress findMany
   */
  export type LessonProgressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter, which LessonProgresses to fetch.
     */
    where?: LessonProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonProgresses to fetch.
     */
    orderBy?: LessonProgressOrderByWithRelationInput | LessonProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LessonProgresses.
     */
    cursor?: LessonProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonProgresses.
     */
    skip?: number
    distinct?: LessonProgressScalarFieldEnum | LessonProgressScalarFieldEnum[]
  }

  /**
   * LessonProgress create
   */
  export type LessonProgressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * The data needed to create a LessonProgress.
     */
    data: XOR<LessonProgressCreateInput, LessonProgressUncheckedCreateInput>
  }

  /**
   * LessonProgress createMany
   */
  export type LessonProgressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LessonProgresses.
     */
    data: LessonProgressCreateManyInput | LessonProgressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LessonProgress createManyAndReturn
   */
  export type LessonProgressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LessonProgresses.
     */
    data: LessonProgressCreateManyInput | LessonProgressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LessonProgress update
   */
  export type LessonProgressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * The data needed to update a LessonProgress.
     */
    data: XOR<LessonProgressUpdateInput, LessonProgressUncheckedUpdateInput>
    /**
     * Choose, which LessonProgress to update.
     */
    where: LessonProgressWhereUniqueInput
  }

  /**
   * LessonProgress updateMany
   */
  export type LessonProgressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LessonProgresses.
     */
    data: XOR<LessonProgressUpdateManyMutationInput, LessonProgressUncheckedUpdateManyInput>
    /**
     * Filter which LessonProgresses to update
     */
    where?: LessonProgressWhereInput
  }

  /**
   * LessonProgress upsert
   */
  export type LessonProgressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * The filter to search for the LessonProgress to update in case it exists.
     */
    where: LessonProgressWhereUniqueInput
    /**
     * In case the LessonProgress found by the `where` argument doesn't exist, create a new LessonProgress with this data.
     */
    create: XOR<LessonProgressCreateInput, LessonProgressUncheckedCreateInput>
    /**
     * In case the LessonProgress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LessonProgressUpdateInput, LessonProgressUncheckedUpdateInput>
  }

  /**
   * LessonProgress delete
   */
  export type LessonProgressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
    /**
     * Filter which LessonProgress to delete.
     */
    where: LessonProgressWhereUniqueInput
  }

  /**
   * LessonProgress deleteMany
   */
  export type LessonProgressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LessonProgresses to delete
     */
    where?: LessonProgressWhereInput
  }

  /**
   * LessonProgress without action
   */
  export type LessonProgressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonProgress
     */
    select?: LessonProgressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonProgressInclude<ExtArgs> | null
  }


  /**
   * Model Quiz
   */

  export type AggregateQuiz = {
    _count: QuizCountAggregateOutputType | null
    _avg: QuizAvgAggregateOutputType | null
    _sum: QuizSumAggregateOutputType | null
    _min: QuizMinAggregateOutputType | null
    _max: QuizMaxAggregateOutputType | null
  }

  export type QuizAvgAggregateOutputType = {
    timeLimit: number | null
    passingScore: number | null
  }

  export type QuizSumAggregateOutputType = {
    timeLimit: number | null
    passingScore: number | null
  }

  export type QuizMinAggregateOutputType = {
    id: string | null
    courseId: string | null
    lessonId: string | null
    title: string | null
    description: string | null
    timeLimit: number | null
    passingScore: number | null
    showCorrectAnswers: boolean | null
    isActive: boolean | null
  }

  export type QuizMaxAggregateOutputType = {
    id: string | null
    courseId: string | null
    lessonId: string | null
    title: string | null
    description: string | null
    timeLimit: number | null
    passingScore: number | null
    showCorrectAnswers: boolean | null
    isActive: boolean | null
  }

  export type QuizCountAggregateOutputType = {
    id: number
    courseId: number
    lessonId: number
    title: number
    description: number
    timeLimit: number
    passingScore: number
    showCorrectAnswers: number
    isActive: number
    _all: number
  }


  export type QuizAvgAggregateInputType = {
    timeLimit?: true
    passingScore?: true
  }

  export type QuizSumAggregateInputType = {
    timeLimit?: true
    passingScore?: true
  }

  export type QuizMinAggregateInputType = {
    id?: true
    courseId?: true
    lessonId?: true
    title?: true
    description?: true
    timeLimit?: true
    passingScore?: true
    showCorrectAnswers?: true
    isActive?: true
  }

  export type QuizMaxAggregateInputType = {
    id?: true
    courseId?: true
    lessonId?: true
    title?: true
    description?: true
    timeLimit?: true
    passingScore?: true
    showCorrectAnswers?: true
    isActive?: true
  }

  export type QuizCountAggregateInputType = {
    id?: true
    courseId?: true
    lessonId?: true
    title?: true
    description?: true
    timeLimit?: true
    passingScore?: true
    showCorrectAnswers?: true
    isActive?: true
    _all?: true
  }

  export type QuizAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Quiz to aggregate.
     */
    where?: QuizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quizzes to fetch.
     */
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Quizzes
    **/
    _count?: true | QuizCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuizAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuizSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuizMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuizMaxAggregateInputType
  }

  export type GetQuizAggregateType<T extends QuizAggregateArgs> = {
        [P in keyof T & keyof AggregateQuiz]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuiz[P]>
      : GetScalarType<T[P], AggregateQuiz[P]>
  }




  export type QuizGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizWhereInput
    orderBy?: QuizOrderByWithAggregationInput | QuizOrderByWithAggregationInput[]
    by: QuizScalarFieldEnum[] | QuizScalarFieldEnum
    having?: QuizScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuizCountAggregateInputType | true
    _avg?: QuizAvgAggregateInputType
    _sum?: QuizSumAggregateInputType
    _min?: QuizMinAggregateInputType
    _max?: QuizMaxAggregateInputType
  }

  export type QuizGroupByOutputType = {
    id: string
    courseId: string | null
    lessonId: string | null
    title: string
    description: string | null
    timeLimit: number | null
    passingScore: number
    showCorrectAnswers: boolean
    isActive: boolean
    _count: QuizCountAggregateOutputType | null
    _avg: QuizAvgAggregateOutputType | null
    _sum: QuizSumAggregateOutputType | null
    _min: QuizMinAggregateOutputType | null
    _max: QuizMaxAggregateOutputType | null
  }

  type GetQuizGroupByPayload<T extends QuizGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuizGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuizGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuizGroupByOutputType[P]>
            : GetScalarType<T[P], QuizGroupByOutputType[P]>
        }
      >
    >


  export type QuizSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    courseId?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    timeLimit?: boolean
    passingScore?: boolean
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: boolean | Quiz$attemptsArgs<ExtArgs>
    questions?: boolean | Quiz$questionsArgs<ExtArgs>
    course?: boolean | Quiz$courseArgs<ExtArgs>
    lesson?: boolean | Quiz$lessonArgs<ExtArgs>
    _count?: boolean | QuizCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quiz"]>

  export type QuizSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    courseId?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    timeLimit?: boolean
    passingScore?: boolean
    showCorrectAnswers?: boolean
    isActive?: boolean
    course?: boolean | Quiz$courseArgs<ExtArgs>
    lesson?: boolean | Quiz$lessonArgs<ExtArgs>
  }, ExtArgs["result"]["quiz"]>

  export type QuizSelectScalar = {
    id?: boolean
    courseId?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    timeLimit?: boolean
    passingScore?: boolean
    showCorrectAnswers?: boolean
    isActive?: boolean
  }

  export type QuizInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attempts?: boolean | Quiz$attemptsArgs<ExtArgs>
    questions?: boolean | Quiz$questionsArgs<ExtArgs>
    course?: boolean | Quiz$courseArgs<ExtArgs>
    lesson?: boolean | Quiz$lessonArgs<ExtArgs>
    _count?: boolean | QuizCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type QuizIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | Quiz$courseArgs<ExtArgs>
    lesson?: boolean | Quiz$lessonArgs<ExtArgs>
  }

  export type $QuizPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Quiz"
    objects: {
      attempts: Prisma.$QuizAttemptPayload<ExtArgs>[]
      questions: Prisma.$QuizQuestionPayload<ExtArgs>[]
      course: Prisma.$CoursePayload<ExtArgs> | null
      lesson: Prisma.$LessonPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      courseId: string | null
      lessonId: string | null
      title: string
      description: string | null
      timeLimit: number | null
      passingScore: number
      showCorrectAnswers: boolean
      isActive: boolean
    }, ExtArgs["result"]["quiz"]>
    composites: {}
  }

  type QuizGetPayload<S extends boolean | null | undefined | QuizDefaultArgs> = $Result.GetResult<Prisma.$QuizPayload, S>

  type QuizCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<QuizFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: QuizCountAggregateInputType | true
    }

  export interface QuizDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Quiz'], meta: { name: 'Quiz' } }
    /**
     * Find zero or one Quiz that matches the filter.
     * @param {QuizFindUniqueArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuizFindUniqueArgs>(args: SelectSubset<T, QuizFindUniqueArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Quiz that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {QuizFindUniqueOrThrowArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuizFindUniqueOrThrowArgs>(args: SelectSubset<T, QuizFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Quiz that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizFindFirstArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuizFindFirstArgs>(args?: SelectSubset<T, QuizFindFirstArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Quiz that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizFindFirstOrThrowArgs} args - Arguments to find a Quiz
     * @example
     * // Get one Quiz
     * const quiz = await prisma.quiz.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuizFindFirstOrThrowArgs>(args?: SelectSubset<T, QuizFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Quizzes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Quizzes
     * const quizzes = await prisma.quiz.findMany()
     * 
     * // Get first 10 Quizzes
     * const quizzes = await prisma.quiz.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const quizWithIdOnly = await prisma.quiz.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuizFindManyArgs>(args?: SelectSubset<T, QuizFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Quiz.
     * @param {QuizCreateArgs} args - Arguments to create a Quiz.
     * @example
     * // Create one Quiz
     * const Quiz = await prisma.quiz.create({
     *   data: {
     *     // ... data to create a Quiz
     *   }
     * })
     * 
     */
    create<T extends QuizCreateArgs>(args: SelectSubset<T, QuizCreateArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Quizzes.
     * @param {QuizCreateManyArgs} args - Arguments to create many Quizzes.
     * @example
     * // Create many Quizzes
     * const quiz = await prisma.quiz.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuizCreateManyArgs>(args?: SelectSubset<T, QuizCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Quizzes and returns the data saved in the database.
     * @param {QuizCreateManyAndReturnArgs} args - Arguments to create many Quizzes.
     * @example
     * // Create many Quizzes
     * const quiz = await prisma.quiz.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Quizzes and only return the `id`
     * const quizWithIdOnly = await prisma.quiz.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QuizCreateManyAndReturnArgs>(args?: SelectSubset<T, QuizCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Quiz.
     * @param {QuizDeleteArgs} args - Arguments to delete one Quiz.
     * @example
     * // Delete one Quiz
     * const Quiz = await prisma.quiz.delete({
     *   where: {
     *     // ... filter to delete one Quiz
     *   }
     * })
     * 
     */
    delete<T extends QuizDeleteArgs>(args: SelectSubset<T, QuizDeleteArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Quiz.
     * @param {QuizUpdateArgs} args - Arguments to update one Quiz.
     * @example
     * // Update one Quiz
     * const quiz = await prisma.quiz.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuizUpdateArgs>(args: SelectSubset<T, QuizUpdateArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Quizzes.
     * @param {QuizDeleteManyArgs} args - Arguments to filter Quizzes to delete.
     * @example
     * // Delete a few Quizzes
     * const { count } = await prisma.quiz.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuizDeleteManyArgs>(args?: SelectSubset<T, QuizDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quizzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Quizzes
     * const quiz = await prisma.quiz.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuizUpdateManyArgs>(args: SelectSubset<T, QuizUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Quiz.
     * @param {QuizUpsertArgs} args - Arguments to update or create a Quiz.
     * @example
     * // Update or create a Quiz
     * const quiz = await prisma.quiz.upsert({
     *   create: {
     *     // ... data to create a Quiz
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Quiz we want to update
     *   }
     * })
     */
    upsert<T extends QuizUpsertArgs>(args: SelectSubset<T, QuizUpsertArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Quizzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizCountArgs} args - Arguments to filter Quizzes to count.
     * @example
     * // Count the number of Quizzes
     * const count = await prisma.quiz.count({
     *   where: {
     *     // ... the filter for the Quizzes we want to count
     *   }
     * })
    **/
    count<T extends QuizCountArgs>(
      args?: Subset<T, QuizCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuizCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuizAggregateArgs>(args: Subset<T, QuizAggregateArgs>): Prisma.PrismaPromise<GetQuizAggregateType<T>>

    /**
     * Group by Quiz.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuizGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuizGroupByArgs['orderBy'] }
        : { orderBy?: QuizGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuizGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuizGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Quiz model
   */
  readonly fields: QuizFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Quiz.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuizClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attempts<T extends Quiz$attemptsArgs<ExtArgs> = {}>(args?: Subset<T, Quiz$attemptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findMany"> | Null>
    questions<T extends Quiz$questionsArgs<ExtArgs> = {}>(args?: Subset<T, Quiz$questionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findMany"> | Null>
    course<T extends Quiz$courseArgs<ExtArgs> = {}>(args?: Subset<T, Quiz$courseArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    lesson<T extends Quiz$lessonArgs<ExtArgs> = {}>(args?: Subset<T, Quiz$lessonArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Quiz model
   */ 
  interface QuizFieldRefs {
    readonly id: FieldRef<"Quiz", 'String'>
    readonly courseId: FieldRef<"Quiz", 'String'>
    readonly lessonId: FieldRef<"Quiz", 'String'>
    readonly title: FieldRef<"Quiz", 'String'>
    readonly description: FieldRef<"Quiz", 'String'>
    readonly timeLimit: FieldRef<"Quiz", 'Int'>
    readonly passingScore: FieldRef<"Quiz", 'Int'>
    readonly showCorrectAnswers: FieldRef<"Quiz", 'Boolean'>
    readonly isActive: FieldRef<"Quiz", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Quiz findUnique
   */
  export type QuizFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter, which Quiz to fetch.
     */
    where: QuizWhereUniqueInput
  }

  /**
   * Quiz findUniqueOrThrow
   */
  export type QuizFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter, which Quiz to fetch.
     */
    where: QuizWhereUniqueInput
  }

  /**
   * Quiz findFirst
   */
  export type QuizFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter, which Quiz to fetch.
     */
    where?: QuizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quizzes to fetch.
     */
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Quizzes.
     */
    cursor?: QuizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Quizzes.
     */
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }

  /**
   * Quiz findFirstOrThrow
   */
  export type QuizFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter, which Quiz to fetch.
     */
    where?: QuizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quizzes to fetch.
     */
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Quizzes.
     */
    cursor?: QuizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quizzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Quizzes.
     */
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }

  /**
   * Quiz findMany
   */
  export type QuizFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter, which Quizzes to fetch.
     */
    where?: QuizWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Quizzes to fetch.
     */
    orderBy?: QuizOrderByWithRelationInput | QuizOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Quizzes.
     */
    cursor?: QuizWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Quizzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Quizzes.
     */
    skip?: number
    distinct?: QuizScalarFieldEnum | QuizScalarFieldEnum[]
  }

  /**
   * Quiz create
   */
  export type QuizCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * The data needed to create a Quiz.
     */
    data: XOR<QuizCreateInput, QuizUncheckedCreateInput>
  }

  /**
   * Quiz createMany
   */
  export type QuizCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Quizzes.
     */
    data: QuizCreateManyInput | QuizCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Quiz createManyAndReturn
   */
  export type QuizCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Quizzes.
     */
    data: QuizCreateManyInput | QuizCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Quiz update
   */
  export type QuizUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * The data needed to update a Quiz.
     */
    data: XOR<QuizUpdateInput, QuizUncheckedUpdateInput>
    /**
     * Choose, which Quiz to update.
     */
    where: QuizWhereUniqueInput
  }

  /**
   * Quiz updateMany
   */
  export type QuizUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Quizzes.
     */
    data: XOR<QuizUpdateManyMutationInput, QuizUncheckedUpdateManyInput>
    /**
     * Filter which Quizzes to update
     */
    where?: QuizWhereInput
  }

  /**
   * Quiz upsert
   */
  export type QuizUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * The filter to search for the Quiz to update in case it exists.
     */
    where: QuizWhereUniqueInput
    /**
     * In case the Quiz found by the `where` argument doesn't exist, create a new Quiz with this data.
     */
    create: XOR<QuizCreateInput, QuizUncheckedCreateInput>
    /**
     * In case the Quiz was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuizUpdateInput, QuizUncheckedUpdateInput>
  }

  /**
   * Quiz delete
   */
  export type QuizDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
    /**
     * Filter which Quiz to delete.
     */
    where: QuizWhereUniqueInput
  }

  /**
   * Quiz deleteMany
   */
  export type QuizDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Quizzes to delete
     */
    where?: QuizWhereInput
  }

  /**
   * Quiz.attempts
   */
  export type Quiz$attemptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    where?: QuizAttemptWhereInput
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    cursor?: QuizAttemptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * Quiz.questions
   */
  export type Quiz$questionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    where?: QuizQuestionWhereInput
    orderBy?: QuizQuestionOrderByWithRelationInput | QuizQuestionOrderByWithRelationInput[]
    cursor?: QuizQuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizQuestionScalarFieldEnum | QuizQuestionScalarFieldEnum[]
  }

  /**
   * Quiz.course
   */
  export type Quiz$courseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    where?: CourseWhereInput
  }

  /**
   * Quiz.lesson
   */
  export type Quiz$lessonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lesson
     */
    select?: LessonSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonInclude<ExtArgs> | null
    where?: LessonWhereInput
  }

  /**
   * Quiz without action
   */
  export type QuizDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Quiz
     */
    select?: QuizSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizInclude<ExtArgs> | null
  }


  /**
   * Model QuizQuestion
   */

  export type AggregateQuizQuestion = {
    _count: QuizQuestionCountAggregateOutputType | null
    _avg: QuizQuestionAvgAggregateOutputType | null
    _sum: QuizQuestionSumAggregateOutputType | null
    _min: QuizQuestionMinAggregateOutputType | null
    _max: QuizQuestionMaxAggregateOutputType | null
  }

  export type QuizQuestionAvgAggregateOutputType = {
    points: number | null
    orderIndex: number | null
  }

  export type QuizQuestionSumAggregateOutputType = {
    points: number | null
    orderIndex: number | null
  }

  export type QuizQuestionMinAggregateOutputType = {
    id: string | null
    quizId: string | null
    question: string | null
    type: $Enums.QuestionType | null
    correctAnswer: string | null
    explanation: string | null
    points: number | null
    orderIndex: number | null
  }

  export type QuizQuestionMaxAggregateOutputType = {
    id: string | null
    quizId: string | null
    question: string | null
    type: $Enums.QuestionType | null
    correctAnswer: string | null
    explanation: string | null
    points: number | null
    orderIndex: number | null
  }

  export type QuizQuestionCountAggregateOutputType = {
    id: number
    quizId: number
    question: number
    type: number
    options: number
    correctAnswer: number
    explanation: number
    points: number
    orderIndex: number
    _all: number
  }


  export type QuizQuestionAvgAggregateInputType = {
    points?: true
    orderIndex?: true
  }

  export type QuizQuestionSumAggregateInputType = {
    points?: true
    orderIndex?: true
  }

  export type QuizQuestionMinAggregateInputType = {
    id?: true
    quizId?: true
    question?: true
    type?: true
    correctAnswer?: true
    explanation?: true
    points?: true
    orderIndex?: true
  }

  export type QuizQuestionMaxAggregateInputType = {
    id?: true
    quizId?: true
    question?: true
    type?: true
    correctAnswer?: true
    explanation?: true
    points?: true
    orderIndex?: true
  }

  export type QuizQuestionCountAggregateInputType = {
    id?: true
    quizId?: true
    question?: true
    type?: true
    options?: true
    correctAnswer?: true
    explanation?: true
    points?: true
    orderIndex?: true
    _all?: true
  }

  export type QuizQuestionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizQuestion to aggregate.
     */
    where?: QuizQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizQuestions to fetch.
     */
    orderBy?: QuizQuestionOrderByWithRelationInput | QuizQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuizQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QuizQuestions
    **/
    _count?: true | QuizQuestionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuizQuestionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuizQuestionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuizQuestionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuizQuestionMaxAggregateInputType
  }

  export type GetQuizQuestionAggregateType<T extends QuizQuestionAggregateArgs> = {
        [P in keyof T & keyof AggregateQuizQuestion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuizQuestion[P]>
      : GetScalarType<T[P], AggregateQuizQuestion[P]>
  }




  export type QuizQuestionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizQuestionWhereInput
    orderBy?: QuizQuestionOrderByWithAggregationInput | QuizQuestionOrderByWithAggregationInput[]
    by: QuizQuestionScalarFieldEnum[] | QuizQuestionScalarFieldEnum
    having?: QuizQuestionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuizQuestionCountAggregateInputType | true
    _avg?: QuizQuestionAvgAggregateInputType
    _sum?: QuizQuestionSumAggregateInputType
    _min?: QuizQuestionMinAggregateInputType
    _max?: QuizQuestionMaxAggregateInputType
  }

  export type QuizQuestionGroupByOutputType = {
    id: string
    quizId: string
    question: string
    type: $Enums.QuestionType
    options: string[]
    correctAnswer: string
    explanation: string | null
    points: number
    orderIndex: number
    _count: QuizQuestionCountAggregateOutputType | null
    _avg: QuizQuestionAvgAggregateOutputType | null
    _sum: QuizQuestionSumAggregateOutputType | null
    _min: QuizQuestionMinAggregateOutputType | null
    _max: QuizQuestionMaxAggregateOutputType | null
  }

  type GetQuizQuestionGroupByPayload<T extends QuizQuestionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuizQuestionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuizQuestionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuizQuestionGroupByOutputType[P]>
            : GetScalarType<T[P], QuizQuestionGroupByOutputType[P]>
        }
      >
    >


  export type QuizQuestionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quizId?: boolean
    question?: boolean
    type?: boolean
    options?: boolean
    correctAnswer?: boolean
    explanation?: boolean
    points?: boolean
    orderIndex?: boolean
    answers?: boolean | QuizQuestion$answersArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    _count?: boolean | QuizQuestionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizQuestion"]>

  export type QuizQuestionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quizId?: boolean
    question?: boolean
    type?: boolean
    options?: boolean
    correctAnswer?: boolean
    explanation?: boolean
    points?: boolean
    orderIndex?: boolean
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizQuestion"]>

  export type QuizQuestionSelectScalar = {
    id?: boolean
    quizId?: boolean
    question?: boolean
    type?: boolean
    options?: boolean
    correctAnswer?: boolean
    explanation?: boolean
    points?: boolean
    orderIndex?: boolean
  }

  export type QuizQuestionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answers?: boolean | QuizQuestion$answersArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    _count?: boolean | QuizQuestionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type QuizQuestionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
  }

  export type $QuizQuestionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QuizQuestion"
    objects: {
      answers: Prisma.$QuizAnswerPayload<ExtArgs>[]
      quiz: Prisma.$QuizPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      quizId: string
      question: string
      type: $Enums.QuestionType
      options: string[]
      correctAnswer: string
      explanation: string | null
      points: number
      orderIndex: number
    }, ExtArgs["result"]["quizQuestion"]>
    composites: {}
  }

  type QuizQuestionGetPayload<S extends boolean | null | undefined | QuizQuestionDefaultArgs> = $Result.GetResult<Prisma.$QuizQuestionPayload, S>

  type QuizQuestionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<QuizQuestionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: QuizQuestionCountAggregateInputType | true
    }

  export interface QuizQuestionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QuizQuestion'], meta: { name: 'QuizQuestion' } }
    /**
     * Find zero or one QuizQuestion that matches the filter.
     * @param {QuizQuestionFindUniqueArgs} args - Arguments to find a QuizQuestion
     * @example
     * // Get one QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuizQuestionFindUniqueArgs>(args: SelectSubset<T, QuizQuestionFindUniqueArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one QuizQuestion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {QuizQuestionFindUniqueOrThrowArgs} args - Arguments to find a QuizQuestion
     * @example
     * // Get one QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuizQuestionFindUniqueOrThrowArgs>(args: SelectSubset<T, QuizQuestionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first QuizQuestion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionFindFirstArgs} args - Arguments to find a QuizQuestion
     * @example
     * // Get one QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuizQuestionFindFirstArgs>(args?: SelectSubset<T, QuizQuestionFindFirstArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first QuizQuestion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionFindFirstOrThrowArgs} args - Arguments to find a QuizQuestion
     * @example
     * // Get one QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuizQuestionFindFirstOrThrowArgs>(args?: SelectSubset<T, QuizQuestionFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more QuizQuestions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QuizQuestions
     * const quizQuestions = await prisma.quizQuestion.findMany()
     * 
     * // Get first 10 QuizQuestions
     * const quizQuestions = await prisma.quizQuestion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const quizQuestionWithIdOnly = await prisma.quizQuestion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuizQuestionFindManyArgs>(args?: SelectSubset<T, QuizQuestionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a QuizQuestion.
     * @param {QuizQuestionCreateArgs} args - Arguments to create a QuizQuestion.
     * @example
     * // Create one QuizQuestion
     * const QuizQuestion = await prisma.quizQuestion.create({
     *   data: {
     *     // ... data to create a QuizQuestion
     *   }
     * })
     * 
     */
    create<T extends QuizQuestionCreateArgs>(args: SelectSubset<T, QuizQuestionCreateArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many QuizQuestions.
     * @param {QuizQuestionCreateManyArgs} args - Arguments to create many QuizQuestions.
     * @example
     * // Create many QuizQuestions
     * const quizQuestion = await prisma.quizQuestion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuizQuestionCreateManyArgs>(args?: SelectSubset<T, QuizQuestionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QuizQuestions and returns the data saved in the database.
     * @param {QuizQuestionCreateManyAndReturnArgs} args - Arguments to create many QuizQuestions.
     * @example
     * // Create many QuizQuestions
     * const quizQuestion = await prisma.quizQuestion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QuizQuestions and only return the `id`
     * const quizQuestionWithIdOnly = await prisma.quizQuestion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QuizQuestionCreateManyAndReturnArgs>(args?: SelectSubset<T, QuizQuestionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a QuizQuestion.
     * @param {QuizQuestionDeleteArgs} args - Arguments to delete one QuizQuestion.
     * @example
     * // Delete one QuizQuestion
     * const QuizQuestion = await prisma.quizQuestion.delete({
     *   where: {
     *     // ... filter to delete one QuizQuestion
     *   }
     * })
     * 
     */
    delete<T extends QuizQuestionDeleteArgs>(args: SelectSubset<T, QuizQuestionDeleteArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one QuizQuestion.
     * @param {QuizQuestionUpdateArgs} args - Arguments to update one QuizQuestion.
     * @example
     * // Update one QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuizQuestionUpdateArgs>(args: SelectSubset<T, QuizQuestionUpdateArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more QuizQuestions.
     * @param {QuizQuestionDeleteManyArgs} args - Arguments to filter QuizQuestions to delete.
     * @example
     * // Delete a few QuizQuestions
     * const { count } = await prisma.quizQuestion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuizQuestionDeleteManyArgs>(args?: SelectSubset<T, QuizQuestionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QuizQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QuizQuestions
     * const quizQuestion = await prisma.quizQuestion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuizQuestionUpdateManyArgs>(args: SelectSubset<T, QuizQuestionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one QuizQuestion.
     * @param {QuizQuestionUpsertArgs} args - Arguments to update or create a QuizQuestion.
     * @example
     * // Update or create a QuizQuestion
     * const quizQuestion = await prisma.quizQuestion.upsert({
     *   create: {
     *     // ... data to create a QuizQuestion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QuizQuestion we want to update
     *   }
     * })
     */
    upsert<T extends QuizQuestionUpsertArgs>(args: SelectSubset<T, QuizQuestionUpsertArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of QuizQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionCountArgs} args - Arguments to filter QuizQuestions to count.
     * @example
     * // Count the number of QuizQuestions
     * const count = await prisma.quizQuestion.count({
     *   where: {
     *     // ... the filter for the QuizQuestions we want to count
     *   }
     * })
    **/
    count<T extends QuizQuestionCountArgs>(
      args?: Subset<T, QuizQuestionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuizQuestionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QuizQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuizQuestionAggregateArgs>(args: Subset<T, QuizQuestionAggregateArgs>): Prisma.PrismaPromise<GetQuizQuestionAggregateType<T>>

    /**
     * Group by QuizQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizQuestionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuizQuestionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuizQuestionGroupByArgs['orderBy'] }
        : { orderBy?: QuizQuestionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuizQuestionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuizQuestionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QuizQuestion model
   */
  readonly fields: QuizQuestionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QuizQuestion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuizQuestionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    answers<T extends QuizQuestion$answersArgs<ExtArgs> = {}>(args?: Subset<T, QuizQuestion$answersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findMany"> | Null>
    quiz<T extends QuizDefaultArgs<ExtArgs> = {}>(args?: Subset<T, QuizDefaultArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QuizQuestion model
   */ 
  interface QuizQuestionFieldRefs {
    readonly id: FieldRef<"QuizQuestion", 'String'>
    readonly quizId: FieldRef<"QuizQuestion", 'String'>
    readonly question: FieldRef<"QuizQuestion", 'String'>
    readonly type: FieldRef<"QuizQuestion", 'QuestionType'>
    readonly options: FieldRef<"QuizQuestion", 'String[]'>
    readonly correctAnswer: FieldRef<"QuizQuestion", 'String'>
    readonly explanation: FieldRef<"QuizQuestion", 'String'>
    readonly points: FieldRef<"QuizQuestion", 'Int'>
    readonly orderIndex: FieldRef<"QuizQuestion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * QuizQuestion findUnique
   */
  export type QuizQuestionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QuizQuestion to fetch.
     */
    where: QuizQuestionWhereUniqueInput
  }

  /**
   * QuizQuestion findUniqueOrThrow
   */
  export type QuizQuestionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QuizQuestion to fetch.
     */
    where: QuizQuestionWhereUniqueInput
  }

  /**
   * QuizQuestion findFirst
   */
  export type QuizQuestionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QuizQuestion to fetch.
     */
    where?: QuizQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizQuestions to fetch.
     */
    orderBy?: QuizQuestionOrderByWithRelationInput | QuizQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizQuestions.
     */
    cursor?: QuizQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizQuestions.
     */
    distinct?: QuizQuestionScalarFieldEnum | QuizQuestionScalarFieldEnum[]
  }

  /**
   * QuizQuestion findFirstOrThrow
   */
  export type QuizQuestionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QuizQuestion to fetch.
     */
    where?: QuizQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizQuestions to fetch.
     */
    orderBy?: QuizQuestionOrderByWithRelationInput | QuizQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizQuestions.
     */
    cursor?: QuizQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizQuestions.
     */
    distinct?: QuizQuestionScalarFieldEnum | QuizQuestionScalarFieldEnum[]
  }

  /**
   * QuizQuestion findMany
   */
  export type QuizQuestionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QuizQuestions to fetch.
     */
    where?: QuizQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizQuestions to fetch.
     */
    orderBy?: QuizQuestionOrderByWithRelationInput | QuizQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QuizQuestions.
     */
    cursor?: QuizQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizQuestions.
     */
    skip?: number
    distinct?: QuizQuestionScalarFieldEnum | QuizQuestionScalarFieldEnum[]
  }

  /**
   * QuizQuestion create
   */
  export type QuizQuestionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * The data needed to create a QuizQuestion.
     */
    data: XOR<QuizQuestionCreateInput, QuizQuestionUncheckedCreateInput>
  }

  /**
   * QuizQuestion createMany
   */
  export type QuizQuestionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QuizQuestions.
     */
    data: QuizQuestionCreateManyInput | QuizQuestionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QuizQuestion createManyAndReturn
   */
  export type QuizQuestionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many QuizQuestions.
     */
    data: QuizQuestionCreateManyInput | QuizQuestionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QuizQuestion update
   */
  export type QuizQuestionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * The data needed to update a QuizQuestion.
     */
    data: XOR<QuizQuestionUpdateInput, QuizQuestionUncheckedUpdateInput>
    /**
     * Choose, which QuizQuestion to update.
     */
    where: QuizQuestionWhereUniqueInput
  }

  /**
   * QuizQuestion updateMany
   */
  export type QuizQuestionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QuizQuestions.
     */
    data: XOR<QuizQuestionUpdateManyMutationInput, QuizQuestionUncheckedUpdateManyInput>
    /**
     * Filter which QuizQuestions to update
     */
    where?: QuizQuestionWhereInput
  }

  /**
   * QuizQuestion upsert
   */
  export type QuizQuestionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * The filter to search for the QuizQuestion to update in case it exists.
     */
    where: QuizQuestionWhereUniqueInput
    /**
     * In case the QuizQuestion found by the `where` argument doesn't exist, create a new QuizQuestion with this data.
     */
    create: XOR<QuizQuestionCreateInput, QuizQuestionUncheckedCreateInput>
    /**
     * In case the QuizQuestion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuizQuestionUpdateInput, QuizQuestionUncheckedUpdateInput>
  }

  /**
   * QuizQuestion delete
   */
  export type QuizQuestionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
    /**
     * Filter which QuizQuestion to delete.
     */
    where: QuizQuestionWhereUniqueInput
  }

  /**
   * QuizQuestion deleteMany
   */
  export type QuizQuestionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizQuestions to delete
     */
    where?: QuizQuestionWhereInput
  }

  /**
   * QuizQuestion.answers
   */
  export type QuizQuestion$answersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    where?: QuizAnswerWhereInput
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    cursor?: QuizAnswerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizAnswerScalarFieldEnum | QuizAnswerScalarFieldEnum[]
  }

  /**
   * QuizQuestion without action
   */
  export type QuizQuestionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizQuestion
     */
    select?: QuizQuestionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizQuestionInclude<ExtArgs> | null
  }


  /**
   * Model QuizAttempt
   */

  export type AggregateQuizAttempt = {
    _count: QuizAttemptCountAggregateOutputType | null
    _avg: QuizAttemptAvgAggregateOutputType | null
    _sum: QuizAttemptSumAggregateOutputType | null
    _min: QuizAttemptMinAggregateOutputType | null
    _max: QuizAttemptMaxAggregateOutputType | null
  }

  export type QuizAttemptAvgAggregateOutputType = {
    score: number | null
    timeSpent: number | null
  }

  export type QuizAttemptSumAggregateOutputType = {
    score: number | null
    timeSpent: number | null
  }

  export type QuizAttemptMinAggregateOutputType = {
    id: string | null
    enrollmentId: string | null
    quizId: string | null
    studentId: string | null
    startedAt: Date | null
    completedAt: Date | null
    score: number | null
    passed: boolean | null
    timeSpent: number | null
  }

  export type QuizAttemptMaxAggregateOutputType = {
    id: string | null
    enrollmentId: string | null
    quizId: string | null
    studentId: string | null
    startedAt: Date | null
    completedAt: Date | null
    score: number | null
    passed: boolean | null
    timeSpent: number | null
  }

  export type QuizAttemptCountAggregateOutputType = {
    id: number
    enrollmentId: number
    quizId: number
    studentId: number
    startedAt: number
    completedAt: number
    score: number
    passed: number
    timeSpent: number
    _all: number
  }


  export type QuizAttemptAvgAggregateInputType = {
    score?: true
    timeSpent?: true
  }

  export type QuizAttemptSumAggregateInputType = {
    score?: true
    timeSpent?: true
  }

  export type QuizAttemptMinAggregateInputType = {
    id?: true
    enrollmentId?: true
    quizId?: true
    studentId?: true
    startedAt?: true
    completedAt?: true
    score?: true
    passed?: true
    timeSpent?: true
  }

  export type QuizAttemptMaxAggregateInputType = {
    id?: true
    enrollmentId?: true
    quizId?: true
    studentId?: true
    startedAt?: true
    completedAt?: true
    score?: true
    passed?: true
    timeSpent?: true
  }

  export type QuizAttemptCountAggregateInputType = {
    id?: true
    enrollmentId?: true
    quizId?: true
    studentId?: true
    startedAt?: true
    completedAt?: true
    score?: true
    passed?: true
    timeSpent?: true
    _all?: true
  }

  export type QuizAttemptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizAttempt to aggregate.
     */
    where?: QuizAttemptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAttempts to fetch.
     */
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuizAttemptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAttempts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAttempts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QuizAttempts
    **/
    _count?: true | QuizAttemptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuizAttemptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuizAttemptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuizAttemptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuizAttemptMaxAggregateInputType
  }

  export type GetQuizAttemptAggregateType<T extends QuizAttemptAggregateArgs> = {
        [P in keyof T & keyof AggregateQuizAttempt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuizAttempt[P]>
      : GetScalarType<T[P], AggregateQuizAttempt[P]>
  }




  export type QuizAttemptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAttemptWhereInput
    orderBy?: QuizAttemptOrderByWithAggregationInput | QuizAttemptOrderByWithAggregationInput[]
    by: QuizAttemptScalarFieldEnum[] | QuizAttemptScalarFieldEnum
    having?: QuizAttemptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuizAttemptCountAggregateInputType | true
    _avg?: QuizAttemptAvgAggregateInputType
    _sum?: QuizAttemptSumAggregateInputType
    _min?: QuizAttemptMinAggregateInputType
    _max?: QuizAttemptMaxAggregateInputType
  }

  export type QuizAttemptGroupByOutputType = {
    id: string
    enrollmentId: string | null
    quizId: string
    studentId: string
    startedAt: Date
    completedAt: Date | null
    score: number | null
    passed: boolean | null
    timeSpent: number
    _count: QuizAttemptCountAggregateOutputType | null
    _avg: QuizAttemptAvgAggregateOutputType | null
    _sum: QuizAttemptSumAggregateOutputType | null
    _min: QuizAttemptMinAggregateOutputType | null
    _max: QuizAttemptMaxAggregateOutputType | null
  }

  type GetQuizAttemptGroupByPayload<T extends QuizAttemptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuizAttemptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuizAttemptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuizAttemptGroupByOutputType[P]>
            : GetScalarType<T[P], QuizAttemptGroupByOutputType[P]>
        }
      >
    >


  export type QuizAttemptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    enrollmentId?: boolean
    quizId?: boolean
    studentId?: boolean
    startedAt?: boolean
    completedAt?: boolean
    score?: boolean
    passed?: boolean
    timeSpent?: boolean
    answers?: boolean | QuizAttempt$answersArgs<ExtArgs>
    enrollment?: boolean | QuizAttempt$enrollmentArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | QuizAttemptCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizAttempt"]>

  export type QuizAttemptSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    enrollmentId?: boolean
    quizId?: boolean
    studentId?: boolean
    startedAt?: boolean
    completedAt?: boolean
    score?: boolean
    passed?: boolean
    timeSpent?: boolean
    enrollment?: boolean | QuizAttempt$enrollmentArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizAttempt"]>

  export type QuizAttemptSelectScalar = {
    id?: boolean
    enrollmentId?: boolean
    quizId?: boolean
    studentId?: boolean
    startedAt?: boolean
    completedAt?: boolean
    score?: boolean
    passed?: boolean
    timeSpent?: boolean
  }

  export type QuizAttemptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answers?: boolean | QuizAttempt$answersArgs<ExtArgs>
    enrollment?: boolean | QuizAttempt$enrollmentArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | QuizAttemptCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type QuizAttemptIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    enrollment?: boolean | QuizAttempt$enrollmentArgs<ExtArgs>
    quiz?: boolean | QuizDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $QuizAttemptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QuizAttempt"
    objects: {
      answers: Prisma.$QuizAnswerPayload<ExtArgs>[]
      enrollment: Prisma.$CourseEnrollmentPayload<ExtArgs> | null
      quiz: Prisma.$QuizPayload<ExtArgs>
      student: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      enrollmentId: string | null
      quizId: string
      studentId: string
      startedAt: Date
      completedAt: Date | null
      score: number | null
      passed: boolean | null
      timeSpent: number
    }, ExtArgs["result"]["quizAttempt"]>
    composites: {}
  }

  type QuizAttemptGetPayload<S extends boolean | null | undefined | QuizAttemptDefaultArgs> = $Result.GetResult<Prisma.$QuizAttemptPayload, S>

  type QuizAttemptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<QuizAttemptFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: QuizAttemptCountAggregateInputType | true
    }

  export interface QuizAttemptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QuizAttempt'], meta: { name: 'QuizAttempt' } }
    /**
     * Find zero or one QuizAttempt that matches the filter.
     * @param {QuizAttemptFindUniqueArgs} args - Arguments to find a QuizAttempt
     * @example
     * // Get one QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuizAttemptFindUniqueArgs>(args: SelectSubset<T, QuizAttemptFindUniqueArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one QuizAttempt that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {QuizAttemptFindUniqueOrThrowArgs} args - Arguments to find a QuizAttempt
     * @example
     * // Get one QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuizAttemptFindUniqueOrThrowArgs>(args: SelectSubset<T, QuizAttemptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first QuizAttempt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptFindFirstArgs} args - Arguments to find a QuizAttempt
     * @example
     * // Get one QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuizAttemptFindFirstArgs>(args?: SelectSubset<T, QuizAttemptFindFirstArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first QuizAttempt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptFindFirstOrThrowArgs} args - Arguments to find a QuizAttempt
     * @example
     * // Get one QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuizAttemptFindFirstOrThrowArgs>(args?: SelectSubset<T, QuizAttemptFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more QuizAttempts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QuizAttempts
     * const quizAttempts = await prisma.quizAttempt.findMany()
     * 
     * // Get first 10 QuizAttempts
     * const quizAttempts = await prisma.quizAttempt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const quizAttemptWithIdOnly = await prisma.quizAttempt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuizAttemptFindManyArgs>(args?: SelectSubset<T, QuizAttemptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a QuizAttempt.
     * @param {QuizAttemptCreateArgs} args - Arguments to create a QuizAttempt.
     * @example
     * // Create one QuizAttempt
     * const QuizAttempt = await prisma.quizAttempt.create({
     *   data: {
     *     // ... data to create a QuizAttempt
     *   }
     * })
     * 
     */
    create<T extends QuizAttemptCreateArgs>(args: SelectSubset<T, QuizAttemptCreateArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many QuizAttempts.
     * @param {QuizAttemptCreateManyArgs} args - Arguments to create many QuizAttempts.
     * @example
     * // Create many QuizAttempts
     * const quizAttempt = await prisma.quizAttempt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuizAttemptCreateManyArgs>(args?: SelectSubset<T, QuizAttemptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QuizAttempts and returns the data saved in the database.
     * @param {QuizAttemptCreateManyAndReturnArgs} args - Arguments to create many QuizAttempts.
     * @example
     * // Create many QuizAttempts
     * const quizAttempt = await prisma.quizAttempt.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QuizAttempts and only return the `id`
     * const quizAttemptWithIdOnly = await prisma.quizAttempt.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QuizAttemptCreateManyAndReturnArgs>(args?: SelectSubset<T, QuizAttemptCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a QuizAttempt.
     * @param {QuizAttemptDeleteArgs} args - Arguments to delete one QuizAttempt.
     * @example
     * // Delete one QuizAttempt
     * const QuizAttempt = await prisma.quizAttempt.delete({
     *   where: {
     *     // ... filter to delete one QuizAttempt
     *   }
     * })
     * 
     */
    delete<T extends QuizAttemptDeleteArgs>(args: SelectSubset<T, QuizAttemptDeleteArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one QuizAttempt.
     * @param {QuizAttemptUpdateArgs} args - Arguments to update one QuizAttempt.
     * @example
     * // Update one QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuizAttemptUpdateArgs>(args: SelectSubset<T, QuizAttemptUpdateArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more QuizAttempts.
     * @param {QuizAttemptDeleteManyArgs} args - Arguments to filter QuizAttempts to delete.
     * @example
     * // Delete a few QuizAttempts
     * const { count } = await prisma.quizAttempt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuizAttemptDeleteManyArgs>(args?: SelectSubset<T, QuizAttemptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QuizAttempts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QuizAttempts
     * const quizAttempt = await prisma.quizAttempt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuizAttemptUpdateManyArgs>(args: SelectSubset<T, QuizAttemptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one QuizAttempt.
     * @param {QuizAttemptUpsertArgs} args - Arguments to update or create a QuizAttempt.
     * @example
     * // Update or create a QuizAttempt
     * const quizAttempt = await prisma.quizAttempt.upsert({
     *   create: {
     *     // ... data to create a QuizAttempt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QuizAttempt we want to update
     *   }
     * })
     */
    upsert<T extends QuizAttemptUpsertArgs>(args: SelectSubset<T, QuizAttemptUpsertArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of QuizAttempts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptCountArgs} args - Arguments to filter QuizAttempts to count.
     * @example
     * // Count the number of QuizAttempts
     * const count = await prisma.quizAttempt.count({
     *   where: {
     *     // ... the filter for the QuizAttempts we want to count
     *   }
     * })
    **/
    count<T extends QuizAttemptCountArgs>(
      args?: Subset<T, QuizAttemptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuizAttemptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QuizAttempt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuizAttemptAggregateArgs>(args: Subset<T, QuizAttemptAggregateArgs>): Prisma.PrismaPromise<GetQuizAttemptAggregateType<T>>

    /**
     * Group by QuizAttempt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAttemptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuizAttemptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuizAttemptGroupByArgs['orderBy'] }
        : { orderBy?: QuizAttemptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuizAttemptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuizAttemptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QuizAttempt model
   */
  readonly fields: QuizAttemptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QuizAttempt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuizAttemptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    answers<T extends QuizAttempt$answersArgs<ExtArgs> = {}>(args?: Subset<T, QuizAttempt$answersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findMany"> | Null>
    enrollment<T extends QuizAttempt$enrollmentArgs<ExtArgs> = {}>(args?: Subset<T, QuizAttempt$enrollmentArgs<ExtArgs>>): Prisma__CourseEnrollmentClient<$Result.GetResult<Prisma.$CourseEnrollmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    quiz<T extends QuizDefaultArgs<ExtArgs> = {}>(args?: Subset<T, QuizDefaultArgs<ExtArgs>>): Prisma__QuizClient<$Result.GetResult<Prisma.$QuizPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    student<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QuizAttempt model
   */ 
  interface QuizAttemptFieldRefs {
    readonly id: FieldRef<"QuizAttempt", 'String'>
    readonly enrollmentId: FieldRef<"QuizAttempt", 'String'>
    readonly quizId: FieldRef<"QuizAttempt", 'String'>
    readonly studentId: FieldRef<"QuizAttempt", 'String'>
    readonly startedAt: FieldRef<"QuizAttempt", 'DateTime'>
    readonly completedAt: FieldRef<"QuizAttempt", 'DateTime'>
    readonly score: FieldRef<"QuizAttempt", 'Int'>
    readonly passed: FieldRef<"QuizAttempt", 'Boolean'>
    readonly timeSpent: FieldRef<"QuizAttempt", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * QuizAttempt findUnique
   */
  export type QuizAttemptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter, which QuizAttempt to fetch.
     */
    where: QuizAttemptWhereUniqueInput
  }

  /**
   * QuizAttempt findUniqueOrThrow
   */
  export type QuizAttemptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter, which QuizAttempt to fetch.
     */
    where: QuizAttemptWhereUniqueInput
  }

  /**
   * QuizAttempt findFirst
   */
  export type QuizAttemptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter, which QuizAttempt to fetch.
     */
    where?: QuizAttemptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAttempts to fetch.
     */
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizAttempts.
     */
    cursor?: QuizAttemptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAttempts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAttempts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizAttempts.
     */
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * QuizAttempt findFirstOrThrow
   */
  export type QuizAttemptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter, which QuizAttempt to fetch.
     */
    where?: QuizAttemptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAttempts to fetch.
     */
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizAttempts.
     */
    cursor?: QuizAttemptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAttempts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAttempts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizAttempts.
     */
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * QuizAttempt findMany
   */
  export type QuizAttemptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter, which QuizAttempts to fetch.
     */
    where?: QuizAttemptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAttempts to fetch.
     */
    orderBy?: QuizAttemptOrderByWithRelationInput | QuizAttemptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QuizAttempts.
     */
    cursor?: QuizAttemptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAttempts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAttempts.
     */
    skip?: number
    distinct?: QuizAttemptScalarFieldEnum | QuizAttemptScalarFieldEnum[]
  }

  /**
   * QuizAttempt create
   */
  export type QuizAttemptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * The data needed to create a QuizAttempt.
     */
    data: XOR<QuizAttemptCreateInput, QuizAttemptUncheckedCreateInput>
  }

  /**
   * QuizAttempt createMany
   */
  export type QuizAttemptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QuizAttempts.
     */
    data: QuizAttemptCreateManyInput | QuizAttemptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QuizAttempt createManyAndReturn
   */
  export type QuizAttemptCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many QuizAttempts.
     */
    data: QuizAttemptCreateManyInput | QuizAttemptCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QuizAttempt update
   */
  export type QuizAttemptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * The data needed to update a QuizAttempt.
     */
    data: XOR<QuizAttemptUpdateInput, QuizAttemptUncheckedUpdateInput>
    /**
     * Choose, which QuizAttempt to update.
     */
    where: QuizAttemptWhereUniqueInput
  }

  /**
   * QuizAttempt updateMany
   */
  export type QuizAttemptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QuizAttempts.
     */
    data: XOR<QuizAttemptUpdateManyMutationInput, QuizAttemptUncheckedUpdateManyInput>
    /**
     * Filter which QuizAttempts to update
     */
    where?: QuizAttemptWhereInput
  }

  /**
   * QuizAttempt upsert
   */
  export type QuizAttemptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * The filter to search for the QuizAttempt to update in case it exists.
     */
    where: QuizAttemptWhereUniqueInput
    /**
     * In case the QuizAttempt found by the `where` argument doesn't exist, create a new QuizAttempt with this data.
     */
    create: XOR<QuizAttemptCreateInput, QuizAttemptUncheckedCreateInput>
    /**
     * In case the QuizAttempt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuizAttemptUpdateInput, QuizAttemptUncheckedUpdateInput>
  }

  /**
   * QuizAttempt delete
   */
  export type QuizAttemptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
    /**
     * Filter which QuizAttempt to delete.
     */
    where: QuizAttemptWhereUniqueInput
  }

  /**
   * QuizAttempt deleteMany
   */
  export type QuizAttemptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizAttempts to delete
     */
    where?: QuizAttemptWhereInput
  }

  /**
   * QuizAttempt.answers
   */
  export type QuizAttempt$answersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    where?: QuizAnswerWhereInput
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    cursor?: QuizAnswerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QuizAnswerScalarFieldEnum | QuizAnswerScalarFieldEnum[]
  }

  /**
   * QuizAttempt.enrollment
   */
  export type QuizAttempt$enrollmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseEnrollment
     */
    select?: CourseEnrollmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseEnrollmentInclude<ExtArgs> | null
    where?: CourseEnrollmentWhereInput
  }

  /**
   * QuizAttempt without action
   */
  export type QuizAttemptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAttempt
     */
    select?: QuizAttemptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAttemptInclude<ExtArgs> | null
  }


  /**
   * Model QuizAnswer
   */

  export type AggregateQuizAnswer = {
    _count: QuizAnswerCountAggregateOutputType | null
    _avg: QuizAnswerAvgAggregateOutputType | null
    _sum: QuizAnswerSumAggregateOutputType | null
    _min: QuizAnswerMinAggregateOutputType | null
    _max: QuizAnswerMaxAggregateOutputType | null
  }

  export type QuizAnswerAvgAggregateOutputType = {
    timeSpent: number | null
  }

  export type QuizAnswerSumAggregateOutputType = {
    timeSpent: number | null
  }

  export type QuizAnswerMinAggregateOutputType = {
    id: string | null
    attemptId: string | null
    questionId: string | null
    answer: string | null
    isCorrect: boolean | null
    timeSpent: number | null
  }

  export type QuizAnswerMaxAggregateOutputType = {
    id: string | null
    attemptId: string | null
    questionId: string | null
    answer: string | null
    isCorrect: boolean | null
    timeSpent: number | null
  }

  export type QuizAnswerCountAggregateOutputType = {
    id: number
    attemptId: number
    questionId: number
    answer: number
    isCorrect: number
    timeSpent: number
    _all: number
  }


  export type QuizAnswerAvgAggregateInputType = {
    timeSpent?: true
  }

  export type QuizAnswerSumAggregateInputType = {
    timeSpent?: true
  }

  export type QuizAnswerMinAggregateInputType = {
    id?: true
    attemptId?: true
    questionId?: true
    answer?: true
    isCorrect?: true
    timeSpent?: true
  }

  export type QuizAnswerMaxAggregateInputType = {
    id?: true
    attemptId?: true
    questionId?: true
    answer?: true
    isCorrect?: true
    timeSpent?: true
  }

  export type QuizAnswerCountAggregateInputType = {
    id?: true
    attemptId?: true
    questionId?: true
    answer?: true
    isCorrect?: true
    timeSpent?: true
    _all?: true
  }

  export type QuizAnswerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizAnswer to aggregate.
     */
    where?: QuizAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAnswers to fetch.
     */
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QuizAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QuizAnswers
    **/
    _count?: true | QuizAnswerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QuizAnswerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QuizAnswerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QuizAnswerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QuizAnswerMaxAggregateInputType
  }

  export type GetQuizAnswerAggregateType<T extends QuizAnswerAggregateArgs> = {
        [P in keyof T & keyof AggregateQuizAnswer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuizAnswer[P]>
      : GetScalarType<T[P], AggregateQuizAnswer[P]>
  }




  export type QuizAnswerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QuizAnswerWhereInput
    orderBy?: QuizAnswerOrderByWithAggregationInput | QuizAnswerOrderByWithAggregationInput[]
    by: QuizAnswerScalarFieldEnum[] | QuizAnswerScalarFieldEnum
    having?: QuizAnswerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QuizAnswerCountAggregateInputType | true
    _avg?: QuizAnswerAvgAggregateInputType
    _sum?: QuizAnswerSumAggregateInputType
    _min?: QuizAnswerMinAggregateInputType
    _max?: QuizAnswerMaxAggregateInputType
  }

  export type QuizAnswerGroupByOutputType = {
    id: string
    attemptId: string
    questionId: string
    answer: string
    isCorrect: boolean
    timeSpent: number
    _count: QuizAnswerCountAggregateOutputType | null
    _avg: QuizAnswerAvgAggregateOutputType | null
    _sum: QuizAnswerSumAggregateOutputType | null
    _min: QuizAnswerMinAggregateOutputType | null
    _max: QuizAnswerMaxAggregateOutputType | null
  }

  type GetQuizAnswerGroupByPayload<T extends QuizAnswerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QuizAnswerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QuizAnswerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QuizAnswerGroupByOutputType[P]>
            : GetScalarType<T[P], QuizAnswerGroupByOutputType[P]>
        }
      >
    >


  export type QuizAnswerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    attemptId?: boolean
    questionId?: boolean
    answer?: boolean
    isCorrect?: boolean
    timeSpent?: boolean
    attempt?: boolean | QuizAttemptDefaultArgs<ExtArgs>
    question?: boolean | QuizQuestionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizAnswer"]>

  export type QuizAnswerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    attemptId?: boolean
    questionId?: boolean
    answer?: boolean
    isCorrect?: boolean
    timeSpent?: boolean
    attempt?: boolean | QuizAttemptDefaultArgs<ExtArgs>
    question?: boolean | QuizQuestionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quizAnswer"]>

  export type QuizAnswerSelectScalar = {
    id?: boolean
    attemptId?: boolean
    questionId?: boolean
    answer?: boolean
    isCorrect?: boolean
    timeSpent?: boolean
  }

  export type QuizAnswerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attempt?: boolean | QuizAttemptDefaultArgs<ExtArgs>
    question?: boolean | QuizQuestionDefaultArgs<ExtArgs>
  }
  export type QuizAnswerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attempt?: boolean | QuizAttemptDefaultArgs<ExtArgs>
    question?: boolean | QuizQuestionDefaultArgs<ExtArgs>
  }

  export type $QuizAnswerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QuizAnswer"
    objects: {
      attempt: Prisma.$QuizAttemptPayload<ExtArgs>
      question: Prisma.$QuizQuestionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      attemptId: string
      questionId: string
      answer: string
      isCorrect: boolean
      timeSpent: number
    }, ExtArgs["result"]["quizAnswer"]>
    composites: {}
  }

  type QuizAnswerGetPayload<S extends boolean | null | undefined | QuizAnswerDefaultArgs> = $Result.GetResult<Prisma.$QuizAnswerPayload, S>

  type QuizAnswerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<QuizAnswerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: QuizAnswerCountAggregateInputType | true
    }

  export interface QuizAnswerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QuizAnswer'], meta: { name: 'QuizAnswer' } }
    /**
     * Find zero or one QuizAnswer that matches the filter.
     * @param {QuizAnswerFindUniqueArgs} args - Arguments to find a QuizAnswer
     * @example
     * // Get one QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QuizAnswerFindUniqueArgs>(args: SelectSubset<T, QuizAnswerFindUniqueArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one QuizAnswer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {QuizAnswerFindUniqueOrThrowArgs} args - Arguments to find a QuizAnswer
     * @example
     * // Get one QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QuizAnswerFindUniqueOrThrowArgs>(args: SelectSubset<T, QuizAnswerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first QuizAnswer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerFindFirstArgs} args - Arguments to find a QuizAnswer
     * @example
     * // Get one QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QuizAnswerFindFirstArgs>(args?: SelectSubset<T, QuizAnswerFindFirstArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first QuizAnswer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerFindFirstOrThrowArgs} args - Arguments to find a QuizAnswer
     * @example
     * // Get one QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QuizAnswerFindFirstOrThrowArgs>(args?: SelectSubset<T, QuizAnswerFindFirstOrThrowArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more QuizAnswers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QuizAnswers
     * const quizAnswers = await prisma.quizAnswer.findMany()
     * 
     * // Get first 10 QuizAnswers
     * const quizAnswers = await prisma.quizAnswer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const quizAnswerWithIdOnly = await prisma.quizAnswer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QuizAnswerFindManyArgs>(args?: SelectSubset<T, QuizAnswerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a QuizAnswer.
     * @param {QuizAnswerCreateArgs} args - Arguments to create a QuizAnswer.
     * @example
     * // Create one QuizAnswer
     * const QuizAnswer = await prisma.quizAnswer.create({
     *   data: {
     *     // ... data to create a QuizAnswer
     *   }
     * })
     * 
     */
    create<T extends QuizAnswerCreateArgs>(args: SelectSubset<T, QuizAnswerCreateArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many QuizAnswers.
     * @param {QuizAnswerCreateManyArgs} args - Arguments to create many QuizAnswers.
     * @example
     * // Create many QuizAnswers
     * const quizAnswer = await prisma.quizAnswer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QuizAnswerCreateManyArgs>(args?: SelectSubset<T, QuizAnswerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QuizAnswers and returns the data saved in the database.
     * @param {QuizAnswerCreateManyAndReturnArgs} args - Arguments to create many QuizAnswers.
     * @example
     * // Create many QuizAnswers
     * const quizAnswer = await prisma.quizAnswer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QuizAnswers and only return the `id`
     * const quizAnswerWithIdOnly = await prisma.quizAnswer.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QuizAnswerCreateManyAndReturnArgs>(args?: SelectSubset<T, QuizAnswerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a QuizAnswer.
     * @param {QuizAnswerDeleteArgs} args - Arguments to delete one QuizAnswer.
     * @example
     * // Delete one QuizAnswer
     * const QuizAnswer = await prisma.quizAnswer.delete({
     *   where: {
     *     // ... filter to delete one QuizAnswer
     *   }
     * })
     * 
     */
    delete<T extends QuizAnswerDeleteArgs>(args: SelectSubset<T, QuizAnswerDeleteArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one QuizAnswer.
     * @param {QuizAnswerUpdateArgs} args - Arguments to update one QuizAnswer.
     * @example
     * // Update one QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QuizAnswerUpdateArgs>(args: SelectSubset<T, QuizAnswerUpdateArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more QuizAnswers.
     * @param {QuizAnswerDeleteManyArgs} args - Arguments to filter QuizAnswers to delete.
     * @example
     * // Delete a few QuizAnswers
     * const { count } = await prisma.quizAnswer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QuizAnswerDeleteManyArgs>(args?: SelectSubset<T, QuizAnswerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QuizAnswers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QuizAnswers
     * const quizAnswer = await prisma.quizAnswer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QuizAnswerUpdateManyArgs>(args: SelectSubset<T, QuizAnswerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one QuizAnswer.
     * @param {QuizAnswerUpsertArgs} args - Arguments to update or create a QuizAnswer.
     * @example
     * // Update or create a QuizAnswer
     * const quizAnswer = await prisma.quizAnswer.upsert({
     *   create: {
     *     // ... data to create a QuizAnswer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QuizAnswer we want to update
     *   }
     * })
     */
    upsert<T extends QuizAnswerUpsertArgs>(args: SelectSubset<T, QuizAnswerUpsertArgs<ExtArgs>>): Prisma__QuizAnswerClient<$Result.GetResult<Prisma.$QuizAnswerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of QuizAnswers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerCountArgs} args - Arguments to filter QuizAnswers to count.
     * @example
     * // Count the number of QuizAnswers
     * const count = await prisma.quizAnswer.count({
     *   where: {
     *     // ... the filter for the QuizAnswers we want to count
     *   }
     * })
    **/
    count<T extends QuizAnswerCountArgs>(
      args?: Subset<T, QuizAnswerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QuizAnswerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QuizAnswer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QuizAnswerAggregateArgs>(args: Subset<T, QuizAnswerAggregateArgs>): Prisma.PrismaPromise<GetQuizAnswerAggregateType<T>>

    /**
     * Group by QuizAnswer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QuizAnswerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QuizAnswerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QuizAnswerGroupByArgs['orderBy'] }
        : { orderBy?: QuizAnswerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QuizAnswerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuizAnswerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QuizAnswer model
   */
  readonly fields: QuizAnswerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QuizAnswer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QuizAnswerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attempt<T extends QuizAttemptDefaultArgs<ExtArgs> = {}>(args?: Subset<T, QuizAttemptDefaultArgs<ExtArgs>>): Prisma__QuizAttemptClient<$Result.GetResult<Prisma.$QuizAttemptPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    question<T extends QuizQuestionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, QuizQuestionDefaultArgs<ExtArgs>>): Prisma__QuizQuestionClient<$Result.GetResult<Prisma.$QuizQuestionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QuizAnswer model
   */ 
  interface QuizAnswerFieldRefs {
    readonly id: FieldRef<"QuizAnswer", 'String'>
    readonly attemptId: FieldRef<"QuizAnswer", 'String'>
    readonly questionId: FieldRef<"QuizAnswer", 'String'>
    readonly answer: FieldRef<"QuizAnswer", 'String'>
    readonly isCorrect: FieldRef<"QuizAnswer", 'Boolean'>
    readonly timeSpent: FieldRef<"QuizAnswer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * QuizAnswer findUnique
   */
  export type QuizAnswerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter, which QuizAnswer to fetch.
     */
    where: QuizAnswerWhereUniqueInput
  }

  /**
   * QuizAnswer findUniqueOrThrow
   */
  export type QuizAnswerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter, which QuizAnswer to fetch.
     */
    where: QuizAnswerWhereUniqueInput
  }

  /**
   * QuizAnswer findFirst
   */
  export type QuizAnswerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter, which QuizAnswer to fetch.
     */
    where?: QuizAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAnswers to fetch.
     */
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizAnswers.
     */
    cursor?: QuizAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizAnswers.
     */
    distinct?: QuizAnswerScalarFieldEnum | QuizAnswerScalarFieldEnum[]
  }

  /**
   * QuizAnswer findFirstOrThrow
   */
  export type QuizAnswerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter, which QuizAnswer to fetch.
     */
    where?: QuizAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAnswers to fetch.
     */
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QuizAnswers.
     */
    cursor?: QuizAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAnswers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QuizAnswers.
     */
    distinct?: QuizAnswerScalarFieldEnum | QuizAnswerScalarFieldEnum[]
  }

  /**
   * QuizAnswer findMany
   */
  export type QuizAnswerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter, which QuizAnswers to fetch.
     */
    where?: QuizAnswerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QuizAnswers to fetch.
     */
    orderBy?: QuizAnswerOrderByWithRelationInput | QuizAnswerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QuizAnswers.
     */
    cursor?: QuizAnswerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QuizAnswers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QuizAnswers.
     */
    skip?: number
    distinct?: QuizAnswerScalarFieldEnum | QuizAnswerScalarFieldEnum[]
  }

  /**
   * QuizAnswer create
   */
  export type QuizAnswerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * The data needed to create a QuizAnswer.
     */
    data: XOR<QuizAnswerCreateInput, QuizAnswerUncheckedCreateInput>
  }

  /**
   * QuizAnswer createMany
   */
  export type QuizAnswerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QuizAnswers.
     */
    data: QuizAnswerCreateManyInput | QuizAnswerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QuizAnswer createManyAndReturn
   */
  export type QuizAnswerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many QuizAnswers.
     */
    data: QuizAnswerCreateManyInput | QuizAnswerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QuizAnswer update
   */
  export type QuizAnswerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * The data needed to update a QuizAnswer.
     */
    data: XOR<QuizAnswerUpdateInput, QuizAnswerUncheckedUpdateInput>
    /**
     * Choose, which QuizAnswer to update.
     */
    where: QuizAnswerWhereUniqueInput
  }

  /**
   * QuizAnswer updateMany
   */
  export type QuizAnswerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QuizAnswers.
     */
    data: XOR<QuizAnswerUpdateManyMutationInput, QuizAnswerUncheckedUpdateManyInput>
    /**
     * Filter which QuizAnswers to update
     */
    where?: QuizAnswerWhereInput
  }

  /**
   * QuizAnswer upsert
   */
  export type QuizAnswerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * The filter to search for the QuizAnswer to update in case it exists.
     */
    where: QuizAnswerWhereUniqueInput
    /**
     * In case the QuizAnswer found by the `where` argument doesn't exist, create a new QuizAnswer with this data.
     */
    create: XOR<QuizAnswerCreateInput, QuizAnswerUncheckedCreateInput>
    /**
     * In case the QuizAnswer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QuizAnswerUpdateInput, QuizAnswerUncheckedUpdateInput>
  }

  /**
   * QuizAnswer delete
   */
  export type QuizAnswerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
    /**
     * Filter which QuizAnswer to delete.
     */
    where: QuizAnswerWhereUniqueInput
  }

  /**
   * QuizAnswer deleteMany
   */
  export type QuizAnswerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QuizAnswers to delete
     */
    where?: QuizAnswerWhereInput
  }

  /**
   * QuizAnswer without action
   */
  export type QuizAnswerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QuizAnswer
     */
    select?: QuizAnswerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QuizAnswerInclude<ExtArgs> | null
  }


  /**
   * Model Certificate
   */

  export type AggregateCertificate = {
    _count: CertificateCountAggregateOutputType | null
    _min: CertificateMinAggregateOutputType | null
    _max: CertificateMaxAggregateOutputType | null
  }

  export type CertificateMinAggregateOutputType = {
    id: string | null
    userId: string | null
    courseId: string | null
    template: string | null
    issuedAt: Date | null
    verificationCode: string | null
    digitalSignature: string | null
    isValid: boolean | null
    url: string | null
  }

  export type CertificateMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    courseId: string | null
    template: string | null
    issuedAt: Date | null
    verificationCode: string | null
    digitalSignature: string | null
    isValid: boolean | null
    url: string | null
  }

  export type CertificateCountAggregateOutputType = {
    id: number
    userId: number
    courseId: number
    template: number
    issuedAt: number
    verificationCode: number
    digitalSignature: number
    isValid: number
    url: number
    _all: number
  }


  export type CertificateMinAggregateInputType = {
    id?: true
    userId?: true
    courseId?: true
    template?: true
    issuedAt?: true
    verificationCode?: true
    digitalSignature?: true
    isValid?: true
    url?: true
  }

  export type CertificateMaxAggregateInputType = {
    id?: true
    userId?: true
    courseId?: true
    template?: true
    issuedAt?: true
    verificationCode?: true
    digitalSignature?: true
    isValid?: true
    url?: true
  }

  export type CertificateCountAggregateInputType = {
    id?: true
    userId?: true
    courseId?: true
    template?: true
    issuedAt?: true
    verificationCode?: true
    digitalSignature?: true
    isValid?: true
    url?: true
    _all?: true
  }

  export type CertificateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Certificate to aggregate.
     */
    where?: CertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certificates to fetch.
     */
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Certificates
    **/
    _count?: true | CertificateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CertificateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CertificateMaxAggregateInputType
  }

  export type GetCertificateAggregateType<T extends CertificateAggregateArgs> = {
        [P in keyof T & keyof AggregateCertificate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCertificate[P]>
      : GetScalarType<T[P], AggregateCertificate[P]>
  }




  export type CertificateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CertificateWhereInput
    orderBy?: CertificateOrderByWithAggregationInput | CertificateOrderByWithAggregationInput[]
    by: CertificateScalarFieldEnum[] | CertificateScalarFieldEnum
    having?: CertificateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CertificateCountAggregateInputType | true
    _min?: CertificateMinAggregateInputType
    _max?: CertificateMaxAggregateInputType
  }

  export type CertificateGroupByOutputType = {
    id: string
    userId: string
    courseId: string
    template: string
    issuedAt: Date
    verificationCode: string
    digitalSignature: string
    isValid: boolean
    url: string | null
    _count: CertificateCountAggregateOutputType | null
    _min: CertificateMinAggregateOutputType | null
    _max: CertificateMaxAggregateOutputType | null
  }

  type GetCertificateGroupByPayload<T extends CertificateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CertificateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CertificateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CertificateGroupByOutputType[P]>
            : GetScalarType<T[P], CertificateGroupByOutputType[P]>
        }
      >
    >


  export type CertificateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    courseId?: boolean
    template?: boolean
    issuedAt?: boolean
    verificationCode?: boolean
    digitalSignature?: boolean
    isValid?: boolean
    url?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["certificate"]>

  export type CertificateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    courseId?: boolean
    template?: boolean
    issuedAt?: boolean
    verificationCode?: boolean
    digitalSignature?: boolean
    isValid?: boolean
    url?: boolean
    course?: boolean | CourseDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["certificate"]>

  export type CertificateSelectScalar = {
    id?: boolean
    userId?: boolean
    courseId?: boolean
    template?: boolean
    issuedAt?: boolean
    verificationCode?: boolean
    digitalSignature?: boolean
    isValid?: boolean
    url?: boolean
  }

  export type CertificateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type CertificateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    course?: boolean | CourseDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $CertificatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Certificate"
    objects: {
      course: Prisma.$CoursePayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      courseId: string
      template: string
      issuedAt: Date
      verificationCode: string
      digitalSignature: string
      isValid: boolean
      url: string | null
    }, ExtArgs["result"]["certificate"]>
    composites: {}
  }

  type CertificateGetPayload<S extends boolean | null | undefined | CertificateDefaultArgs> = $Result.GetResult<Prisma.$CertificatePayload, S>

  type CertificateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CertificateFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CertificateCountAggregateInputType | true
    }

  export interface CertificateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Certificate'], meta: { name: 'Certificate' } }
    /**
     * Find zero or one Certificate that matches the filter.
     * @param {CertificateFindUniqueArgs} args - Arguments to find a Certificate
     * @example
     * // Get one Certificate
     * const certificate = await prisma.certificate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CertificateFindUniqueArgs>(args: SelectSubset<T, CertificateFindUniqueArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Certificate that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CertificateFindUniqueOrThrowArgs} args - Arguments to find a Certificate
     * @example
     * // Get one Certificate
     * const certificate = await prisma.certificate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CertificateFindUniqueOrThrowArgs>(args: SelectSubset<T, CertificateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Certificate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateFindFirstArgs} args - Arguments to find a Certificate
     * @example
     * // Get one Certificate
     * const certificate = await prisma.certificate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CertificateFindFirstArgs>(args?: SelectSubset<T, CertificateFindFirstArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Certificate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateFindFirstOrThrowArgs} args - Arguments to find a Certificate
     * @example
     * // Get one Certificate
     * const certificate = await prisma.certificate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CertificateFindFirstOrThrowArgs>(args?: SelectSubset<T, CertificateFindFirstOrThrowArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Certificates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Certificates
     * const certificates = await prisma.certificate.findMany()
     * 
     * // Get first 10 Certificates
     * const certificates = await prisma.certificate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const certificateWithIdOnly = await prisma.certificate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CertificateFindManyArgs>(args?: SelectSubset<T, CertificateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Certificate.
     * @param {CertificateCreateArgs} args - Arguments to create a Certificate.
     * @example
     * // Create one Certificate
     * const Certificate = await prisma.certificate.create({
     *   data: {
     *     // ... data to create a Certificate
     *   }
     * })
     * 
     */
    create<T extends CertificateCreateArgs>(args: SelectSubset<T, CertificateCreateArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Certificates.
     * @param {CertificateCreateManyArgs} args - Arguments to create many Certificates.
     * @example
     * // Create many Certificates
     * const certificate = await prisma.certificate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CertificateCreateManyArgs>(args?: SelectSubset<T, CertificateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Certificates and returns the data saved in the database.
     * @param {CertificateCreateManyAndReturnArgs} args - Arguments to create many Certificates.
     * @example
     * // Create many Certificates
     * const certificate = await prisma.certificate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Certificates and only return the `id`
     * const certificateWithIdOnly = await prisma.certificate.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CertificateCreateManyAndReturnArgs>(args?: SelectSubset<T, CertificateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Certificate.
     * @param {CertificateDeleteArgs} args - Arguments to delete one Certificate.
     * @example
     * // Delete one Certificate
     * const Certificate = await prisma.certificate.delete({
     *   where: {
     *     // ... filter to delete one Certificate
     *   }
     * })
     * 
     */
    delete<T extends CertificateDeleteArgs>(args: SelectSubset<T, CertificateDeleteArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Certificate.
     * @param {CertificateUpdateArgs} args - Arguments to update one Certificate.
     * @example
     * // Update one Certificate
     * const certificate = await prisma.certificate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CertificateUpdateArgs>(args: SelectSubset<T, CertificateUpdateArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Certificates.
     * @param {CertificateDeleteManyArgs} args - Arguments to filter Certificates to delete.
     * @example
     * // Delete a few Certificates
     * const { count } = await prisma.certificate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CertificateDeleteManyArgs>(args?: SelectSubset<T, CertificateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Certificates
     * const certificate = await prisma.certificate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CertificateUpdateManyArgs>(args: SelectSubset<T, CertificateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Certificate.
     * @param {CertificateUpsertArgs} args - Arguments to update or create a Certificate.
     * @example
     * // Update or create a Certificate
     * const certificate = await prisma.certificate.upsert({
     *   create: {
     *     // ... data to create a Certificate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Certificate we want to update
     *   }
     * })
     */
    upsert<T extends CertificateUpsertArgs>(args: SelectSubset<T, CertificateUpsertArgs<ExtArgs>>): Prisma__CertificateClient<$Result.GetResult<Prisma.$CertificatePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateCountArgs} args - Arguments to filter Certificates to count.
     * @example
     * // Count the number of Certificates
     * const count = await prisma.certificate.count({
     *   where: {
     *     // ... the filter for the Certificates we want to count
     *   }
     * })
    **/
    count<T extends CertificateCountArgs>(
      args?: Subset<T, CertificateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CertificateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Certificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CertificateAggregateArgs>(args: Subset<T, CertificateAggregateArgs>): Prisma.PrismaPromise<GetCertificateAggregateType<T>>

    /**
     * Group by Certificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CertificateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CertificateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CertificateGroupByArgs['orderBy'] }
        : { orderBy?: CertificateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CertificateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCertificateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Certificate model
   */
  readonly fields: CertificateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Certificate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CertificateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    course<T extends CourseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseDefaultArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Certificate model
   */ 
  interface CertificateFieldRefs {
    readonly id: FieldRef<"Certificate", 'String'>
    readonly userId: FieldRef<"Certificate", 'String'>
    readonly courseId: FieldRef<"Certificate", 'String'>
    readonly template: FieldRef<"Certificate", 'String'>
    readonly issuedAt: FieldRef<"Certificate", 'DateTime'>
    readonly verificationCode: FieldRef<"Certificate", 'String'>
    readonly digitalSignature: FieldRef<"Certificate", 'String'>
    readonly isValid: FieldRef<"Certificate", 'Boolean'>
    readonly url: FieldRef<"Certificate", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Certificate findUnique
   */
  export type CertificateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter, which Certificate to fetch.
     */
    where: CertificateWhereUniqueInput
  }

  /**
   * Certificate findUniqueOrThrow
   */
  export type CertificateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter, which Certificate to fetch.
     */
    where: CertificateWhereUniqueInput
  }

  /**
   * Certificate findFirst
   */
  export type CertificateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter, which Certificate to fetch.
     */
    where?: CertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certificates to fetch.
     */
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Certificates.
     */
    cursor?: CertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Certificates.
     */
    distinct?: CertificateScalarFieldEnum | CertificateScalarFieldEnum[]
  }

  /**
   * Certificate findFirstOrThrow
   */
  export type CertificateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter, which Certificate to fetch.
     */
    where?: CertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certificates to fetch.
     */
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Certificates.
     */
    cursor?: CertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Certificates.
     */
    distinct?: CertificateScalarFieldEnum | CertificateScalarFieldEnum[]
  }

  /**
   * Certificate findMany
   */
  export type CertificateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter, which Certificates to fetch.
     */
    where?: CertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Certificates to fetch.
     */
    orderBy?: CertificateOrderByWithRelationInput | CertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Certificates.
     */
    cursor?: CertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Certificates.
     */
    skip?: number
    distinct?: CertificateScalarFieldEnum | CertificateScalarFieldEnum[]
  }

  /**
   * Certificate create
   */
  export type CertificateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * The data needed to create a Certificate.
     */
    data: XOR<CertificateCreateInput, CertificateUncheckedCreateInput>
  }

  /**
   * Certificate createMany
   */
  export type CertificateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Certificates.
     */
    data: CertificateCreateManyInput | CertificateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Certificate createManyAndReturn
   */
  export type CertificateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Certificates.
     */
    data: CertificateCreateManyInput | CertificateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Certificate update
   */
  export type CertificateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * The data needed to update a Certificate.
     */
    data: XOR<CertificateUpdateInput, CertificateUncheckedUpdateInput>
    /**
     * Choose, which Certificate to update.
     */
    where: CertificateWhereUniqueInput
  }

  /**
   * Certificate updateMany
   */
  export type CertificateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Certificates.
     */
    data: XOR<CertificateUpdateManyMutationInput, CertificateUncheckedUpdateManyInput>
    /**
     * Filter which Certificates to update
     */
    where?: CertificateWhereInput
  }

  /**
   * Certificate upsert
   */
  export type CertificateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * The filter to search for the Certificate to update in case it exists.
     */
    where: CertificateWhereUniqueInput
    /**
     * In case the Certificate found by the `where` argument doesn't exist, create a new Certificate with this data.
     */
    create: XOR<CertificateCreateInput, CertificateUncheckedCreateInput>
    /**
     * In case the Certificate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CertificateUpdateInput, CertificateUncheckedUpdateInput>
  }

  /**
   * Certificate delete
   */
  export type CertificateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
    /**
     * Filter which Certificate to delete.
     */
    where: CertificateWhereUniqueInput
  }

  /**
   * Certificate deleteMany
   */
  export type CertificateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Certificates to delete
     */
    where?: CertificateWhereInput
  }

  /**
   * Certificate without action
   */
  export type CertificateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Certificate
     */
    select?: CertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CertificateInclude<ExtArgs> | null
  }


  /**
   * Model StudentNote
   */

  export type AggregateStudentNote = {
    _count: StudentNoteCountAggregateOutputType | null
    _avg: StudentNoteAvgAggregateOutputType | null
    _sum: StudentNoteSumAggregateOutputType | null
    _min: StudentNoteMinAggregateOutputType | null
    _max: StudentNoteMaxAggregateOutputType | null
  }

  export type StudentNoteAvgAggregateOutputType = {
    timestamp: number | null
  }

  export type StudentNoteSumAggregateOutputType = {
    timestamp: number | null
  }

  export type StudentNoteMinAggregateOutputType = {
    id: string | null
    userId: string | null
    lessonId: string | null
    content: string | null
    timestamp: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StudentNoteMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    lessonId: string | null
    content: string | null
    timestamp: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StudentNoteCountAggregateOutputType = {
    id: number
    userId: number
    lessonId: number
    content: number
    timestamp: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StudentNoteAvgAggregateInputType = {
    timestamp?: true
  }

  export type StudentNoteSumAggregateInputType = {
    timestamp?: true
  }

  export type StudentNoteMinAggregateInputType = {
    id?: true
    userId?: true
    lessonId?: true
    content?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StudentNoteMaxAggregateInputType = {
    id?: true
    userId?: true
    lessonId?: true
    content?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StudentNoteCountAggregateInputType = {
    id?: true
    userId?: true
    lessonId?: true
    content?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StudentNoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StudentNote to aggregate.
     */
    where?: StudentNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudentNotes to fetch.
     */
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StudentNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudentNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudentNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StudentNotes
    **/
    _count?: true | StudentNoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StudentNoteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StudentNoteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StudentNoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StudentNoteMaxAggregateInputType
  }

  export type GetStudentNoteAggregateType<T extends StudentNoteAggregateArgs> = {
        [P in keyof T & keyof AggregateStudentNote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudentNote[P]>
      : GetScalarType<T[P], AggregateStudentNote[P]>
  }




  export type StudentNoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StudentNoteWhereInput
    orderBy?: StudentNoteOrderByWithAggregationInput | StudentNoteOrderByWithAggregationInput[]
    by: StudentNoteScalarFieldEnum[] | StudentNoteScalarFieldEnum
    having?: StudentNoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StudentNoteCountAggregateInputType | true
    _avg?: StudentNoteAvgAggregateInputType
    _sum?: StudentNoteSumAggregateInputType
    _min?: StudentNoteMinAggregateInputType
    _max?: StudentNoteMaxAggregateInputType
  }

  export type StudentNoteGroupByOutputType = {
    id: string
    userId: string
    lessonId: string
    content: string
    timestamp: number | null
    createdAt: Date
    updatedAt: Date
    _count: StudentNoteCountAggregateOutputType | null
    _avg: StudentNoteAvgAggregateOutputType | null
    _sum: StudentNoteSumAggregateOutputType | null
    _min: StudentNoteMinAggregateOutputType | null
    _max: StudentNoteMaxAggregateOutputType | null
  }

  type GetStudentNoteGroupByPayload<T extends StudentNoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StudentNoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StudentNoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StudentNoteGroupByOutputType[P]>
            : GetScalarType<T[P], StudentNoteGroupByOutputType[P]>
        }
      >
    >


  export type StudentNoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    lessonId?: boolean
    content?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["studentNote"]>

  export type StudentNoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    lessonId?: boolean
    content?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["studentNote"]>

  export type StudentNoteSelectScalar = {
    id?: boolean
    userId?: boolean
    lessonId?: boolean
    content?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StudentNoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type StudentNoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $StudentNotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StudentNote"
    objects: {
      lesson: Prisma.$LessonPayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      lessonId: string
      content: string
      timestamp: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["studentNote"]>
    composites: {}
  }

  type StudentNoteGetPayload<S extends boolean | null | undefined | StudentNoteDefaultArgs> = $Result.GetResult<Prisma.$StudentNotePayload, S>

  type StudentNoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StudentNoteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StudentNoteCountAggregateInputType | true
    }

  export interface StudentNoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StudentNote'], meta: { name: 'StudentNote' } }
    /**
     * Find zero or one StudentNote that matches the filter.
     * @param {StudentNoteFindUniqueArgs} args - Arguments to find a StudentNote
     * @example
     * // Get one StudentNote
     * const studentNote = await prisma.studentNote.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StudentNoteFindUniqueArgs>(args: SelectSubset<T, StudentNoteFindUniqueArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one StudentNote that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StudentNoteFindUniqueOrThrowArgs} args - Arguments to find a StudentNote
     * @example
     * // Get one StudentNote
     * const studentNote = await prisma.studentNote.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StudentNoteFindUniqueOrThrowArgs>(args: SelectSubset<T, StudentNoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first StudentNote that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteFindFirstArgs} args - Arguments to find a StudentNote
     * @example
     * // Get one StudentNote
     * const studentNote = await prisma.studentNote.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StudentNoteFindFirstArgs>(args?: SelectSubset<T, StudentNoteFindFirstArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first StudentNote that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteFindFirstOrThrowArgs} args - Arguments to find a StudentNote
     * @example
     * // Get one StudentNote
     * const studentNote = await prisma.studentNote.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StudentNoteFindFirstOrThrowArgs>(args?: SelectSubset<T, StudentNoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more StudentNotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StudentNotes
     * const studentNotes = await prisma.studentNote.findMany()
     * 
     * // Get first 10 StudentNotes
     * const studentNotes = await prisma.studentNote.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const studentNoteWithIdOnly = await prisma.studentNote.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StudentNoteFindManyArgs>(args?: SelectSubset<T, StudentNoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a StudentNote.
     * @param {StudentNoteCreateArgs} args - Arguments to create a StudentNote.
     * @example
     * // Create one StudentNote
     * const StudentNote = await prisma.studentNote.create({
     *   data: {
     *     // ... data to create a StudentNote
     *   }
     * })
     * 
     */
    create<T extends StudentNoteCreateArgs>(args: SelectSubset<T, StudentNoteCreateArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many StudentNotes.
     * @param {StudentNoteCreateManyArgs} args - Arguments to create many StudentNotes.
     * @example
     * // Create many StudentNotes
     * const studentNote = await prisma.studentNote.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StudentNoteCreateManyArgs>(args?: SelectSubset<T, StudentNoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StudentNotes and returns the data saved in the database.
     * @param {StudentNoteCreateManyAndReturnArgs} args - Arguments to create many StudentNotes.
     * @example
     * // Create many StudentNotes
     * const studentNote = await prisma.studentNote.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StudentNotes and only return the `id`
     * const studentNoteWithIdOnly = await prisma.studentNote.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StudentNoteCreateManyAndReturnArgs>(args?: SelectSubset<T, StudentNoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a StudentNote.
     * @param {StudentNoteDeleteArgs} args - Arguments to delete one StudentNote.
     * @example
     * // Delete one StudentNote
     * const StudentNote = await prisma.studentNote.delete({
     *   where: {
     *     // ... filter to delete one StudentNote
     *   }
     * })
     * 
     */
    delete<T extends StudentNoteDeleteArgs>(args: SelectSubset<T, StudentNoteDeleteArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one StudentNote.
     * @param {StudentNoteUpdateArgs} args - Arguments to update one StudentNote.
     * @example
     * // Update one StudentNote
     * const studentNote = await prisma.studentNote.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StudentNoteUpdateArgs>(args: SelectSubset<T, StudentNoteUpdateArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more StudentNotes.
     * @param {StudentNoteDeleteManyArgs} args - Arguments to filter StudentNotes to delete.
     * @example
     * // Delete a few StudentNotes
     * const { count } = await prisma.studentNote.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StudentNoteDeleteManyArgs>(args?: SelectSubset<T, StudentNoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StudentNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StudentNotes
     * const studentNote = await prisma.studentNote.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StudentNoteUpdateManyArgs>(args: SelectSubset<T, StudentNoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StudentNote.
     * @param {StudentNoteUpsertArgs} args - Arguments to update or create a StudentNote.
     * @example
     * // Update or create a StudentNote
     * const studentNote = await prisma.studentNote.upsert({
     *   create: {
     *     // ... data to create a StudentNote
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StudentNote we want to update
     *   }
     * })
     */
    upsert<T extends StudentNoteUpsertArgs>(args: SelectSubset<T, StudentNoteUpsertArgs<ExtArgs>>): Prisma__StudentNoteClient<$Result.GetResult<Prisma.$StudentNotePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of StudentNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteCountArgs} args - Arguments to filter StudentNotes to count.
     * @example
     * // Count the number of StudentNotes
     * const count = await prisma.studentNote.count({
     *   where: {
     *     // ... the filter for the StudentNotes we want to count
     *   }
     * })
    **/
    count<T extends StudentNoteCountArgs>(
      args?: Subset<T, StudentNoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StudentNoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StudentNote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StudentNoteAggregateArgs>(args: Subset<T, StudentNoteAggregateArgs>): Prisma.PrismaPromise<GetStudentNoteAggregateType<T>>

    /**
     * Group by StudentNote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentNoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StudentNoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StudentNoteGroupByArgs['orderBy'] }
        : { orderBy?: StudentNoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StudentNoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentNoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StudentNote model
   */
  readonly fields: StudentNoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StudentNote.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StudentNoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lesson<T extends LessonDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LessonDefaultArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StudentNote model
   */ 
  interface StudentNoteFieldRefs {
    readonly id: FieldRef<"StudentNote", 'String'>
    readonly userId: FieldRef<"StudentNote", 'String'>
    readonly lessonId: FieldRef<"StudentNote", 'String'>
    readonly content: FieldRef<"StudentNote", 'String'>
    readonly timestamp: FieldRef<"StudentNote", 'Int'>
    readonly createdAt: FieldRef<"StudentNote", 'DateTime'>
    readonly updatedAt: FieldRef<"StudentNote", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StudentNote findUnique
   */
  export type StudentNoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter, which StudentNote to fetch.
     */
    where: StudentNoteWhereUniqueInput
  }

  /**
   * StudentNote findUniqueOrThrow
   */
  export type StudentNoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter, which StudentNote to fetch.
     */
    where: StudentNoteWhereUniqueInput
  }

  /**
   * StudentNote findFirst
   */
  export type StudentNoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter, which StudentNote to fetch.
     */
    where?: StudentNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudentNotes to fetch.
     */
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StudentNotes.
     */
    cursor?: StudentNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudentNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudentNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StudentNotes.
     */
    distinct?: StudentNoteScalarFieldEnum | StudentNoteScalarFieldEnum[]
  }

  /**
   * StudentNote findFirstOrThrow
   */
  export type StudentNoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter, which StudentNote to fetch.
     */
    where?: StudentNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudentNotes to fetch.
     */
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StudentNotes.
     */
    cursor?: StudentNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudentNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudentNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StudentNotes.
     */
    distinct?: StudentNoteScalarFieldEnum | StudentNoteScalarFieldEnum[]
  }

  /**
   * StudentNote findMany
   */
  export type StudentNoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter, which StudentNotes to fetch.
     */
    where?: StudentNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudentNotes to fetch.
     */
    orderBy?: StudentNoteOrderByWithRelationInput | StudentNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StudentNotes.
     */
    cursor?: StudentNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudentNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudentNotes.
     */
    skip?: number
    distinct?: StudentNoteScalarFieldEnum | StudentNoteScalarFieldEnum[]
  }

  /**
   * StudentNote create
   */
  export type StudentNoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * The data needed to create a StudentNote.
     */
    data: XOR<StudentNoteCreateInput, StudentNoteUncheckedCreateInput>
  }

  /**
   * StudentNote createMany
   */
  export type StudentNoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StudentNotes.
     */
    data: StudentNoteCreateManyInput | StudentNoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StudentNote createManyAndReturn
   */
  export type StudentNoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many StudentNotes.
     */
    data: StudentNoteCreateManyInput | StudentNoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StudentNote update
   */
  export type StudentNoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * The data needed to update a StudentNote.
     */
    data: XOR<StudentNoteUpdateInput, StudentNoteUncheckedUpdateInput>
    /**
     * Choose, which StudentNote to update.
     */
    where: StudentNoteWhereUniqueInput
  }

  /**
   * StudentNote updateMany
   */
  export type StudentNoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StudentNotes.
     */
    data: XOR<StudentNoteUpdateManyMutationInput, StudentNoteUncheckedUpdateManyInput>
    /**
     * Filter which StudentNotes to update
     */
    where?: StudentNoteWhereInput
  }

  /**
   * StudentNote upsert
   */
  export type StudentNoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * The filter to search for the StudentNote to update in case it exists.
     */
    where: StudentNoteWhereUniqueInput
    /**
     * In case the StudentNote found by the `where` argument doesn't exist, create a new StudentNote with this data.
     */
    create: XOR<StudentNoteCreateInput, StudentNoteUncheckedCreateInput>
    /**
     * In case the StudentNote was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StudentNoteUpdateInput, StudentNoteUncheckedUpdateInput>
  }

  /**
   * StudentNote delete
   */
  export type StudentNoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
    /**
     * Filter which StudentNote to delete.
     */
    where: StudentNoteWhereUniqueInput
  }

  /**
   * StudentNote deleteMany
   */
  export type StudentNoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StudentNotes to delete
     */
    where?: StudentNoteWhereInput
  }

  /**
   * StudentNote without action
   */
  export type StudentNoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudentNote
     */
    select?: StudentNoteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudentNoteInclude<ExtArgs> | null
  }


  /**
   * Model Discussion
   */

  export type AggregateDiscussion = {
    _count: DiscussionCountAggregateOutputType | null
    _avg: DiscussionAvgAggregateOutputType | null
    _sum: DiscussionSumAggregateOutputType | null
    _min: DiscussionMinAggregateOutputType | null
    _max: DiscussionMaxAggregateOutputType | null
  }

  export type DiscussionAvgAggregateOutputType = {
    likes: number | null
  }

  export type DiscussionSumAggregateOutputType = {
    likes: number | null
  }

  export type DiscussionMinAggregateOutputType = {
    id: string | null
    lessonId: string | null
    userId: string | null
    content: string | null
    parentId: string | null
    likes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DiscussionMaxAggregateOutputType = {
    id: string | null
    lessonId: string | null
    userId: string | null
    content: string | null
    parentId: string | null
    likes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DiscussionCountAggregateOutputType = {
    id: number
    lessonId: number
    userId: number
    content: number
    parentId: number
    likes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DiscussionAvgAggregateInputType = {
    likes?: true
  }

  export type DiscussionSumAggregateInputType = {
    likes?: true
  }

  export type DiscussionMinAggregateInputType = {
    id?: true
    lessonId?: true
    userId?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DiscussionMaxAggregateInputType = {
    id?: true
    lessonId?: true
    userId?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DiscussionCountAggregateInputType = {
    id?: true
    lessonId?: true
    userId?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DiscussionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discussion to aggregate.
     */
    where?: DiscussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discussions to fetch.
     */
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Discussions
    **/
    _count?: true | DiscussionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscussionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscussionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscussionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscussionMaxAggregateInputType
  }

  export type GetDiscussionAggregateType<T extends DiscussionAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscussion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscussion[P]>
      : GetScalarType<T[P], AggregateDiscussion[P]>
  }




  export type DiscussionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscussionWhereInput
    orderBy?: DiscussionOrderByWithAggregationInput | DiscussionOrderByWithAggregationInput[]
    by: DiscussionScalarFieldEnum[] | DiscussionScalarFieldEnum
    having?: DiscussionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscussionCountAggregateInputType | true
    _avg?: DiscussionAvgAggregateInputType
    _sum?: DiscussionSumAggregateInputType
    _min?: DiscussionMinAggregateInputType
    _max?: DiscussionMaxAggregateInputType
  }

  export type DiscussionGroupByOutputType = {
    id: string
    lessonId: string
    userId: string
    content: string
    parentId: string | null
    likes: number
    createdAt: Date
    updatedAt: Date
    _count: DiscussionCountAggregateOutputType | null
    _avg: DiscussionAvgAggregateOutputType | null
    _sum: DiscussionSumAggregateOutputType | null
    _min: DiscussionMinAggregateOutputType | null
    _max: DiscussionMaxAggregateOutputType | null
  }

  type GetDiscussionGroupByPayload<T extends DiscussionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscussionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscussionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscussionGroupByOutputType[P]>
            : GetScalarType<T[P], DiscussionGroupByOutputType[P]>
        }
      >
    >


  export type DiscussionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lessonId?: boolean
    userId?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    parent?: boolean | Discussion$parentArgs<ExtArgs>
    replies?: boolean | Discussion$repliesArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | DiscussionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discussion"]>

  export type DiscussionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lessonId?: boolean
    userId?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    parent?: boolean | Discussion$parentArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discussion"]>

  export type DiscussionSelectScalar = {
    id?: boolean
    lessonId?: boolean
    userId?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DiscussionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    parent?: boolean | Discussion$parentArgs<ExtArgs>
    replies?: boolean | Discussion$repliesArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | DiscussionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscussionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
    parent?: boolean | Discussion$parentArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $DiscussionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Discussion"
    objects: {
      lesson: Prisma.$LessonPayload<ExtArgs>
      parent: Prisma.$DiscussionPayload<ExtArgs> | null
      replies: Prisma.$DiscussionPayload<ExtArgs>[]
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      lessonId: string
      userId: string
      content: string
      parentId: string | null
      likes: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["discussion"]>
    composites: {}
  }

  type DiscussionGetPayload<S extends boolean | null | undefined | DiscussionDefaultArgs> = $Result.GetResult<Prisma.$DiscussionPayload, S>

  type DiscussionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DiscussionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DiscussionCountAggregateInputType | true
    }

  export interface DiscussionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Discussion'], meta: { name: 'Discussion' } }
    /**
     * Find zero or one Discussion that matches the filter.
     * @param {DiscussionFindUniqueArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscussionFindUniqueArgs>(args: SelectSubset<T, DiscussionFindUniqueArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Discussion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DiscussionFindUniqueOrThrowArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscussionFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscussionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Discussion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionFindFirstArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscussionFindFirstArgs>(args?: SelectSubset<T, DiscussionFindFirstArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Discussion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionFindFirstOrThrowArgs} args - Arguments to find a Discussion
     * @example
     * // Get one Discussion
     * const discussion = await prisma.discussion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscussionFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscussionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Discussions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discussions
     * const discussions = await prisma.discussion.findMany()
     * 
     * // Get first 10 Discussions
     * const discussions = await prisma.discussion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discussionWithIdOnly = await prisma.discussion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscussionFindManyArgs>(args?: SelectSubset<T, DiscussionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Discussion.
     * @param {DiscussionCreateArgs} args - Arguments to create a Discussion.
     * @example
     * // Create one Discussion
     * const Discussion = await prisma.discussion.create({
     *   data: {
     *     // ... data to create a Discussion
     *   }
     * })
     * 
     */
    create<T extends DiscussionCreateArgs>(args: SelectSubset<T, DiscussionCreateArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Discussions.
     * @param {DiscussionCreateManyArgs} args - Arguments to create many Discussions.
     * @example
     * // Create many Discussions
     * const discussion = await prisma.discussion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscussionCreateManyArgs>(args?: SelectSubset<T, DiscussionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discussions and returns the data saved in the database.
     * @param {DiscussionCreateManyAndReturnArgs} args - Arguments to create many Discussions.
     * @example
     * // Create many Discussions
     * const discussion = await prisma.discussion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discussions and only return the `id`
     * const discussionWithIdOnly = await prisma.discussion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscussionCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscussionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Discussion.
     * @param {DiscussionDeleteArgs} args - Arguments to delete one Discussion.
     * @example
     * // Delete one Discussion
     * const Discussion = await prisma.discussion.delete({
     *   where: {
     *     // ... filter to delete one Discussion
     *   }
     * })
     * 
     */
    delete<T extends DiscussionDeleteArgs>(args: SelectSubset<T, DiscussionDeleteArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Discussion.
     * @param {DiscussionUpdateArgs} args - Arguments to update one Discussion.
     * @example
     * // Update one Discussion
     * const discussion = await prisma.discussion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscussionUpdateArgs>(args: SelectSubset<T, DiscussionUpdateArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Discussions.
     * @param {DiscussionDeleteManyArgs} args - Arguments to filter Discussions to delete.
     * @example
     * // Delete a few Discussions
     * const { count } = await prisma.discussion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscussionDeleteManyArgs>(args?: SelectSubset<T, DiscussionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discussions
     * const discussion = await prisma.discussion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscussionUpdateManyArgs>(args: SelectSubset<T, DiscussionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Discussion.
     * @param {DiscussionUpsertArgs} args - Arguments to update or create a Discussion.
     * @example
     * // Update or create a Discussion
     * const discussion = await prisma.discussion.upsert({
     *   create: {
     *     // ... data to create a Discussion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discussion we want to update
     *   }
     * })
     */
    upsert<T extends DiscussionUpsertArgs>(args: SelectSubset<T, DiscussionUpsertArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Discussions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionCountArgs} args - Arguments to filter Discussions to count.
     * @example
     * // Count the number of Discussions
     * const count = await prisma.discussion.count({
     *   where: {
     *     // ... the filter for the Discussions we want to count
     *   }
     * })
    **/
    count<T extends DiscussionCountArgs>(
      args?: Subset<T, DiscussionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscussionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscussionAggregateArgs>(args: Subset<T, DiscussionAggregateArgs>): Prisma.PrismaPromise<GetDiscussionAggregateType<T>>

    /**
     * Group by Discussion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscussionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscussionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscussionGroupByArgs['orderBy'] }
        : { orderBy?: DiscussionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscussionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Discussion model
   */
  readonly fields: DiscussionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Discussion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscussionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lesson<T extends LessonDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LessonDefaultArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    parent<T extends Discussion$parentArgs<ExtArgs> = {}>(args?: Subset<T, Discussion$parentArgs<ExtArgs>>): Prisma__DiscussionClient<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    replies<T extends Discussion$repliesArgs<ExtArgs> = {}>(args?: Subset<T, Discussion$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Discussion model
   */ 
  interface DiscussionFieldRefs {
    readonly id: FieldRef<"Discussion", 'String'>
    readonly lessonId: FieldRef<"Discussion", 'String'>
    readonly userId: FieldRef<"Discussion", 'String'>
    readonly content: FieldRef<"Discussion", 'String'>
    readonly parentId: FieldRef<"Discussion", 'String'>
    readonly likes: FieldRef<"Discussion", 'Int'>
    readonly createdAt: FieldRef<"Discussion", 'DateTime'>
    readonly updatedAt: FieldRef<"Discussion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Discussion findUnique
   */
  export type DiscussionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter, which Discussion to fetch.
     */
    where: DiscussionWhereUniqueInput
  }

  /**
   * Discussion findUniqueOrThrow
   */
  export type DiscussionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter, which Discussion to fetch.
     */
    where: DiscussionWhereUniqueInput
  }

  /**
   * Discussion findFirst
   */
  export type DiscussionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter, which Discussion to fetch.
     */
    where?: DiscussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discussions to fetch.
     */
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discussions.
     */
    cursor?: DiscussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discussions.
     */
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Discussion findFirstOrThrow
   */
  export type DiscussionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter, which Discussion to fetch.
     */
    where?: DiscussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discussions to fetch.
     */
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discussions.
     */
    cursor?: DiscussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discussions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discussions.
     */
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Discussion findMany
   */
  export type DiscussionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter, which Discussions to fetch.
     */
    where?: DiscussionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discussions to fetch.
     */
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Discussions.
     */
    cursor?: DiscussionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discussions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discussions.
     */
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Discussion create
   */
  export type DiscussionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * The data needed to create a Discussion.
     */
    data: XOR<DiscussionCreateInput, DiscussionUncheckedCreateInput>
  }

  /**
   * Discussion createMany
   */
  export type DiscussionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Discussions.
     */
    data: DiscussionCreateManyInput | DiscussionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Discussion createManyAndReturn
   */
  export type DiscussionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Discussions.
     */
    data: DiscussionCreateManyInput | DiscussionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Discussion update
   */
  export type DiscussionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * The data needed to update a Discussion.
     */
    data: XOR<DiscussionUpdateInput, DiscussionUncheckedUpdateInput>
    /**
     * Choose, which Discussion to update.
     */
    where: DiscussionWhereUniqueInput
  }

  /**
   * Discussion updateMany
   */
  export type DiscussionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Discussions.
     */
    data: XOR<DiscussionUpdateManyMutationInput, DiscussionUncheckedUpdateManyInput>
    /**
     * Filter which Discussions to update
     */
    where?: DiscussionWhereInput
  }

  /**
   * Discussion upsert
   */
  export type DiscussionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * The filter to search for the Discussion to update in case it exists.
     */
    where: DiscussionWhereUniqueInput
    /**
     * In case the Discussion found by the `where` argument doesn't exist, create a new Discussion with this data.
     */
    create: XOR<DiscussionCreateInput, DiscussionUncheckedCreateInput>
    /**
     * In case the Discussion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscussionUpdateInput, DiscussionUncheckedUpdateInput>
  }

  /**
   * Discussion delete
   */
  export type DiscussionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    /**
     * Filter which Discussion to delete.
     */
    where: DiscussionWhereUniqueInput
  }

  /**
   * Discussion deleteMany
   */
  export type DiscussionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discussions to delete
     */
    where?: DiscussionWhereInput
  }

  /**
   * Discussion.parent
   */
  export type Discussion$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    where?: DiscussionWhereInput
  }

  /**
   * Discussion.replies
   */
  export type Discussion$repliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
    where?: DiscussionWhereInput
    orderBy?: DiscussionOrderByWithRelationInput | DiscussionOrderByWithRelationInput[]
    cursor?: DiscussionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscussionScalarFieldEnum | DiscussionScalarFieldEnum[]
  }

  /**
   * Discussion without action
   */
  export type DiscussionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discussion
     */
    select?: DiscussionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscussionInclude<ExtArgs> | null
  }


  /**
   * Model Entrepreneurship
   */

  export type AggregateEntrepreneurship = {
    _count: EntrepreneurshipCountAggregateOutputType | null
    _avg: EntrepreneurshipAvgAggregateOutputType | null
    _sum: EntrepreneurshipSumAggregateOutputType | null
    _min: EntrepreneurshipMinAggregateOutputType | null
    _max: EntrepreneurshipMaxAggregateOutputType | null
  }

  export type EntrepreneurshipAvgAggregateOutputType = {
    employees: number | null
    annualRevenue: Decimal | null
    viewsCount: number | null
    rating: Decimal | null
    reviewsCount: number | null
  }

  export type EntrepreneurshipSumAggregateOutputType = {
    employees: number | null
    annualRevenue: Decimal | null
    viewsCount: number | null
    rating: Decimal | null
    reviewsCount: number | null
  }

  export type EntrepreneurshipMinAggregateOutputType = {
    id: string | null
    ownerId: string | null
    name: string | null
    description: string | null
    category: string | null
    subcategory: string | null
    businessStage: $Enums.BusinessStage | null
    logo: string | null
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string | null
    department: string | null
    founded: Date | null
    employees: number | null
    annualRevenue: Decimal | null
    businessModel: string | null
    targetMarket: string | null
    isPublic: boolean | null
    isActive: boolean | null
    viewsCount: number | null
    rating: Decimal | null
    reviewsCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EntrepreneurshipMaxAggregateOutputType = {
    id: string | null
    ownerId: string | null
    name: string | null
    description: string | null
    category: string | null
    subcategory: string | null
    businessStage: $Enums.BusinessStage | null
    logo: string | null
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string | null
    department: string | null
    founded: Date | null
    employees: number | null
    annualRevenue: Decimal | null
    businessModel: string | null
    targetMarket: string | null
    isPublic: boolean | null
    isActive: boolean | null
    viewsCount: number | null
    rating: Decimal | null
    reviewsCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EntrepreneurshipCountAggregateOutputType = {
    id: number
    ownerId: number
    name: number
    description: number
    category: number
    subcategory: number
    businessStage: number
    logo: number
    images: number
    website: number
    email: number
    phone: number
    address: number
    municipality: number
    department: number
    socialMedia: number
    founded: number
    employees: number
    annualRevenue: number
    businessModel: number
    targetMarket: number
    isPublic: number
    isActive: number
    viewsCount: number
    rating: number
    reviewsCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EntrepreneurshipAvgAggregateInputType = {
    employees?: true
    annualRevenue?: true
    viewsCount?: true
    rating?: true
    reviewsCount?: true
  }

  export type EntrepreneurshipSumAggregateInputType = {
    employees?: true
    annualRevenue?: true
    viewsCount?: true
    rating?: true
    reviewsCount?: true
  }

  export type EntrepreneurshipMinAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    description?: true
    category?: true
    subcategory?: true
    businessStage?: true
    logo?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    founded?: true
    employees?: true
    annualRevenue?: true
    businessModel?: true
    targetMarket?: true
    isPublic?: true
    isActive?: true
    viewsCount?: true
    rating?: true
    reviewsCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EntrepreneurshipMaxAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    description?: true
    category?: true
    subcategory?: true
    businessStage?: true
    logo?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    founded?: true
    employees?: true
    annualRevenue?: true
    businessModel?: true
    targetMarket?: true
    isPublic?: true
    isActive?: true
    viewsCount?: true
    rating?: true
    reviewsCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EntrepreneurshipCountAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    description?: true
    category?: true
    subcategory?: true
    businessStage?: true
    logo?: true
    images?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    municipality?: true
    department?: true
    socialMedia?: true
    founded?: true
    employees?: true
    annualRevenue?: true
    businessModel?: true
    targetMarket?: true
    isPublic?: true
    isActive?: true
    viewsCount?: true
    rating?: true
    reviewsCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EntrepreneurshipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Entrepreneurship to aggregate.
     */
    where?: EntrepreneurshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entrepreneurships to fetch.
     */
    orderBy?: EntrepreneurshipOrderByWithRelationInput | EntrepreneurshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EntrepreneurshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entrepreneurships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entrepreneurships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Entrepreneurships
    **/
    _count?: true | EntrepreneurshipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntrepreneurshipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntrepreneurshipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntrepreneurshipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntrepreneurshipMaxAggregateInputType
  }

  export type GetEntrepreneurshipAggregateType<T extends EntrepreneurshipAggregateArgs> = {
        [P in keyof T & keyof AggregateEntrepreneurship]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntrepreneurship[P]>
      : GetScalarType<T[P], AggregateEntrepreneurship[P]>
  }




  export type EntrepreneurshipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntrepreneurshipWhereInput
    orderBy?: EntrepreneurshipOrderByWithAggregationInput | EntrepreneurshipOrderByWithAggregationInput[]
    by: EntrepreneurshipScalarFieldEnum[] | EntrepreneurshipScalarFieldEnum
    having?: EntrepreneurshipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntrepreneurshipCountAggregateInputType | true
    _avg?: EntrepreneurshipAvgAggregateInputType
    _sum?: EntrepreneurshipSumAggregateInputType
    _min?: EntrepreneurshipMinAggregateInputType
    _max?: EntrepreneurshipMaxAggregateInputType
  }

  export type EntrepreneurshipGroupByOutputType = {
    id: string
    ownerId: string
    name: string
    description: string
    category: string
    subcategory: string | null
    businessStage: $Enums.BusinessStage
    logo: string | null
    images: string[]
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    municipality: string
    department: string
    socialMedia: JsonValue | null
    founded: Date | null
    employees: number | null
    annualRevenue: Decimal | null
    businessModel: string | null
    targetMarket: string | null
    isPublic: boolean
    isActive: boolean
    viewsCount: number
    rating: Decimal | null
    reviewsCount: number
    createdAt: Date
    updatedAt: Date
    _count: EntrepreneurshipCountAggregateOutputType | null
    _avg: EntrepreneurshipAvgAggregateOutputType | null
    _sum: EntrepreneurshipSumAggregateOutputType | null
    _min: EntrepreneurshipMinAggregateOutputType | null
    _max: EntrepreneurshipMaxAggregateOutputType | null
  }

  type GetEntrepreneurshipGroupByPayload<T extends EntrepreneurshipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntrepreneurshipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntrepreneurshipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntrepreneurshipGroupByOutputType[P]>
            : GetScalarType<T[P], EntrepreneurshipGroupByOutputType[P]>
        }
      >
    >


  export type EntrepreneurshipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    subcategory?: boolean
    businessStage?: boolean
    logo?: boolean
    images?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    socialMedia?: boolean
    founded?: boolean
    employees?: boolean
    annualRevenue?: boolean
    businessModel?: boolean
    targetMarket?: boolean
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: boolean
    rating?: boolean
    reviewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessPlan?: boolean | Entrepreneurship$businessPlanArgs<ExtArgs>
    owner?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entrepreneurship"]>

  export type EntrepreneurshipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    subcategory?: boolean
    businessStage?: boolean
    logo?: boolean
    images?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    socialMedia?: boolean
    founded?: boolean
    employees?: boolean
    annualRevenue?: boolean
    businessModel?: boolean
    targetMarket?: boolean
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: boolean
    rating?: boolean
    reviewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    owner?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entrepreneurship"]>

  export type EntrepreneurshipSelectScalar = {
    id?: boolean
    ownerId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    subcategory?: boolean
    businessStage?: boolean
    logo?: boolean
    images?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    municipality?: boolean
    department?: boolean
    socialMedia?: boolean
    founded?: boolean
    employees?: boolean
    annualRevenue?: boolean
    businessModel?: boolean
    targetMarket?: boolean
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: boolean
    rating?: boolean
    reviewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EntrepreneurshipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessPlan?: boolean | Entrepreneurship$businessPlanArgs<ExtArgs>
    owner?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type EntrepreneurshipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $EntrepreneurshipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Entrepreneurship"
    objects: {
      businessPlan: Prisma.$BusinessPlanPayload<ExtArgs> | null
      owner: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ownerId: string
      name: string
      description: string
      category: string
      subcategory: string | null
      businessStage: $Enums.BusinessStage
      logo: string | null
      images: string[]
      website: string | null
      email: string | null
      phone: string | null
      address: string | null
      municipality: string
      department: string
      socialMedia: Prisma.JsonValue | null
      founded: Date | null
      employees: number | null
      annualRevenue: Prisma.Decimal | null
      businessModel: string | null
      targetMarket: string | null
      isPublic: boolean
      isActive: boolean
      viewsCount: number
      rating: Prisma.Decimal | null
      reviewsCount: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["entrepreneurship"]>
    composites: {}
  }

  type EntrepreneurshipGetPayload<S extends boolean | null | undefined | EntrepreneurshipDefaultArgs> = $Result.GetResult<Prisma.$EntrepreneurshipPayload, S>

  type EntrepreneurshipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EntrepreneurshipFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EntrepreneurshipCountAggregateInputType | true
    }

  export interface EntrepreneurshipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Entrepreneurship'], meta: { name: 'Entrepreneurship' } }
    /**
     * Find zero or one Entrepreneurship that matches the filter.
     * @param {EntrepreneurshipFindUniqueArgs} args - Arguments to find a Entrepreneurship
     * @example
     * // Get one Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EntrepreneurshipFindUniqueArgs>(args: SelectSubset<T, EntrepreneurshipFindUniqueArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Entrepreneurship that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EntrepreneurshipFindUniqueOrThrowArgs} args - Arguments to find a Entrepreneurship
     * @example
     * // Get one Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EntrepreneurshipFindUniqueOrThrowArgs>(args: SelectSubset<T, EntrepreneurshipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Entrepreneurship that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipFindFirstArgs} args - Arguments to find a Entrepreneurship
     * @example
     * // Get one Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EntrepreneurshipFindFirstArgs>(args?: SelectSubset<T, EntrepreneurshipFindFirstArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Entrepreneurship that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipFindFirstOrThrowArgs} args - Arguments to find a Entrepreneurship
     * @example
     * // Get one Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EntrepreneurshipFindFirstOrThrowArgs>(args?: SelectSubset<T, EntrepreneurshipFindFirstOrThrowArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Entrepreneurships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entrepreneurships
     * const entrepreneurships = await prisma.entrepreneurship.findMany()
     * 
     * // Get first 10 Entrepreneurships
     * const entrepreneurships = await prisma.entrepreneurship.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entrepreneurshipWithIdOnly = await prisma.entrepreneurship.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EntrepreneurshipFindManyArgs>(args?: SelectSubset<T, EntrepreneurshipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Entrepreneurship.
     * @param {EntrepreneurshipCreateArgs} args - Arguments to create a Entrepreneurship.
     * @example
     * // Create one Entrepreneurship
     * const Entrepreneurship = await prisma.entrepreneurship.create({
     *   data: {
     *     // ... data to create a Entrepreneurship
     *   }
     * })
     * 
     */
    create<T extends EntrepreneurshipCreateArgs>(args: SelectSubset<T, EntrepreneurshipCreateArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Entrepreneurships.
     * @param {EntrepreneurshipCreateManyArgs} args - Arguments to create many Entrepreneurships.
     * @example
     * // Create many Entrepreneurships
     * const entrepreneurship = await prisma.entrepreneurship.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EntrepreneurshipCreateManyArgs>(args?: SelectSubset<T, EntrepreneurshipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Entrepreneurships and returns the data saved in the database.
     * @param {EntrepreneurshipCreateManyAndReturnArgs} args - Arguments to create many Entrepreneurships.
     * @example
     * // Create many Entrepreneurships
     * const entrepreneurship = await prisma.entrepreneurship.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Entrepreneurships and only return the `id`
     * const entrepreneurshipWithIdOnly = await prisma.entrepreneurship.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EntrepreneurshipCreateManyAndReturnArgs>(args?: SelectSubset<T, EntrepreneurshipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Entrepreneurship.
     * @param {EntrepreneurshipDeleteArgs} args - Arguments to delete one Entrepreneurship.
     * @example
     * // Delete one Entrepreneurship
     * const Entrepreneurship = await prisma.entrepreneurship.delete({
     *   where: {
     *     // ... filter to delete one Entrepreneurship
     *   }
     * })
     * 
     */
    delete<T extends EntrepreneurshipDeleteArgs>(args: SelectSubset<T, EntrepreneurshipDeleteArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Entrepreneurship.
     * @param {EntrepreneurshipUpdateArgs} args - Arguments to update one Entrepreneurship.
     * @example
     * // Update one Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EntrepreneurshipUpdateArgs>(args: SelectSubset<T, EntrepreneurshipUpdateArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Entrepreneurships.
     * @param {EntrepreneurshipDeleteManyArgs} args - Arguments to filter Entrepreneurships to delete.
     * @example
     * // Delete a few Entrepreneurships
     * const { count } = await prisma.entrepreneurship.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EntrepreneurshipDeleteManyArgs>(args?: SelectSubset<T, EntrepreneurshipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entrepreneurships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entrepreneurships
     * const entrepreneurship = await prisma.entrepreneurship.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EntrepreneurshipUpdateManyArgs>(args: SelectSubset<T, EntrepreneurshipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entrepreneurship.
     * @param {EntrepreneurshipUpsertArgs} args - Arguments to update or create a Entrepreneurship.
     * @example
     * // Update or create a Entrepreneurship
     * const entrepreneurship = await prisma.entrepreneurship.upsert({
     *   create: {
     *     // ... data to create a Entrepreneurship
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entrepreneurship we want to update
     *   }
     * })
     */
    upsert<T extends EntrepreneurshipUpsertArgs>(args: SelectSubset<T, EntrepreneurshipUpsertArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Entrepreneurships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipCountArgs} args - Arguments to filter Entrepreneurships to count.
     * @example
     * // Count the number of Entrepreneurships
     * const count = await prisma.entrepreneurship.count({
     *   where: {
     *     // ... the filter for the Entrepreneurships we want to count
     *   }
     * })
    **/
    count<T extends EntrepreneurshipCountArgs>(
      args?: Subset<T, EntrepreneurshipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntrepreneurshipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entrepreneurship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntrepreneurshipAggregateArgs>(args: Subset<T, EntrepreneurshipAggregateArgs>): Prisma.PrismaPromise<GetEntrepreneurshipAggregateType<T>>

    /**
     * Group by Entrepreneurship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntrepreneurshipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EntrepreneurshipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EntrepreneurshipGroupByArgs['orderBy'] }
        : { orderBy?: EntrepreneurshipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EntrepreneurshipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntrepreneurshipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Entrepreneurship model
   */
  readonly fields: EntrepreneurshipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Entrepreneurship.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EntrepreneurshipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businessPlan<T extends Entrepreneurship$businessPlanArgs<ExtArgs> = {}>(args?: Subset<T, Entrepreneurship$businessPlanArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    owner<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Entrepreneurship model
   */ 
  interface EntrepreneurshipFieldRefs {
    readonly id: FieldRef<"Entrepreneurship", 'String'>
    readonly ownerId: FieldRef<"Entrepreneurship", 'String'>
    readonly name: FieldRef<"Entrepreneurship", 'String'>
    readonly description: FieldRef<"Entrepreneurship", 'String'>
    readonly category: FieldRef<"Entrepreneurship", 'String'>
    readonly subcategory: FieldRef<"Entrepreneurship", 'String'>
    readonly businessStage: FieldRef<"Entrepreneurship", 'BusinessStage'>
    readonly logo: FieldRef<"Entrepreneurship", 'String'>
    readonly images: FieldRef<"Entrepreneurship", 'String[]'>
    readonly website: FieldRef<"Entrepreneurship", 'String'>
    readonly email: FieldRef<"Entrepreneurship", 'String'>
    readonly phone: FieldRef<"Entrepreneurship", 'String'>
    readonly address: FieldRef<"Entrepreneurship", 'String'>
    readonly municipality: FieldRef<"Entrepreneurship", 'String'>
    readonly department: FieldRef<"Entrepreneurship", 'String'>
    readonly socialMedia: FieldRef<"Entrepreneurship", 'Json'>
    readonly founded: FieldRef<"Entrepreneurship", 'DateTime'>
    readonly employees: FieldRef<"Entrepreneurship", 'Int'>
    readonly annualRevenue: FieldRef<"Entrepreneurship", 'Decimal'>
    readonly businessModel: FieldRef<"Entrepreneurship", 'String'>
    readonly targetMarket: FieldRef<"Entrepreneurship", 'String'>
    readonly isPublic: FieldRef<"Entrepreneurship", 'Boolean'>
    readonly isActive: FieldRef<"Entrepreneurship", 'Boolean'>
    readonly viewsCount: FieldRef<"Entrepreneurship", 'Int'>
    readonly rating: FieldRef<"Entrepreneurship", 'Decimal'>
    readonly reviewsCount: FieldRef<"Entrepreneurship", 'Int'>
    readonly createdAt: FieldRef<"Entrepreneurship", 'DateTime'>
    readonly updatedAt: FieldRef<"Entrepreneurship", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Entrepreneurship findUnique
   */
  export type EntrepreneurshipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter, which Entrepreneurship to fetch.
     */
    where: EntrepreneurshipWhereUniqueInput
  }

  /**
   * Entrepreneurship findUniqueOrThrow
   */
  export type EntrepreneurshipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter, which Entrepreneurship to fetch.
     */
    where: EntrepreneurshipWhereUniqueInput
  }

  /**
   * Entrepreneurship findFirst
   */
  export type EntrepreneurshipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter, which Entrepreneurship to fetch.
     */
    where?: EntrepreneurshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entrepreneurships to fetch.
     */
    orderBy?: EntrepreneurshipOrderByWithRelationInput | EntrepreneurshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Entrepreneurships.
     */
    cursor?: EntrepreneurshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entrepreneurships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entrepreneurships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Entrepreneurships.
     */
    distinct?: EntrepreneurshipScalarFieldEnum | EntrepreneurshipScalarFieldEnum[]
  }

  /**
   * Entrepreneurship findFirstOrThrow
   */
  export type EntrepreneurshipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter, which Entrepreneurship to fetch.
     */
    where?: EntrepreneurshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entrepreneurships to fetch.
     */
    orderBy?: EntrepreneurshipOrderByWithRelationInput | EntrepreneurshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Entrepreneurships.
     */
    cursor?: EntrepreneurshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entrepreneurships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entrepreneurships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Entrepreneurships.
     */
    distinct?: EntrepreneurshipScalarFieldEnum | EntrepreneurshipScalarFieldEnum[]
  }

  /**
   * Entrepreneurship findMany
   */
  export type EntrepreneurshipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter, which Entrepreneurships to fetch.
     */
    where?: EntrepreneurshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Entrepreneurships to fetch.
     */
    orderBy?: EntrepreneurshipOrderByWithRelationInput | EntrepreneurshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Entrepreneurships.
     */
    cursor?: EntrepreneurshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Entrepreneurships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Entrepreneurships.
     */
    skip?: number
    distinct?: EntrepreneurshipScalarFieldEnum | EntrepreneurshipScalarFieldEnum[]
  }

  /**
   * Entrepreneurship create
   */
  export type EntrepreneurshipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * The data needed to create a Entrepreneurship.
     */
    data: XOR<EntrepreneurshipCreateInput, EntrepreneurshipUncheckedCreateInput>
  }

  /**
   * Entrepreneurship createMany
   */
  export type EntrepreneurshipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Entrepreneurships.
     */
    data: EntrepreneurshipCreateManyInput | EntrepreneurshipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Entrepreneurship createManyAndReturn
   */
  export type EntrepreneurshipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Entrepreneurships.
     */
    data: EntrepreneurshipCreateManyInput | EntrepreneurshipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Entrepreneurship update
   */
  export type EntrepreneurshipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * The data needed to update a Entrepreneurship.
     */
    data: XOR<EntrepreneurshipUpdateInput, EntrepreneurshipUncheckedUpdateInput>
    /**
     * Choose, which Entrepreneurship to update.
     */
    where: EntrepreneurshipWhereUniqueInput
  }

  /**
   * Entrepreneurship updateMany
   */
  export type EntrepreneurshipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Entrepreneurships.
     */
    data: XOR<EntrepreneurshipUpdateManyMutationInput, EntrepreneurshipUncheckedUpdateManyInput>
    /**
     * Filter which Entrepreneurships to update
     */
    where?: EntrepreneurshipWhereInput
  }

  /**
   * Entrepreneurship upsert
   */
  export type EntrepreneurshipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * The filter to search for the Entrepreneurship to update in case it exists.
     */
    where: EntrepreneurshipWhereUniqueInput
    /**
     * In case the Entrepreneurship found by the `where` argument doesn't exist, create a new Entrepreneurship with this data.
     */
    create: XOR<EntrepreneurshipCreateInput, EntrepreneurshipUncheckedCreateInput>
    /**
     * In case the Entrepreneurship was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EntrepreneurshipUpdateInput, EntrepreneurshipUncheckedUpdateInput>
  }

  /**
   * Entrepreneurship delete
   */
  export type EntrepreneurshipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
    /**
     * Filter which Entrepreneurship to delete.
     */
    where: EntrepreneurshipWhereUniqueInput
  }

  /**
   * Entrepreneurship deleteMany
   */
  export type EntrepreneurshipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Entrepreneurships to delete
     */
    where?: EntrepreneurshipWhereInput
  }

  /**
   * Entrepreneurship.businessPlan
   */
  export type Entrepreneurship$businessPlanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    where?: BusinessPlanWhereInput
  }

  /**
   * Entrepreneurship without action
   */
  export type EntrepreneurshipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Entrepreneurship
     */
    select?: EntrepreneurshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntrepreneurshipInclude<ExtArgs> | null
  }


  /**
   * Model BusinessPlan
   */

  export type AggregateBusinessPlan = {
    _count: BusinessPlanCountAggregateOutputType | null
    _avg: BusinessPlanAvgAggregateOutputType | null
    _sum: BusinessPlanSumAggregateOutputType | null
    _min: BusinessPlanMinAggregateOutputType | null
    _max: BusinessPlanMaxAggregateOutputType | null
  }

  export type BusinessPlanAvgAggregateOutputType = {
    initialInvestment: Decimal | null
    monthlyExpenses: Decimal | null
    breakEvenPoint: number | null
    roi: Decimal | null
    completionPercentage: number | null
  }

  export type BusinessPlanSumAggregateOutputType = {
    initialInvestment: Decimal | null
    monthlyExpenses: Decimal | null
    breakEvenPoint: number | null
    roi: Decimal | null
    completionPercentage: number | null
  }

  export type BusinessPlanMinAggregateOutputType = {
    id: string | null
    entrepreneurshipId: string | null
    executiveSummary: string | null
    missionStatement: string | null
    visionStatement: string | null
    marketAnalysis: string | null
    targetMarket: string | null
    competitiveAnalysis: string | null
    marketingStrategy: string | null
    pricingStrategy: string | null
    salesStrategy: string | null
    initialInvestment: Decimal | null
    monthlyExpenses: Decimal | null
    breakEvenPoint: number | null
    roi: Decimal | null
    riskAnalysis: string | null
    operationalPlan: string | null
    isCompleted: boolean | null
    lastSection: string | null
    completionPercentage: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPlanMaxAggregateOutputType = {
    id: string | null
    entrepreneurshipId: string | null
    executiveSummary: string | null
    missionStatement: string | null
    visionStatement: string | null
    marketAnalysis: string | null
    targetMarket: string | null
    competitiveAnalysis: string | null
    marketingStrategy: string | null
    pricingStrategy: string | null
    salesStrategy: string | null
    initialInvestment: Decimal | null
    monthlyExpenses: Decimal | null
    breakEvenPoint: number | null
    roi: Decimal | null
    riskAnalysis: string | null
    operationalPlan: string | null
    isCompleted: boolean | null
    lastSection: string | null
    completionPercentage: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessPlanCountAggregateOutputType = {
    id: number
    entrepreneurshipId: number
    executiveSummary: number
    missionStatement: number
    visionStatement: number
    marketAnalysis: number
    targetMarket: number
    competitiveAnalysis: number
    businessModelCanvas: number
    revenueStreams: number
    costStructure: number
    marketingStrategy: number
    pricingStrategy: number
    salesStrategy: number
    initialInvestment: number
    monthlyExpenses: number
    revenueProjection: number
    breakEvenPoint: number
    roi: number
    riskAnalysis: number
    mitigationStrategies: number
    operationalPlan: number
    managementTeam: number
    tripleImpactAssessment: number
    isCompleted: number
    lastSection: number
    completionPercentage: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessPlanAvgAggregateInputType = {
    initialInvestment?: true
    monthlyExpenses?: true
    breakEvenPoint?: true
    roi?: true
    completionPercentage?: true
  }

  export type BusinessPlanSumAggregateInputType = {
    initialInvestment?: true
    monthlyExpenses?: true
    breakEvenPoint?: true
    roi?: true
    completionPercentage?: true
  }

  export type BusinessPlanMinAggregateInputType = {
    id?: true
    entrepreneurshipId?: true
    executiveSummary?: true
    missionStatement?: true
    visionStatement?: true
    marketAnalysis?: true
    targetMarket?: true
    competitiveAnalysis?: true
    marketingStrategy?: true
    pricingStrategy?: true
    salesStrategy?: true
    initialInvestment?: true
    monthlyExpenses?: true
    breakEvenPoint?: true
    roi?: true
    riskAnalysis?: true
    operationalPlan?: true
    isCompleted?: true
    lastSection?: true
    completionPercentage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPlanMaxAggregateInputType = {
    id?: true
    entrepreneurshipId?: true
    executiveSummary?: true
    missionStatement?: true
    visionStatement?: true
    marketAnalysis?: true
    targetMarket?: true
    competitiveAnalysis?: true
    marketingStrategy?: true
    pricingStrategy?: true
    salesStrategy?: true
    initialInvestment?: true
    monthlyExpenses?: true
    breakEvenPoint?: true
    roi?: true
    riskAnalysis?: true
    operationalPlan?: true
    isCompleted?: true
    lastSection?: true
    completionPercentage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessPlanCountAggregateInputType = {
    id?: true
    entrepreneurshipId?: true
    executiveSummary?: true
    missionStatement?: true
    visionStatement?: true
    marketAnalysis?: true
    targetMarket?: true
    competitiveAnalysis?: true
    businessModelCanvas?: true
    revenueStreams?: true
    costStructure?: true
    marketingStrategy?: true
    pricingStrategy?: true
    salesStrategy?: true
    initialInvestment?: true
    monthlyExpenses?: true
    revenueProjection?: true
    breakEvenPoint?: true
    roi?: true
    riskAnalysis?: true
    mitigationStrategies?: true
    operationalPlan?: true
    managementTeam?: true
    tripleImpactAssessment?: true
    isCompleted?: true
    lastSection?: true
    completionPercentage?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessPlanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPlan to aggregate.
     */
    where?: BusinessPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPlans to fetch.
     */
    orderBy?: BusinessPlanOrderByWithRelationInput | BusinessPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessPlans
    **/
    _count?: true | BusinessPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BusinessPlanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BusinessPlanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessPlanMaxAggregateInputType
  }

  export type GetBusinessPlanAggregateType<T extends BusinessPlanAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessPlan[P]>
      : GetScalarType<T[P], AggregateBusinessPlan[P]>
  }




  export type BusinessPlanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessPlanWhereInput
    orderBy?: BusinessPlanOrderByWithAggregationInput | BusinessPlanOrderByWithAggregationInput[]
    by: BusinessPlanScalarFieldEnum[] | BusinessPlanScalarFieldEnum
    having?: BusinessPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessPlanCountAggregateInputType | true
    _avg?: BusinessPlanAvgAggregateInputType
    _sum?: BusinessPlanSumAggregateInputType
    _min?: BusinessPlanMinAggregateInputType
    _max?: BusinessPlanMaxAggregateInputType
  }

  export type BusinessPlanGroupByOutputType = {
    id: string
    entrepreneurshipId: string
    executiveSummary: string | null
    missionStatement: string | null
    visionStatement: string | null
    marketAnalysis: string | null
    targetMarket: string | null
    competitiveAnalysis: string | null
    businessModelCanvas: JsonValue | null
    revenueStreams: string[]
    costStructure: JsonValue | null
    marketingStrategy: string | null
    pricingStrategy: string | null
    salesStrategy: string | null
    initialInvestment: Decimal | null
    monthlyExpenses: Decimal | null
    revenueProjection: JsonValue | null
    breakEvenPoint: number | null
    roi: Decimal | null
    riskAnalysis: string | null
    mitigationStrategies: string[]
    operationalPlan: string | null
    managementTeam: JsonValue | null
    tripleImpactAssessment: JsonValue | null
    isCompleted: boolean
    lastSection: string | null
    completionPercentage: number
    createdAt: Date
    updatedAt: Date
    _count: BusinessPlanCountAggregateOutputType | null
    _avg: BusinessPlanAvgAggregateOutputType | null
    _sum: BusinessPlanSumAggregateOutputType | null
    _min: BusinessPlanMinAggregateOutputType | null
    _max: BusinessPlanMaxAggregateOutputType | null
  }

  type GetBusinessPlanGroupByPayload<T extends BusinessPlanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessPlanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessPlanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessPlanGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessPlanGroupByOutputType[P]>
        }
      >
    >


  export type BusinessPlanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entrepreneurshipId?: boolean
    executiveSummary?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    marketAnalysis?: boolean
    targetMarket?: boolean
    competitiveAnalysis?: boolean
    businessModelCanvas?: boolean
    revenueStreams?: boolean
    costStructure?: boolean
    marketingStrategy?: boolean
    pricingStrategy?: boolean
    salesStrategy?: boolean
    initialInvestment?: boolean
    monthlyExpenses?: boolean
    revenueProjection?: boolean
    breakEvenPoint?: boolean
    roi?: boolean
    riskAnalysis?: boolean
    mitigationStrategies?: boolean
    operationalPlan?: boolean
    managementTeam?: boolean
    tripleImpactAssessment?: boolean
    isCompleted?: boolean
    lastSection?: boolean
    completionPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    entrepreneurship?: boolean | EntrepreneurshipDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPlan"]>

  export type BusinessPlanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entrepreneurshipId?: boolean
    executiveSummary?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    marketAnalysis?: boolean
    targetMarket?: boolean
    competitiveAnalysis?: boolean
    businessModelCanvas?: boolean
    revenueStreams?: boolean
    costStructure?: boolean
    marketingStrategy?: boolean
    pricingStrategy?: boolean
    salesStrategy?: boolean
    initialInvestment?: boolean
    monthlyExpenses?: boolean
    revenueProjection?: boolean
    breakEvenPoint?: boolean
    roi?: boolean
    riskAnalysis?: boolean
    mitigationStrategies?: boolean
    operationalPlan?: boolean
    managementTeam?: boolean
    tripleImpactAssessment?: boolean
    isCompleted?: boolean
    lastSection?: boolean
    completionPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    entrepreneurship?: boolean | EntrepreneurshipDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessPlan"]>

  export type BusinessPlanSelectScalar = {
    id?: boolean
    entrepreneurshipId?: boolean
    executiveSummary?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    marketAnalysis?: boolean
    targetMarket?: boolean
    competitiveAnalysis?: boolean
    businessModelCanvas?: boolean
    revenueStreams?: boolean
    costStructure?: boolean
    marketingStrategy?: boolean
    pricingStrategy?: boolean
    salesStrategy?: boolean
    initialInvestment?: boolean
    monthlyExpenses?: boolean
    revenueProjection?: boolean
    breakEvenPoint?: boolean
    roi?: boolean
    riskAnalysis?: boolean
    mitigationStrategies?: boolean
    operationalPlan?: boolean
    managementTeam?: boolean
    tripleImpactAssessment?: boolean
    isCompleted?: boolean
    lastSection?: boolean
    completionPercentage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessPlanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entrepreneurship?: boolean | EntrepreneurshipDefaultArgs<ExtArgs>
  }
  export type BusinessPlanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entrepreneurship?: boolean | EntrepreneurshipDefaultArgs<ExtArgs>
  }

  export type $BusinessPlanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessPlan"
    objects: {
      entrepreneurship: Prisma.$EntrepreneurshipPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      entrepreneurshipId: string
      executiveSummary: string | null
      missionStatement: string | null
      visionStatement: string | null
      marketAnalysis: string | null
      targetMarket: string | null
      competitiveAnalysis: string | null
      businessModelCanvas: Prisma.JsonValue | null
      revenueStreams: string[]
      costStructure: Prisma.JsonValue | null
      marketingStrategy: string | null
      pricingStrategy: string | null
      salesStrategy: string | null
      initialInvestment: Prisma.Decimal | null
      monthlyExpenses: Prisma.Decimal | null
      revenueProjection: Prisma.JsonValue | null
      breakEvenPoint: number | null
      roi: Prisma.Decimal | null
      riskAnalysis: string | null
      mitigationStrategies: string[]
      operationalPlan: string | null
      managementTeam: Prisma.JsonValue | null
      tripleImpactAssessment: Prisma.JsonValue | null
      isCompleted: boolean
      lastSection: string | null
      completionPercentage: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessPlan"]>
    composites: {}
  }

  type BusinessPlanGetPayload<S extends boolean | null | undefined | BusinessPlanDefaultArgs> = $Result.GetResult<Prisma.$BusinessPlanPayload, S>

  type BusinessPlanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BusinessPlanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BusinessPlanCountAggregateInputType | true
    }

  export interface BusinessPlanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessPlan'], meta: { name: 'BusinessPlan' } }
    /**
     * Find zero or one BusinessPlan that matches the filter.
     * @param {BusinessPlanFindUniqueArgs} args - Arguments to find a BusinessPlan
     * @example
     * // Get one BusinessPlan
     * const businessPlan = await prisma.businessPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessPlanFindUniqueArgs>(args: SelectSubset<T, BusinessPlanFindUniqueArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BusinessPlan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BusinessPlanFindUniqueOrThrowArgs} args - Arguments to find a BusinessPlan
     * @example
     * // Get one BusinessPlan
     * const businessPlan = await prisma.businessPlan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessPlanFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessPlanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BusinessPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanFindFirstArgs} args - Arguments to find a BusinessPlan
     * @example
     * // Get one BusinessPlan
     * const businessPlan = await prisma.businessPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessPlanFindFirstArgs>(args?: SelectSubset<T, BusinessPlanFindFirstArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BusinessPlan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanFindFirstOrThrowArgs} args - Arguments to find a BusinessPlan
     * @example
     * // Get one BusinessPlan
     * const businessPlan = await prisma.businessPlan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessPlanFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessPlanFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BusinessPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessPlans
     * const businessPlans = await prisma.businessPlan.findMany()
     * 
     * // Get first 10 BusinessPlans
     * const businessPlans = await prisma.businessPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessPlanWithIdOnly = await prisma.businessPlan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessPlanFindManyArgs>(args?: SelectSubset<T, BusinessPlanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BusinessPlan.
     * @param {BusinessPlanCreateArgs} args - Arguments to create a BusinessPlan.
     * @example
     * // Create one BusinessPlan
     * const BusinessPlan = await prisma.businessPlan.create({
     *   data: {
     *     // ... data to create a BusinessPlan
     *   }
     * })
     * 
     */
    create<T extends BusinessPlanCreateArgs>(args: SelectSubset<T, BusinessPlanCreateArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BusinessPlans.
     * @param {BusinessPlanCreateManyArgs} args - Arguments to create many BusinessPlans.
     * @example
     * // Create many BusinessPlans
     * const businessPlan = await prisma.businessPlan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessPlanCreateManyArgs>(args?: SelectSubset<T, BusinessPlanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessPlans and returns the data saved in the database.
     * @param {BusinessPlanCreateManyAndReturnArgs} args - Arguments to create many BusinessPlans.
     * @example
     * // Create many BusinessPlans
     * const businessPlan = await prisma.businessPlan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessPlans and only return the `id`
     * const businessPlanWithIdOnly = await prisma.businessPlan.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessPlanCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessPlanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BusinessPlan.
     * @param {BusinessPlanDeleteArgs} args - Arguments to delete one BusinessPlan.
     * @example
     * // Delete one BusinessPlan
     * const BusinessPlan = await prisma.businessPlan.delete({
     *   where: {
     *     // ... filter to delete one BusinessPlan
     *   }
     * })
     * 
     */
    delete<T extends BusinessPlanDeleteArgs>(args: SelectSubset<T, BusinessPlanDeleteArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BusinessPlan.
     * @param {BusinessPlanUpdateArgs} args - Arguments to update one BusinessPlan.
     * @example
     * // Update one BusinessPlan
     * const businessPlan = await prisma.businessPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessPlanUpdateArgs>(args: SelectSubset<T, BusinessPlanUpdateArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BusinessPlans.
     * @param {BusinessPlanDeleteManyArgs} args - Arguments to filter BusinessPlans to delete.
     * @example
     * // Delete a few BusinessPlans
     * const { count } = await prisma.businessPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessPlanDeleteManyArgs>(args?: SelectSubset<T, BusinessPlanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessPlans
     * const businessPlan = await prisma.businessPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessPlanUpdateManyArgs>(args: SelectSubset<T, BusinessPlanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BusinessPlan.
     * @param {BusinessPlanUpsertArgs} args - Arguments to update or create a BusinessPlan.
     * @example
     * // Update or create a BusinessPlan
     * const businessPlan = await prisma.businessPlan.upsert({
     *   create: {
     *     // ... data to create a BusinessPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessPlan we want to update
     *   }
     * })
     */
    upsert<T extends BusinessPlanUpsertArgs>(args: SelectSubset<T, BusinessPlanUpsertArgs<ExtArgs>>): Prisma__BusinessPlanClient<$Result.GetResult<Prisma.$BusinessPlanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BusinessPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanCountArgs} args - Arguments to filter BusinessPlans to count.
     * @example
     * // Count the number of BusinessPlans
     * const count = await prisma.businessPlan.count({
     *   where: {
     *     // ... the filter for the BusinessPlans we want to count
     *   }
     * })
    **/
    count<T extends BusinessPlanCountArgs>(
      args?: Subset<T, BusinessPlanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessPlanAggregateArgs>(args: Subset<T, BusinessPlanAggregateArgs>): Prisma.PrismaPromise<GetBusinessPlanAggregateType<T>>

    /**
     * Group by BusinessPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessPlanGroupByArgs['orderBy'] }
        : { orderBy?: BusinessPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessPlanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessPlan model
   */
  readonly fields: BusinessPlanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessPlanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    entrepreneurship<T extends EntrepreneurshipDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EntrepreneurshipDefaultArgs<ExtArgs>>): Prisma__EntrepreneurshipClient<$Result.GetResult<Prisma.$EntrepreneurshipPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessPlan model
   */ 
  interface BusinessPlanFieldRefs {
    readonly id: FieldRef<"BusinessPlan", 'String'>
    readonly entrepreneurshipId: FieldRef<"BusinessPlan", 'String'>
    readonly executiveSummary: FieldRef<"BusinessPlan", 'String'>
    readonly missionStatement: FieldRef<"BusinessPlan", 'String'>
    readonly visionStatement: FieldRef<"BusinessPlan", 'String'>
    readonly marketAnalysis: FieldRef<"BusinessPlan", 'String'>
    readonly targetMarket: FieldRef<"BusinessPlan", 'String'>
    readonly competitiveAnalysis: FieldRef<"BusinessPlan", 'String'>
    readonly businessModelCanvas: FieldRef<"BusinessPlan", 'Json'>
    readonly revenueStreams: FieldRef<"BusinessPlan", 'String[]'>
    readonly costStructure: FieldRef<"BusinessPlan", 'Json'>
    readonly marketingStrategy: FieldRef<"BusinessPlan", 'String'>
    readonly pricingStrategy: FieldRef<"BusinessPlan", 'String'>
    readonly salesStrategy: FieldRef<"BusinessPlan", 'String'>
    readonly initialInvestment: FieldRef<"BusinessPlan", 'Decimal'>
    readonly monthlyExpenses: FieldRef<"BusinessPlan", 'Decimal'>
    readonly revenueProjection: FieldRef<"BusinessPlan", 'Json'>
    readonly breakEvenPoint: FieldRef<"BusinessPlan", 'Int'>
    readonly roi: FieldRef<"BusinessPlan", 'Decimal'>
    readonly riskAnalysis: FieldRef<"BusinessPlan", 'String'>
    readonly mitigationStrategies: FieldRef<"BusinessPlan", 'String[]'>
    readonly operationalPlan: FieldRef<"BusinessPlan", 'String'>
    readonly managementTeam: FieldRef<"BusinessPlan", 'Json'>
    readonly tripleImpactAssessment: FieldRef<"BusinessPlan", 'Json'>
    readonly isCompleted: FieldRef<"BusinessPlan", 'Boolean'>
    readonly lastSection: FieldRef<"BusinessPlan", 'String'>
    readonly completionPercentage: FieldRef<"BusinessPlan", 'Int'>
    readonly createdAt: FieldRef<"BusinessPlan", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessPlan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessPlan findUnique
   */
  export type BusinessPlanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPlan to fetch.
     */
    where: BusinessPlanWhereUniqueInput
  }

  /**
   * BusinessPlan findUniqueOrThrow
   */
  export type BusinessPlanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPlan to fetch.
     */
    where: BusinessPlanWhereUniqueInput
  }

  /**
   * BusinessPlan findFirst
   */
  export type BusinessPlanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPlan to fetch.
     */
    where?: BusinessPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPlans to fetch.
     */
    orderBy?: BusinessPlanOrderByWithRelationInput | BusinessPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPlans.
     */
    cursor?: BusinessPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPlans.
     */
    distinct?: BusinessPlanScalarFieldEnum | BusinessPlanScalarFieldEnum[]
  }

  /**
   * BusinessPlan findFirstOrThrow
   */
  export type BusinessPlanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPlan to fetch.
     */
    where?: BusinessPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPlans to fetch.
     */
    orderBy?: BusinessPlanOrderByWithRelationInput | BusinessPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessPlans.
     */
    cursor?: BusinessPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessPlans.
     */
    distinct?: BusinessPlanScalarFieldEnum | BusinessPlanScalarFieldEnum[]
  }

  /**
   * BusinessPlan findMany
   */
  export type BusinessPlanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter, which BusinessPlans to fetch.
     */
    where?: BusinessPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessPlans to fetch.
     */
    orderBy?: BusinessPlanOrderByWithRelationInput | BusinessPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessPlans.
     */
    cursor?: BusinessPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessPlans.
     */
    skip?: number
    distinct?: BusinessPlanScalarFieldEnum | BusinessPlanScalarFieldEnum[]
  }

  /**
   * BusinessPlan create
   */
  export type BusinessPlanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessPlan.
     */
    data: XOR<BusinessPlanCreateInput, BusinessPlanUncheckedCreateInput>
  }

  /**
   * BusinessPlan createMany
   */
  export type BusinessPlanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessPlans.
     */
    data: BusinessPlanCreateManyInput | BusinessPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessPlan createManyAndReturn
   */
  export type BusinessPlanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BusinessPlans.
     */
    data: BusinessPlanCreateManyInput | BusinessPlanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BusinessPlan update
   */
  export type BusinessPlanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessPlan.
     */
    data: XOR<BusinessPlanUpdateInput, BusinessPlanUncheckedUpdateInput>
    /**
     * Choose, which BusinessPlan to update.
     */
    where: BusinessPlanWhereUniqueInput
  }

  /**
   * BusinessPlan updateMany
   */
  export type BusinessPlanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessPlans.
     */
    data: XOR<BusinessPlanUpdateManyMutationInput, BusinessPlanUncheckedUpdateManyInput>
    /**
     * Filter which BusinessPlans to update
     */
    where?: BusinessPlanWhereInput
  }

  /**
   * BusinessPlan upsert
   */
  export type BusinessPlanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessPlan to update in case it exists.
     */
    where: BusinessPlanWhereUniqueInput
    /**
     * In case the BusinessPlan found by the `where` argument doesn't exist, create a new BusinessPlan with this data.
     */
    create: XOR<BusinessPlanCreateInput, BusinessPlanUncheckedCreateInput>
    /**
     * In case the BusinessPlan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessPlanUpdateInput, BusinessPlanUncheckedUpdateInput>
  }

  /**
   * BusinessPlan delete
   */
  export type BusinessPlanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
    /**
     * Filter which BusinessPlan to delete.
     */
    where: BusinessPlanWhereUniqueInput
  }

  /**
   * BusinessPlan deleteMany
   */
  export type BusinessPlanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessPlans to delete
     */
    where?: BusinessPlanWhereInput
  }

  /**
   * BusinessPlan without action
   */
  export type BusinessPlanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessPlan
     */
    select?: BusinessPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessPlanInclude<ExtArgs> | null
  }


  /**
   * Model NewsArticle
   */

  export type AggregateNewsArticle = {
    _count: NewsArticleCountAggregateOutputType | null
    _avg: NewsArticleAvgAggregateOutputType | null
    _sum: NewsArticleSumAggregateOutputType | null
    _min: NewsArticleMinAggregateOutputType | null
    _max: NewsArticleMaxAggregateOutputType | null
  }

  export type NewsArticleAvgAggregateOutputType = {
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
  }

  export type NewsArticleSumAggregateOutputType = {
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
  }

  export type NewsArticleMinAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    summary: string | null
    imageUrl: string | null
    videoUrl: string | null
    authorId: string | null
    authorName: string | null
    authorType: $Enums.NewsType | null
    authorLogo: string | null
    status: $Enums.NewsStatus | null
    priority: $Enums.NewsPriority | null
    featured: boolean | null
    category: string | null
    publishedAt: Date | null
    expiresAt: Date | null
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    region: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsArticleMaxAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    summary: string | null
    imageUrl: string | null
    videoUrl: string | null
    authorId: string | null
    authorName: string | null
    authorType: $Enums.NewsType | null
    authorLogo: string | null
    status: $Enums.NewsStatus | null
    priority: $Enums.NewsPriority | null
    featured: boolean | null
    category: string | null
    publishedAt: Date | null
    expiresAt: Date | null
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    region: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsArticleCountAggregateOutputType = {
    id: number
    title: number
    content: number
    summary: number
    imageUrl: number
    videoUrl: number
    authorId: number
    authorName: number
    authorType: number
    authorLogo: number
    status: number
    priority: number
    featured: number
    tags: number
    category: number
    publishedAt: number
    expiresAt: number
    viewCount: number
    likeCount: number
    commentCount: number
    targetAudience: number
    region: number
    relatedLinks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NewsArticleAvgAggregateInputType = {
    viewCount?: true
    likeCount?: true
    commentCount?: true
  }

  export type NewsArticleSumAggregateInputType = {
    viewCount?: true
    likeCount?: true
    commentCount?: true
  }

  export type NewsArticleMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    summary?: true
    imageUrl?: true
    videoUrl?: true
    authorId?: true
    authorName?: true
    authorType?: true
    authorLogo?: true
    status?: true
    priority?: true
    featured?: true
    category?: true
    publishedAt?: true
    expiresAt?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    region?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsArticleMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    summary?: true
    imageUrl?: true
    videoUrl?: true
    authorId?: true
    authorName?: true
    authorType?: true
    authorLogo?: true
    status?: true
    priority?: true
    featured?: true
    category?: true
    publishedAt?: true
    expiresAt?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    region?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsArticleCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    summary?: true
    imageUrl?: true
    videoUrl?: true
    authorId?: true
    authorName?: true
    authorType?: true
    authorLogo?: true
    status?: true
    priority?: true
    featured?: true
    tags?: true
    category?: true
    publishedAt?: true
    expiresAt?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    targetAudience?: true
    region?: true
    relatedLinks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NewsArticleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsArticle to aggregate.
     */
    where?: NewsArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsArticles to fetch.
     */
    orderBy?: NewsArticleOrderByWithRelationInput | NewsArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NewsArticles
    **/
    _count?: true | NewsArticleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NewsArticleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NewsArticleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsArticleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsArticleMaxAggregateInputType
  }

  export type GetNewsArticleAggregateType<T extends NewsArticleAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsArticle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsArticle[P]>
      : GetScalarType<T[P], AggregateNewsArticle[P]>
  }




  export type NewsArticleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsArticleWhereInput
    orderBy?: NewsArticleOrderByWithAggregationInput | NewsArticleOrderByWithAggregationInput[]
    by: NewsArticleScalarFieldEnum[] | NewsArticleScalarFieldEnum
    having?: NewsArticleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsArticleCountAggregateInputType | true
    _avg?: NewsArticleAvgAggregateInputType
    _sum?: NewsArticleSumAggregateInputType
    _min?: NewsArticleMinAggregateInputType
    _max?: NewsArticleMaxAggregateInputType
  }

  export type NewsArticleGroupByOutputType = {
    id: string
    title: string
    content: string
    summary: string
    imageUrl: string | null
    videoUrl: string | null
    authorId: string
    authorName: string
    authorType: $Enums.NewsType
    authorLogo: string | null
    status: $Enums.NewsStatus
    priority: $Enums.NewsPriority
    featured: boolean
    tags: string[]
    category: string
    publishedAt: Date | null
    expiresAt: Date | null
    viewCount: number
    likeCount: number
    commentCount: number
    targetAudience: string[]
    region: string | null
    relatedLinks: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: NewsArticleCountAggregateOutputType | null
    _avg: NewsArticleAvgAggregateOutputType | null
    _sum: NewsArticleSumAggregateOutputType | null
    _min: NewsArticleMinAggregateOutputType | null
    _max: NewsArticleMaxAggregateOutputType | null
  }

  type GetNewsArticleGroupByPayload<T extends NewsArticleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsArticleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsArticleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsArticleGroupByOutputType[P]>
            : GetScalarType<T[P], NewsArticleGroupByOutputType[P]>
        }
      >
    >


  export type NewsArticleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    imageUrl?: boolean
    videoUrl?: boolean
    authorId?: boolean
    authorName?: boolean
    authorType?: boolean
    authorLogo?: boolean
    status?: boolean
    priority?: boolean
    featured?: boolean
    tags?: boolean
    category?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    targetAudience?: boolean
    region?: boolean
    relatedLinks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    comments?: boolean | NewsArticle$commentsArgs<ExtArgs>
    _count?: boolean | NewsArticleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["newsArticle"]>

  export type NewsArticleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    imageUrl?: boolean
    videoUrl?: boolean
    authorId?: boolean
    authorName?: boolean
    authorType?: boolean
    authorLogo?: boolean
    status?: boolean
    priority?: boolean
    featured?: boolean
    tags?: boolean
    category?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    targetAudience?: boolean
    region?: boolean
    relatedLinks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    author?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["newsArticle"]>

  export type NewsArticleSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    imageUrl?: boolean
    videoUrl?: boolean
    authorId?: boolean
    authorName?: boolean
    authorType?: boolean
    authorLogo?: boolean
    status?: boolean
    priority?: boolean
    featured?: boolean
    tags?: boolean
    category?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    targetAudience?: boolean
    region?: boolean
    relatedLinks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NewsArticleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    comments?: boolean | NewsArticle$commentsArgs<ExtArgs>
    _count?: boolean | NewsArticleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type NewsArticleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $NewsArticlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NewsArticle"
    objects: {
      author: Prisma.$ProfilePayload<ExtArgs>
      comments: Prisma.$NewsCommentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      summary: string
      imageUrl: string | null
      videoUrl: string | null
      authorId: string
      authorName: string
      authorType: $Enums.NewsType
      authorLogo: string | null
      status: $Enums.NewsStatus
      priority: $Enums.NewsPriority
      featured: boolean
      tags: string[]
      category: string
      publishedAt: Date | null
      expiresAt: Date | null
      viewCount: number
      likeCount: number
      commentCount: number
      targetAudience: string[]
      region: string | null
      relatedLinks: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["newsArticle"]>
    composites: {}
  }

  type NewsArticleGetPayload<S extends boolean | null | undefined | NewsArticleDefaultArgs> = $Result.GetResult<Prisma.$NewsArticlePayload, S>

  type NewsArticleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NewsArticleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsArticleCountAggregateInputType | true
    }

  export interface NewsArticleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NewsArticle'], meta: { name: 'NewsArticle' } }
    /**
     * Find zero or one NewsArticle that matches the filter.
     * @param {NewsArticleFindUniqueArgs} args - Arguments to find a NewsArticle
     * @example
     * // Get one NewsArticle
     * const newsArticle = await prisma.newsArticle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsArticleFindUniqueArgs>(args: SelectSubset<T, NewsArticleFindUniqueArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one NewsArticle that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NewsArticleFindUniqueOrThrowArgs} args - Arguments to find a NewsArticle
     * @example
     * // Get one NewsArticle
     * const newsArticle = await prisma.newsArticle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsArticleFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsArticleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first NewsArticle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleFindFirstArgs} args - Arguments to find a NewsArticle
     * @example
     * // Get one NewsArticle
     * const newsArticle = await prisma.newsArticle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsArticleFindFirstArgs>(args?: SelectSubset<T, NewsArticleFindFirstArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first NewsArticle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleFindFirstOrThrowArgs} args - Arguments to find a NewsArticle
     * @example
     * // Get one NewsArticle
     * const newsArticle = await prisma.newsArticle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsArticleFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsArticleFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more NewsArticles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NewsArticles
     * const newsArticles = await prisma.newsArticle.findMany()
     * 
     * // Get first 10 NewsArticles
     * const newsArticles = await prisma.newsArticle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsArticleWithIdOnly = await prisma.newsArticle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsArticleFindManyArgs>(args?: SelectSubset<T, NewsArticleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a NewsArticle.
     * @param {NewsArticleCreateArgs} args - Arguments to create a NewsArticle.
     * @example
     * // Create one NewsArticle
     * const NewsArticle = await prisma.newsArticle.create({
     *   data: {
     *     // ... data to create a NewsArticle
     *   }
     * })
     * 
     */
    create<T extends NewsArticleCreateArgs>(args: SelectSubset<T, NewsArticleCreateArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many NewsArticles.
     * @param {NewsArticleCreateManyArgs} args - Arguments to create many NewsArticles.
     * @example
     * // Create many NewsArticles
     * const newsArticle = await prisma.newsArticle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsArticleCreateManyArgs>(args?: SelectSubset<T, NewsArticleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many NewsArticles and returns the data saved in the database.
     * @param {NewsArticleCreateManyAndReturnArgs} args - Arguments to create many NewsArticles.
     * @example
     * // Create many NewsArticles
     * const newsArticle = await prisma.newsArticle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many NewsArticles and only return the `id`
     * const newsArticleWithIdOnly = await prisma.newsArticle.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NewsArticleCreateManyAndReturnArgs>(args?: SelectSubset<T, NewsArticleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a NewsArticle.
     * @param {NewsArticleDeleteArgs} args - Arguments to delete one NewsArticle.
     * @example
     * // Delete one NewsArticle
     * const NewsArticle = await prisma.newsArticle.delete({
     *   where: {
     *     // ... filter to delete one NewsArticle
     *   }
     * })
     * 
     */
    delete<T extends NewsArticleDeleteArgs>(args: SelectSubset<T, NewsArticleDeleteArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one NewsArticle.
     * @param {NewsArticleUpdateArgs} args - Arguments to update one NewsArticle.
     * @example
     * // Update one NewsArticle
     * const newsArticle = await prisma.newsArticle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsArticleUpdateArgs>(args: SelectSubset<T, NewsArticleUpdateArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more NewsArticles.
     * @param {NewsArticleDeleteManyArgs} args - Arguments to filter NewsArticles to delete.
     * @example
     * // Delete a few NewsArticles
     * const { count } = await prisma.newsArticle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsArticleDeleteManyArgs>(args?: SelectSubset<T, NewsArticleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NewsArticles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NewsArticles
     * const newsArticle = await prisma.newsArticle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsArticleUpdateManyArgs>(args: SelectSubset<T, NewsArticleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NewsArticle.
     * @param {NewsArticleUpsertArgs} args - Arguments to update or create a NewsArticle.
     * @example
     * // Update or create a NewsArticle
     * const newsArticle = await prisma.newsArticle.upsert({
     *   create: {
     *     // ... data to create a NewsArticle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NewsArticle we want to update
     *   }
     * })
     */
    upsert<T extends NewsArticleUpsertArgs>(args: SelectSubset<T, NewsArticleUpsertArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of NewsArticles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleCountArgs} args - Arguments to filter NewsArticles to count.
     * @example
     * // Count the number of NewsArticles
     * const count = await prisma.newsArticle.count({
     *   where: {
     *     // ... the filter for the NewsArticles we want to count
     *   }
     * })
    **/
    count<T extends NewsArticleCountArgs>(
      args?: Subset<T, NewsArticleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsArticleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NewsArticle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsArticleAggregateArgs>(args: Subset<T, NewsArticleAggregateArgs>): Prisma.PrismaPromise<GetNewsArticleAggregateType<T>>

    /**
     * Group by NewsArticle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsArticleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsArticleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsArticleGroupByArgs['orderBy'] }
        : { orderBy?: NewsArticleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsArticleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsArticleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NewsArticle model
   */
  readonly fields: NewsArticleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NewsArticle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsArticleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    comments<T extends NewsArticle$commentsArgs<ExtArgs> = {}>(args?: Subset<T, NewsArticle$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NewsArticle model
   */ 
  interface NewsArticleFieldRefs {
    readonly id: FieldRef<"NewsArticle", 'String'>
    readonly title: FieldRef<"NewsArticle", 'String'>
    readonly content: FieldRef<"NewsArticle", 'String'>
    readonly summary: FieldRef<"NewsArticle", 'String'>
    readonly imageUrl: FieldRef<"NewsArticle", 'String'>
    readonly videoUrl: FieldRef<"NewsArticle", 'String'>
    readonly authorId: FieldRef<"NewsArticle", 'String'>
    readonly authorName: FieldRef<"NewsArticle", 'String'>
    readonly authorType: FieldRef<"NewsArticle", 'NewsType'>
    readonly authorLogo: FieldRef<"NewsArticle", 'String'>
    readonly status: FieldRef<"NewsArticle", 'NewsStatus'>
    readonly priority: FieldRef<"NewsArticle", 'NewsPriority'>
    readonly featured: FieldRef<"NewsArticle", 'Boolean'>
    readonly tags: FieldRef<"NewsArticle", 'String[]'>
    readonly category: FieldRef<"NewsArticle", 'String'>
    readonly publishedAt: FieldRef<"NewsArticle", 'DateTime'>
    readonly expiresAt: FieldRef<"NewsArticle", 'DateTime'>
    readonly viewCount: FieldRef<"NewsArticle", 'Int'>
    readonly likeCount: FieldRef<"NewsArticle", 'Int'>
    readonly commentCount: FieldRef<"NewsArticle", 'Int'>
    readonly targetAudience: FieldRef<"NewsArticle", 'String[]'>
    readonly region: FieldRef<"NewsArticle", 'String'>
    readonly relatedLinks: FieldRef<"NewsArticle", 'Json'>
    readonly createdAt: FieldRef<"NewsArticle", 'DateTime'>
    readonly updatedAt: FieldRef<"NewsArticle", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * NewsArticle findUnique
   */
  export type NewsArticleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter, which NewsArticle to fetch.
     */
    where: NewsArticleWhereUniqueInput
  }

  /**
   * NewsArticle findUniqueOrThrow
   */
  export type NewsArticleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter, which NewsArticle to fetch.
     */
    where: NewsArticleWhereUniqueInput
  }

  /**
   * NewsArticle findFirst
   */
  export type NewsArticleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter, which NewsArticle to fetch.
     */
    where?: NewsArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsArticles to fetch.
     */
    orderBy?: NewsArticleOrderByWithRelationInput | NewsArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsArticles.
     */
    cursor?: NewsArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsArticles.
     */
    distinct?: NewsArticleScalarFieldEnum | NewsArticleScalarFieldEnum[]
  }

  /**
   * NewsArticle findFirstOrThrow
   */
  export type NewsArticleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter, which NewsArticle to fetch.
     */
    where?: NewsArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsArticles to fetch.
     */
    orderBy?: NewsArticleOrderByWithRelationInput | NewsArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsArticles.
     */
    cursor?: NewsArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsArticles.
     */
    distinct?: NewsArticleScalarFieldEnum | NewsArticleScalarFieldEnum[]
  }

  /**
   * NewsArticle findMany
   */
  export type NewsArticleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter, which NewsArticles to fetch.
     */
    where?: NewsArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsArticles to fetch.
     */
    orderBy?: NewsArticleOrderByWithRelationInput | NewsArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NewsArticles.
     */
    cursor?: NewsArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsArticles.
     */
    skip?: number
    distinct?: NewsArticleScalarFieldEnum | NewsArticleScalarFieldEnum[]
  }

  /**
   * NewsArticle create
   */
  export type NewsArticleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * The data needed to create a NewsArticle.
     */
    data: XOR<NewsArticleCreateInput, NewsArticleUncheckedCreateInput>
  }

  /**
   * NewsArticle createMany
   */
  export type NewsArticleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NewsArticles.
     */
    data: NewsArticleCreateManyInput | NewsArticleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NewsArticle createManyAndReturn
   */
  export type NewsArticleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many NewsArticles.
     */
    data: NewsArticleCreateManyInput | NewsArticleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * NewsArticle update
   */
  export type NewsArticleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * The data needed to update a NewsArticle.
     */
    data: XOR<NewsArticleUpdateInput, NewsArticleUncheckedUpdateInput>
    /**
     * Choose, which NewsArticle to update.
     */
    where: NewsArticleWhereUniqueInput
  }

  /**
   * NewsArticle updateMany
   */
  export type NewsArticleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NewsArticles.
     */
    data: XOR<NewsArticleUpdateManyMutationInput, NewsArticleUncheckedUpdateManyInput>
    /**
     * Filter which NewsArticles to update
     */
    where?: NewsArticleWhereInput
  }

  /**
   * NewsArticle upsert
   */
  export type NewsArticleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * The filter to search for the NewsArticle to update in case it exists.
     */
    where: NewsArticleWhereUniqueInput
    /**
     * In case the NewsArticle found by the `where` argument doesn't exist, create a new NewsArticle with this data.
     */
    create: XOR<NewsArticleCreateInput, NewsArticleUncheckedCreateInput>
    /**
     * In case the NewsArticle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsArticleUpdateInput, NewsArticleUncheckedUpdateInput>
  }

  /**
   * NewsArticle delete
   */
  export type NewsArticleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
    /**
     * Filter which NewsArticle to delete.
     */
    where: NewsArticleWhereUniqueInput
  }

  /**
   * NewsArticle deleteMany
   */
  export type NewsArticleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsArticles to delete
     */
    where?: NewsArticleWhereInput
  }

  /**
   * NewsArticle.comments
   */
  export type NewsArticle$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    where?: NewsCommentWhereInput
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    cursor?: NewsCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * NewsArticle without action
   */
  export type NewsArticleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsArticle
     */
    select?: NewsArticleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsArticleInclude<ExtArgs> | null
  }


  /**
   * Model NewsComment
   */

  export type AggregateNewsComment = {
    _count: NewsCommentCountAggregateOutputType | null
    _avg: NewsCommentAvgAggregateOutputType | null
    _sum: NewsCommentSumAggregateOutputType | null
    _min: NewsCommentMinAggregateOutputType | null
    _max: NewsCommentMaxAggregateOutputType | null
  }

  export type NewsCommentAvgAggregateOutputType = {
    likes: number | null
  }

  export type NewsCommentSumAggregateOutputType = {
    likes: number | null
  }

  export type NewsCommentMinAggregateOutputType = {
    id: string | null
    newsId: string | null
    userId: string | null
    userName: string | null
    userAvatar: string | null
    content: string | null
    parentId: string | null
    likes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsCommentMaxAggregateOutputType = {
    id: string | null
    newsId: string | null
    userId: string | null
    userName: string | null
    userAvatar: string | null
    content: string | null
    parentId: string | null
    likes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsCommentCountAggregateOutputType = {
    id: number
    newsId: number
    userId: number
    userName: number
    userAvatar: number
    content: number
    parentId: number
    likes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NewsCommentAvgAggregateInputType = {
    likes?: true
  }

  export type NewsCommentSumAggregateInputType = {
    likes?: true
  }

  export type NewsCommentMinAggregateInputType = {
    id?: true
    newsId?: true
    userId?: true
    userName?: true
    userAvatar?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsCommentMaxAggregateInputType = {
    id?: true
    newsId?: true
    userId?: true
    userName?: true
    userAvatar?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsCommentCountAggregateInputType = {
    id?: true
    newsId?: true
    userId?: true
    userName?: true
    userAvatar?: true
    content?: true
    parentId?: true
    likes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NewsCommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsComment to aggregate.
     */
    where?: NewsCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsComments to fetch.
     */
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NewsComments
    **/
    _count?: true | NewsCommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NewsCommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NewsCommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsCommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsCommentMaxAggregateInputType
  }

  export type GetNewsCommentAggregateType<T extends NewsCommentAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsComment[P]>
      : GetScalarType<T[P], AggregateNewsComment[P]>
  }




  export type NewsCommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsCommentWhereInput
    orderBy?: NewsCommentOrderByWithAggregationInput | NewsCommentOrderByWithAggregationInput[]
    by: NewsCommentScalarFieldEnum[] | NewsCommentScalarFieldEnum
    having?: NewsCommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsCommentCountAggregateInputType | true
    _avg?: NewsCommentAvgAggregateInputType
    _sum?: NewsCommentSumAggregateInputType
    _min?: NewsCommentMinAggregateInputType
    _max?: NewsCommentMaxAggregateInputType
  }

  export type NewsCommentGroupByOutputType = {
    id: string
    newsId: string
    userId: string
    userName: string
    userAvatar: string | null
    content: string
    parentId: string | null
    likes: number
    createdAt: Date
    updatedAt: Date
    _count: NewsCommentCountAggregateOutputType | null
    _avg: NewsCommentAvgAggregateOutputType | null
    _sum: NewsCommentSumAggregateOutputType | null
    _min: NewsCommentMinAggregateOutputType | null
    _max: NewsCommentMaxAggregateOutputType | null
  }

  type GetNewsCommentGroupByPayload<T extends NewsCommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsCommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsCommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsCommentGroupByOutputType[P]>
            : GetScalarType<T[P], NewsCommentGroupByOutputType[P]>
        }
      >
    >


  export type NewsCommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    newsId?: boolean
    userId?: boolean
    userName?: boolean
    userAvatar?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    news?: boolean | NewsArticleDefaultArgs<ExtArgs>
    parent?: boolean | NewsComment$parentArgs<ExtArgs>
    replies?: boolean | NewsComment$repliesArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | NewsCommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["newsComment"]>

  export type NewsCommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    newsId?: boolean
    userId?: boolean
    userName?: boolean
    userAvatar?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    news?: boolean | NewsArticleDefaultArgs<ExtArgs>
    parent?: boolean | NewsComment$parentArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["newsComment"]>

  export type NewsCommentSelectScalar = {
    id?: boolean
    newsId?: boolean
    userId?: boolean
    userName?: boolean
    userAvatar?: boolean
    content?: boolean
    parentId?: boolean
    likes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NewsCommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    news?: boolean | NewsArticleDefaultArgs<ExtArgs>
    parent?: boolean | NewsComment$parentArgs<ExtArgs>
    replies?: boolean | NewsComment$repliesArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | NewsCommentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type NewsCommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    news?: boolean | NewsArticleDefaultArgs<ExtArgs>
    parent?: boolean | NewsComment$parentArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $NewsCommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NewsComment"
    objects: {
      news: Prisma.$NewsArticlePayload<ExtArgs>
      parent: Prisma.$NewsCommentPayload<ExtArgs> | null
      replies: Prisma.$NewsCommentPayload<ExtArgs>[]
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      newsId: string
      userId: string
      userName: string
      userAvatar: string | null
      content: string
      parentId: string | null
      likes: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["newsComment"]>
    composites: {}
  }

  type NewsCommentGetPayload<S extends boolean | null | undefined | NewsCommentDefaultArgs> = $Result.GetResult<Prisma.$NewsCommentPayload, S>

  type NewsCommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NewsCommentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsCommentCountAggregateInputType | true
    }

  export interface NewsCommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NewsComment'], meta: { name: 'NewsComment' } }
    /**
     * Find zero or one NewsComment that matches the filter.
     * @param {NewsCommentFindUniqueArgs} args - Arguments to find a NewsComment
     * @example
     * // Get one NewsComment
     * const newsComment = await prisma.newsComment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsCommentFindUniqueArgs>(args: SelectSubset<T, NewsCommentFindUniqueArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one NewsComment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NewsCommentFindUniqueOrThrowArgs} args - Arguments to find a NewsComment
     * @example
     * // Get one NewsComment
     * const newsComment = await prisma.newsComment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsCommentFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsCommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first NewsComment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentFindFirstArgs} args - Arguments to find a NewsComment
     * @example
     * // Get one NewsComment
     * const newsComment = await prisma.newsComment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsCommentFindFirstArgs>(args?: SelectSubset<T, NewsCommentFindFirstArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first NewsComment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentFindFirstOrThrowArgs} args - Arguments to find a NewsComment
     * @example
     * // Get one NewsComment
     * const newsComment = await prisma.newsComment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsCommentFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsCommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more NewsComments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NewsComments
     * const newsComments = await prisma.newsComment.findMany()
     * 
     * // Get first 10 NewsComments
     * const newsComments = await prisma.newsComment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsCommentWithIdOnly = await prisma.newsComment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsCommentFindManyArgs>(args?: SelectSubset<T, NewsCommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a NewsComment.
     * @param {NewsCommentCreateArgs} args - Arguments to create a NewsComment.
     * @example
     * // Create one NewsComment
     * const NewsComment = await prisma.newsComment.create({
     *   data: {
     *     // ... data to create a NewsComment
     *   }
     * })
     * 
     */
    create<T extends NewsCommentCreateArgs>(args: SelectSubset<T, NewsCommentCreateArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many NewsComments.
     * @param {NewsCommentCreateManyArgs} args - Arguments to create many NewsComments.
     * @example
     * // Create many NewsComments
     * const newsComment = await prisma.newsComment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsCommentCreateManyArgs>(args?: SelectSubset<T, NewsCommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many NewsComments and returns the data saved in the database.
     * @param {NewsCommentCreateManyAndReturnArgs} args - Arguments to create many NewsComments.
     * @example
     * // Create many NewsComments
     * const newsComment = await prisma.newsComment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many NewsComments and only return the `id`
     * const newsCommentWithIdOnly = await prisma.newsComment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NewsCommentCreateManyAndReturnArgs>(args?: SelectSubset<T, NewsCommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a NewsComment.
     * @param {NewsCommentDeleteArgs} args - Arguments to delete one NewsComment.
     * @example
     * // Delete one NewsComment
     * const NewsComment = await prisma.newsComment.delete({
     *   where: {
     *     // ... filter to delete one NewsComment
     *   }
     * })
     * 
     */
    delete<T extends NewsCommentDeleteArgs>(args: SelectSubset<T, NewsCommentDeleteArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one NewsComment.
     * @param {NewsCommentUpdateArgs} args - Arguments to update one NewsComment.
     * @example
     * // Update one NewsComment
     * const newsComment = await prisma.newsComment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsCommentUpdateArgs>(args: SelectSubset<T, NewsCommentUpdateArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more NewsComments.
     * @param {NewsCommentDeleteManyArgs} args - Arguments to filter NewsComments to delete.
     * @example
     * // Delete a few NewsComments
     * const { count } = await prisma.newsComment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsCommentDeleteManyArgs>(args?: SelectSubset<T, NewsCommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NewsComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NewsComments
     * const newsComment = await prisma.newsComment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsCommentUpdateManyArgs>(args: SelectSubset<T, NewsCommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NewsComment.
     * @param {NewsCommentUpsertArgs} args - Arguments to update or create a NewsComment.
     * @example
     * // Update or create a NewsComment
     * const newsComment = await prisma.newsComment.upsert({
     *   create: {
     *     // ... data to create a NewsComment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NewsComment we want to update
     *   }
     * })
     */
    upsert<T extends NewsCommentUpsertArgs>(args: SelectSubset<T, NewsCommentUpsertArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of NewsComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentCountArgs} args - Arguments to filter NewsComments to count.
     * @example
     * // Count the number of NewsComments
     * const count = await prisma.newsComment.count({
     *   where: {
     *     // ... the filter for the NewsComments we want to count
     *   }
     * })
    **/
    count<T extends NewsCommentCountArgs>(
      args?: Subset<T, NewsCommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsCommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NewsComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsCommentAggregateArgs>(args: Subset<T, NewsCommentAggregateArgs>): Prisma.PrismaPromise<GetNewsCommentAggregateType<T>>

    /**
     * Group by NewsComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsCommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsCommentGroupByArgs['orderBy'] }
        : { orderBy?: NewsCommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsCommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NewsComment model
   */
  readonly fields: NewsCommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NewsComment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsCommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    news<T extends NewsArticleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, NewsArticleDefaultArgs<ExtArgs>>): Prisma__NewsArticleClient<$Result.GetResult<Prisma.$NewsArticlePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    parent<T extends NewsComment$parentArgs<ExtArgs> = {}>(args?: Subset<T, NewsComment$parentArgs<ExtArgs>>): Prisma__NewsCommentClient<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    replies<T extends NewsComment$repliesArgs<ExtArgs> = {}>(args?: Subset<T, NewsComment$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsCommentPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NewsComment model
   */ 
  interface NewsCommentFieldRefs {
    readonly id: FieldRef<"NewsComment", 'String'>
    readonly newsId: FieldRef<"NewsComment", 'String'>
    readonly userId: FieldRef<"NewsComment", 'String'>
    readonly userName: FieldRef<"NewsComment", 'String'>
    readonly userAvatar: FieldRef<"NewsComment", 'String'>
    readonly content: FieldRef<"NewsComment", 'String'>
    readonly parentId: FieldRef<"NewsComment", 'String'>
    readonly likes: FieldRef<"NewsComment", 'Int'>
    readonly createdAt: FieldRef<"NewsComment", 'DateTime'>
    readonly updatedAt: FieldRef<"NewsComment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * NewsComment findUnique
   */
  export type NewsCommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter, which NewsComment to fetch.
     */
    where: NewsCommentWhereUniqueInput
  }

  /**
   * NewsComment findUniqueOrThrow
   */
  export type NewsCommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter, which NewsComment to fetch.
     */
    where: NewsCommentWhereUniqueInput
  }

  /**
   * NewsComment findFirst
   */
  export type NewsCommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter, which NewsComment to fetch.
     */
    where?: NewsCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsComments to fetch.
     */
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsComments.
     */
    cursor?: NewsCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsComments.
     */
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * NewsComment findFirstOrThrow
   */
  export type NewsCommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter, which NewsComment to fetch.
     */
    where?: NewsCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsComments to fetch.
     */
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsComments.
     */
    cursor?: NewsCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsComments.
     */
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * NewsComment findMany
   */
  export type NewsCommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter, which NewsComments to fetch.
     */
    where?: NewsCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsComments to fetch.
     */
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NewsComments.
     */
    cursor?: NewsCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsComments.
     */
    skip?: number
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * NewsComment create
   */
  export type NewsCommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * The data needed to create a NewsComment.
     */
    data: XOR<NewsCommentCreateInput, NewsCommentUncheckedCreateInput>
  }

  /**
   * NewsComment createMany
   */
  export type NewsCommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NewsComments.
     */
    data: NewsCommentCreateManyInput | NewsCommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NewsComment createManyAndReturn
   */
  export type NewsCommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many NewsComments.
     */
    data: NewsCommentCreateManyInput | NewsCommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * NewsComment update
   */
  export type NewsCommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * The data needed to update a NewsComment.
     */
    data: XOR<NewsCommentUpdateInput, NewsCommentUncheckedUpdateInput>
    /**
     * Choose, which NewsComment to update.
     */
    where: NewsCommentWhereUniqueInput
  }

  /**
   * NewsComment updateMany
   */
  export type NewsCommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NewsComments.
     */
    data: XOR<NewsCommentUpdateManyMutationInput, NewsCommentUncheckedUpdateManyInput>
    /**
     * Filter which NewsComments to update
     */
    where?: NewsCommentWhereInput
  }

  /**
   * NewsComment upsert
   */
  export type NewsCommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * The filter to search for the NewsComment to update in case it exists.
     */
    where: NewsCommentWhereUniqueInput
    /**
     * In case the NewsComment found by the `where` argument doesn't exist, create a new NewsComment with this data.
     */
    create: XOR<NewsCommentCreateInput, NewsCommentUncheckedCreateInput>
    /**
     * In case the NewsComment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsCommentUpdateInput, NewsCommentUncheckedUpdateInput>
  }

  /**
   * NewsComment delete
   */
  export type NewsCommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    /**
     * Filter which NewsComment to delete.
     */
    where: NewsCommentWhereUniqueInput
  }

  /**
   * NewsComment deleteMany
   */
  export type NewsCommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsComments to delete
     */
    where?: NewsCommentWhereInput
  }

  /**
   * NewsComment.parent
   */
  export type NewsComment$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    where?: NewsCommentWhereInput
  }

  /**
   * NewsComment.replies
   */
  export type NewsComment$repliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
    where?: NewsCommentWhereInput
    orderBy?: NewsCommentOrderByWithRelationInput | NewsCommentOrderByWithRelationInput[]
    cursor?: NewsCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsCommentScalarFieldEnum | NewsCommentScalarFieldEnum[]
  }

  /**
   * NewsComment without action
   */
  export type NewsCommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsComment
     */
    select?: NewsCommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsCommentInclude<ExtArgs> | null
  }


  /**
   * Model Resource
   */

  export type AggregateResource = {
    _count: ResourceCountAggregateOutputType | null
    _avg: ResourceAvgAggregateOutputType | null
    _sum: ResourceSumAggregateOutputType | null
    _min: ResourceMinAggregateOutputType | null
    _max: ResourceMaxAggregateOutputType | null
  }

  export type ResourceAvgAggregateOutputType = {
    downloads: number | null
    rating: number | null
  }

  export type ResourceSumAggregateOutputType = {
    downloads: number | null
    rating: number | null
  }

  export type ResourceMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: string | null
    category: string | null
    format: string | null
    downloadUrl: string | null
    externalUrl: string | null
    thumbnail: string | null
    author: string | null
    publishedDate: Date | null
    downloads: number | null
    rating: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResourceMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: string | null
    category: string | null
    format: string | null
    downloadUrl: string | null
    externalUrl: string | null
    thumbnail: string | null
    author: string | null
    publishedDate: Date | null
    downloads: number | null
    rating: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResourceCountAggregateOutputType = {
    id: number
    title: number
    description: number
    type: number
    category: number
    format: number
    downloadUrl: number
    externalUrl: number
    thumbnail: number
    author: number
    publishedDate: number
    downloads: number
    rating: number
    tags: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ResourceAvgAggregateInputType = {
    downloads?: true
    rating?: true
  }

  export type ResourceSumAggregateInputType = {
    downloads?: true
    rating?: true
  }

  export type ResourceMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    category?: true
    format?: true
    downloadUrl?: true
    externalUrl?: true
    thumbnail?: true
    author?: true
    publishedDate?: true
    downloads?: true
    rating?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResourceMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    category?: true
    format?: true
    downloadUrl?: true
    externalUrl?: true
    thumbnail?: true
    author?: true
    publishedDate?: true
    downloads?: true
    rating?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResourceCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    category?: true
    format?: true
    downloadUrl?: true
    externalUrl?: true
    thumbnail?: true
    author?: true
    publishedDate?: true
    downloads?: true
    rating?: true
    tags?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ResourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Resource to aggregate.
     */
    where?: ResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourceOrderByWithRelationInput | ResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Resources
    **/
    _count?: true | ResourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ResourceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ResourceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResourceMaxAggregateInputType
  }

  export type GetResourceAggregateType<T extends ResourceAggregateArgs> = {
        [P in keyof T & keyof AggregateResource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResource[P]>
      : GetScalarType<T[P], AggregateResource[P]>
  }




  export type ResourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResourceWhereInput
    orderBy?: ResourceOrderByWithAggregationInput | ResourceOrderByWithAggregationInput[]
    by: ResourceScalarFieldEnum[] | ResourceScalarFieldEnum
    having?: ResourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResourceCountAggregateInputType | true
    _avg?: ResourceAvgAggregateInputType
    _sum?: ResourceSumAggregateInputType
    _min?: ResourceMinAggregateInputType
    _max?: ResourceMaxAggregateInputType
  }

  export type ResourceGroupByOutputType = {
    id: string
    title: string
    description: string
    type: string
    category: string
    format: string
    downloadUrl: string | null
    externalUrl: string | null
    thumbnail: string
    author: string
    publishedDate: Date
    downloads: number
    rating: number
    tags: string[]
    createdAt: Date
    updatedAt: Date
    _count: ResourceCountAggregateOutputType | null
    _avg: ResourceAvgAggregateOutputType | null
    _sum: ResourceSumAggregateOutputType | null
    _min: ResourceMinAggregateOutputType | null
    _max: ResourceMaxAggregateOutputType | null
  }

  type GetResourceGroupByPayload<T extends ResourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResourceGroupByOutputType[P]>
            : GetScalarType<T[P], ResourceGroupByOutputType[P]>
        }
      >
    >


  export type ResourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    category?: boolean
    format?: boolean
    downloadUrl?: boolean
    externalUrl?: boolean
    thumbnail?: boolean
    author?: boolean
    publishedDate?: boolean
    downloads?: boolean
    rating?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["resource"]>

  export type ResourceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    category?: boolean
    format?: boolean
    downloadUrl?: boolean
    externalUrl?: boolean
    thumbnail?: boolean
    author?: boolean
    publishedDate?: boolean
    downloads?: boolean
    rating?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["resource"]>

  export type ResourceSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    category?: boolean
    format?: boolean
    downloadUrl?: boolean
    externalUrl?: boolean
    thumbnail?: boolean
    author?: boolean
    publishedDate?: boolean
    downloads?: boolean
    rating?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $ResourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Resource"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string
      type: string
      category: string
      format: string
      downloadUrl: string | null
      externalUrl: string | null
      thumbnail: string
      author: string
      publishedDate: Date
      downloads: number
      rating: number
      tags: string[]
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["resource"]>
    composites: {}
  }

  type ResourceGetPayload<S extends boolean | null | undefined | ResourceDefaultArgs> = $Result.GetResult<Prisma.$ResourcePayload, S>

  type ResourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ResourceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ResourceCountAggregateInputType | true
    }

  export interface ResourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Resource'], meta: { name: 'Resource' } }
    /**
     * Find zero or one Resource that matches the filter.
     * @param {ResourceFindUniqueArgs} args - Arguments to find a Resource
     * @example
     * // Get one Resource
     * const resource = await prisma.resource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ResourceFindUniqueArgs>(args: SelectSubset<T, ResourceFindUniqueArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Resource that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ResourceFindUniqueOrThrowArgs} args - Arguments to find a Resource
     * @example
     * // Get one Resource
     * const resource = await prisma.resource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ResourceFindUniqueOrThrowArgs>(args: SelectSubset<T, ResourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Resource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceFindFirstArgs} args - Arguments to find a Resource
     * @example
     * // Get one Resource
     * const resource = await prisma.resource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ResourceFindFirstArgs>(args?: SelectSubset<T, ResourceFindFirstArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Resource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceFindFirstOrThrowArgs} args - Arguments to find a Resource
     * @example
     * // Get one Resource
     * const resource = await prisma.resource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ResourceFindFirstOrThrowArgs>(args?: SelectSubset<T, ResourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Resources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Resources
     * const resources = await prisma.resource.findMany()
     * 
     * // Get first 10 Resources
     * const resources = await prisma.resource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resourceWithIdOnly = await prisma.resource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ResourceFindManyArgs>(args?: SelectSubset<T, ResourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Resource.
     * @param {ResourceCreateArgs} args - Arguments to create a Resource.
     * @example
     * // Create one Resource
     * const Resource = await prisma.resource.create({
     *   data: {
     *     // ... data to create a Resource
     *   }
     * })
     * 
     */
    create<T extends ResourceCreateArgs>(args: SelectSubset<T, ResourceCreateArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Resources.
     * @param {ResourceCreateManyArgs} args - Arguments to create many Resources.
     * @example
     * // Create many Resources
     * const resource = await prisma.resource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ResourceCreateManyArgs>(args?: SelectSubset<T, ResourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Resources and returns the data saved in the database.
     * @param {ResourceCreateManyAndReturnArgs} args - Arguments to create many Resources.
     * @example
     * // Create many Resources
     * const resource = await prisma.resource.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Resources and only return the `id`
     * const resourceWithIdOnly = await prisma.resource.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ResourceCreateManyAndReturnArgs>(args?: SelectSubset<T, ResourceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Resource.
     * @param {ResourceDeleteArgs} args - Arguments to delete one Resource.
     * @example
     * // Delete one Resource
     * const Resource = await prisma.resource.delete({
     *   where: {
     *     // ... filter to delete one Resource
     *   }
     * })
     * 
     */
    delete<T extends ResourceDeleteArgs>(args: SelectSubset<T, ResourceDeleteArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Resource.
     * @param {ResourceUpdateArgs} args - Arguments to update one Resource.
     * @example
     * // Update one Resource
     * const resource = await prisma.resource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ResourceUpdateArgs>(args: SelectSubset<T, ResourceUpdateArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Resources.
     * @param {ResourceDeleteManyArgs} args - Arguments to filter Resources to delete.
     * @example
     * // Delete a few Resources
     * const { count } = await prisma.resource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ResourceDeleteManyArgs>(args?: SelectSubset<T, ResourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Resources
     * const resource = await prisma.resource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ResourceUpdateManyArgs>(args: SelectSubset<T, ResourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Resource.
     * @param {ResourceUpsertArgs} args - Arguments to update or create a Resource.
     * @example
     * // Update or create a Resource
     * const resource = await prisma.resource.upsert({
     *   create: {
     *     // ... data to create a Resource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Resource we want to update
     *   }
     * })
     */
    upsert<T extends ResourceUpsertArgs>(args: SelectSubset<T, ResourceUpsertArgs<ExtArgs>>): Prisma__ResourceClient<$Result.GetResult<Prisma.$ResourcePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceCountArgs} args - Arguments to filter Resources to count.
     * @example
     * // Count the number of Resources
     * const count = await prisma.resource.count({
     *   where: {
     *     // ... the filter for the Resources we want to count
     *   }
     * })
    **/
    count<T extends ResourceCountArgs>(
      args?: Subset<T, ResourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Resource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResourceAggregateArgs>(args: Subset<T, ResourceAggregateArgs>): Prisma.PrismaPromise<GetResourceAggregateType<T>>

    /**
     * Group by Resource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResourceGroupByArgs['orderBy'] }
        : { orderBy?: ResourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Resource model
   */
  readonly fields: ResourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Resource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Resource model
   */ 
  interface ResourceFieldRefs {
    readonly id: FieldRef<"Resource", 'String'>
    readonly title: FieldRef<"Resource", 'String'>
    readonly description: FieldRef<"Resource", 'String'>
    readonly type: FieldRef<"Resource", 'String'>
    readonly category: FieldRef<"Resource", 'String'>
    readonly format: FieldRef<"Resource", 'String'>
    readonly downloadUrl: FieldRef<"Resource", 'String'>
    readonly externalUrl: FieldRef<"Resource", 'String'>
    readonly thumbnail: FieldRef<"Resource", 'String'>
    readonly author: FieldRef<"Resource", 'String'>
    readonly publishedDate: FieldRef<"Resource", 'DateTime'>
    readonly downloads: FieldRef<"Resource", 'Int'>
    readonly rating: FieldRef<"Resource", 'Float'>
    readonly tags: FieldRef<"Resource", 'String[]'>
    readonly createdAt: FieldRef<"Resource", 'DateTime'>
    readonly updatedAt: FieldRef<"Resource", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Resource findUnique
   */
  export type ResourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter, which Resource to fetch.
     */
    where: ResourceWhereUniqueInput
  }

  /**
   * Resource findUniqueOrThrow
   */
  export type ResourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter, which Resource to fetch.
     */
    where: ResourceWhereUniqueInput
  }

  /**
   * Resource findFirst
   */
  export type ResourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter, which Resource to fetch.
     */
    where?: ResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourceOrderByWithRelationInput | ResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Resources.
     */
    cursor?: ResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Resources.
     */
    distinct?: ResourceScalarFieldEnum | ResourceScalarFieldEnum[]
  }

  /**
   * Resource findFirstOrThrow
   */
  export type ResourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter, which Resource to fetch.
     */
    where?: ResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourceOrderByWithRelationInput | ResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Resources.
     */
    cursor?: ResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Resources.
     */
    distinct?: ResourceScalarFieldEnum | ResourceScalarFieldEnum[]
  }

  /**
   * Resource findMany
   */
  export type ResourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where?: ResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourceOrderByWithRelationInput | ResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Resources.
     */
    cursor?: ResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    distinct?: ResourceScalarFieldEnum | ResourceScalarFieldEnum[]
  }

  /**
   * Resource create
   */
  export type ResourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * The data needed to create a Resource.
     */
    data: XOR<ResourceCreateInput, ResourceUncheckedCreateInput>
  }

  /**
   * Resource createMany
   */
  export type ResourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Resources.
     */
    data: ResourceCreateManyInput | ResourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Resource createManyAndReturn
   */
  export type ResourceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Resources.
     */
    data: ResourceCreateManyInput | ResourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Resource update
   */
  export type ResourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * The data needed to update a Resource.
     */
    data: XOR<ResourceUpdateInput, ResourceUncheckedUpdateInput>
    /**
     * Choose, which Resource to update.
     */
    where: ResourceWhereUniqueInput
  }

  /**
   * Resource updateMany
   */
  export type ResourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Resources.
     */
    data: XOR<ResourceUpdateManyMutationInput, ResourceUncheckedUpdateManyInput>
    /**
     * Filter which Resources to update
     */
    where?: ResourceWhereInput
  }

  /**
   * Resource upsert
   */
  export type ResourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * The filter to search for the Resource to update in case it exists.
     */
    where: ResourceWhereUniqueInput
    /**
     * In case the Resource found by the `where` argument doesn't exist, create a new Resource with this data.
     */
    create: XOR<ResourceCreateInput, ResourceUncheckedCreateInput>
    /**
     * In case the Resource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResourceUpdateInput, ResourceUncheckedUpdateInput>
  }

  /**
   * Resource delete
   */
  export type ResourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
    /**
     * Filter which Resource to delete.
     */
    where: ResourceWhereUniqueInput
  }

  /**
   * Resource deleteMany
   */
  export type ResourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Resources to delete
     */
    where?: ResourceWhereInput
  }

  /**
   * Resource without action
   */
  export type ResourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resource
     */
    select?: ResourceSelect<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    role: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    role?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdCompanies?: boolean | User$createdCompaniesArgs<ExtArgs>
    createdInstitutions?: boolean | User$createdInstitutionsArgs<ExtArgs>
    createdMunicipalities?: boolean | User$createdMunicipalitiesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdCompanies?: boolean | User$createdCompaniesArgs<ExtArgs>
    createdInstitutions?: boolean | User$createdInstitutionsArgs<ExtArgs>
    createdMunicipalities?: boolean | User$createdMunicipalitiesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      createdCompanies: Prisma.$CompanyPayload<ExtArgs>[]
      createdInstitutions: Prisma.$InstitutionPayload<ExtArgs>[]
      createdMunicipalities: Prisma.$MunicipalityPayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      role: $Enums.UserRole
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdCompanies<T extends User$createdCompaniesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdCompaniesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany"> | Null>
    createdInstitutions<T extends User$createdInstitutionsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdInstitutionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findMany"> | Null>
    createdMunicipalities<T extends User$createdMunicipalitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdMunicipalitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findMany"> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.createdCompanies
   */
  export type User$createdCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    cursor?: CompanyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * User.createdInstitutions
   */
  export type User$createdInstitutionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    where?: InstitutionWhereInput
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    cursor?: InstitutionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * User.createdMunicipalities
   */
  export type User$createdMunicipalitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    where?: MunicipalityWhereInput
    orderBy?: MunicipalityOrderByWithRelationInput | MunicipalityOrderByWithRelationInput[]
    cursor?: MunicipalityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MunicipalityScalarFieldEnum | MunicipalityScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    revoked: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    revoked: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    revoked: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    revoked?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    revoked: boolean
    createdAt: Date
    updatedAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    revoked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      revoked: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */ 
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly revoked: FieldRef<"RefreshToken", 'Boolean'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly updatedAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model ExternalApiKey
   */

  export type AggregateExternalApiKey = {
    _count: ExternalApiKeyCountAggregateOutputType | null
    _min: ExternalApiKeyMinAggregateOutputType | null
    _max: ExternalApiKeyMaxAggregateOutputType | null
  }

  export type ExternalApiKeyMinAggregateOutputType = {
    id: string | null
    key: string | null
    name: string | null
    active: boolean | null
    createdAt: Date | null
    revokedAt: Date | null
  }

  export type ExternalApiKeyMaxAggregateOutputType = {
    id: string | null
    key: string | null
    name: string | null
    active: boolean | null
    createdAt: Date | null
    revokedAt: Date | null
  }

  export type ExternalApiKeyCountAggregateOutputType = {
    id: number
    key: number
    name: number
    active: number
    createdAt: number
    revokedAt: number
    _all: number
  }


  export type ExternalApiKeyMinAggregateInputType = {
    id?: true
    key?: true
    name?: true
    active?: true
    createdAt?: true
    revokedAt?: true
  }

  export type ExternalApiKeyMaxAggregateInputType = {
    id?: true
    key?: true
    name?: true
    active?: true
    createdAt?: true
    revokedAt?: true
  }

  export type ExternalApiKeyCountAggregateInputType = {
    id?: true
    key?: true
    name?: true
    active?: true
    createdAt?: true
    revokedAt?: true
    _all?: true
  }

  export type ExternalApiKeyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalApiKey to aggregate.
     */
    where?: ExternalApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalApiKeys to fetch.
     */
    orderBy?: ExternalApiKeyOrderByWithRelationInput | ExternalApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExternalApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ExternalApiKeys
    **/
    _count?: true | ExternalApiKeyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExternalApiKeyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExternalApiKeyMaxAggregateInputType
  }

  export type GetExternalApiKeyAggregateType<T extends ExternalApiKeyAggregateArgs> = {
        [P in keyof T & keyof AggregateExternalApiKey]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExternalApiKey[P]>
      : GetScalarType<T[P], AggregateExternalApiKey[P]>
  }




  export type ExternalApiKeyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalApiKeyWhereInput
    orderBy?: ExternalApiKeyOrderByWithAggregationInput | ExternalApiKeyOrderByWithAggregationInput[]
    by: ExternalApiKeyScalarFieldEnum[] | ExternalApiKeyScalarFieldEnum
    having?: ExternalApiKeyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExternalApiKeyCountAggregateInputType | true
    _min?: ExternalApiKeyMinAggregateInputType
    _max?: ExternalApiKeyMaxAggregateInputType
  }

  export type ExternalApiKeyGroupByOutputType = {
    id: string
    key: string
    name: string
    active: boolean
    createdAt: Date
    revokedAt: Date | null
    _count: ExternalApiKeyCountAggregateOutputType | null
    _min: ExternalApiKeyMinAggregateOutputType | null
    _max: ExternalApiKeyMaxAggregateOutputType | null
  }

  type GetExternalApiKeyGroupByPayload<T extends ExternalApiKeyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExternalApiKeyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExternalApiKeyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExternalApiKeyGroupByOutputType[P]>
            : GetScalarType<T[P], ExternalApiKeyGroupByOutputType[P]>
        }
      >
    >


  export type ExternalApiKeySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    name?: boolean
    active?: boolean
    createdAt?: boolean
    revokedAt?: boolean
  }, ExtArgs["result"]["externalApiKey"]>

  export type ExternalApiKeySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    name?: boolean
    active?: boolean
    createdAt?: boolean
    revokedAt?: boolean
  }, ExtArgs["result"]["externalApiKey"]>

  export type ExternalApiKeySelectScalar = {
    id?: boolean
    key?: boolean
    name?: boolean
    active?: boolean
    createdAt?: boolean
    revokedAt?: boolean
  }


  export type $ExternalApiKeyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ExternalApiKey"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      key: string
      name: string
      active: boolean
      createdAt: Date
      revokedAt: Date | null
    }, ExtArgs["result"]["externalApiKey"]>
    composites: {}
  }

  type ExternalApiKeyGetPayload<S extends boolean | null | undefined | ExternalApiKeyDefaultArgs> = $Result.GetResult<Prisma.$ExternalApiKeyPayload, S>

  type ExternalApiKeyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ExternalApiKeyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ExternalApiKeyCountAggregateInputType | true
    }

  export interface ExternalApiKeyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExternalApiKey'], meta: { name: 'ExternalApiKey' } }
    /**
     * Find zero or one ExternalApiKey that matches the filter.
     * @param {ExternalApiKeyFindUniqueArgs} args - Arguments to find a ExternalApiKey
     * @example
     * // Get one ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExternalApiKeyFindUniqueArgs>(args: SelectSubset<T, ExternalApiKeyFindUniqueArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ExternalApiKey that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ExternalApiKeyFindUniqueOrThrowArgs} args - Arguments to find a ExternalApiKey
     * @example
     * // Get one ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExternalApiKeyFindUniqueOrThrowArgs>(args: SelectSubset<T, ExternalApiKeyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ExternalApiKey that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyFindFirstArgs} args - Arguments to find a ExternalApiKey
     * @example
     * // Get one ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExternalApiKeyFindFirstArgs>(args?: SelectSubset<T, ExternalApiKeyFindFirstArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ExternalApiKey that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyFindFirstOrThrowArgs} args - Arguments to find a ExternalApiKey
     * @example
     * // Get one ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExternalApiKeyFindFirstOrThrowArgs>(args?: SelectSubset<T, ExternalApiKeyFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ExternalApiKeys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ExternalApiKeys
     * const externalApiKeys = await prisma.externalApiKey.findMany()
     * 
     * // Get first 10 ExternalApiKeys
     * const externalApiKeys = await prisma.externalApiKey.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const externalApiKeyWithIdOnly = await prisma.externalApiKey.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExternalApiKeyFindManyArgs>(args?: SelectSubset<T, ExternalApiKeyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ExternalApiKey.
     * @param {ExternalApiKeyCreateArgs} args - Arguments to create a ExternalApiKey.
     * @example
     * // Create one ExternalApiKey
     * const ExternalApiKey = await prisma.externalApiKey.create({
     *   data: {
     *     // ... data to create a ExternalApiKey
     *   }
     * })
     * 
     */
    create<T extends ExternalApiKeyCreateArgs>(args: SelectSubset<T, ExternalApiKeyCreateArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ExternalApiKeys.
     * @param {ExternalApiKeyCreateManyArgs} args - Arguments to create many ExternalApiKeys.
     * @example
     * // Create many ExternalApiKeys
     * const externalApiKey = await prisma.externalApiKey.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExternalApiKeyCreateManyArgs>(args?: SelectSubset<T, ExternalApiKeyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ExternalApiKeys and returns the data saved in the database.
     * @param {ExternalApiKeyCreateManyAndReturnArgs} args - Arguments to create many ExternalApiKeys.
     * @example
     * // Create many ExternalApiKeys
     * const externalApiKey = await prisma.externalApiKey.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ExternalApiKeys and only return the `id`
     * const externalApiKeyWithIdOnly = await prisma.externalApiKey.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExternalApiKeyCreateManyAndReturnArgs>(args?: SelectSubset<T, ExternalApiKeyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ExternalApiKey.
     * @param {ExternalApiKeyDeleteArgs} args - Arguments to delete one ExternalApiKey.
     * @example
     * // Delete one ExternalApiKey
     * const ExternalApiKey = await prisma.externalApiKey.delete({
     *   where: {
     *     // ... filter to delete one ExternalApiKey
     *   }
     * })
     * 
     */
    delete<T extends ExternalApiKeyDeleteArgs>(args: SelectSubset<T, ExternalApiKeyDeleteArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ExternalApiKey.
     * @param {ExternalApiKeyUpdateArgs} args - Arguments to update one ExternalApiKey.
     * @example
     * // Update one ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExternalApiKeyUpdateArgs>(args: SelectSubset<T, ExternalApiKeyUpdateArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ExternalApiKeys.
     * @param {ExternalApiKeyDeleteManyArgs} args - Arguments to filter ExternalApiKeys to delete.
     * @example
     * // Delete a few ExternalApiKeys
     * const { count } = await prisma.externalApiKey.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExternalApiKeyDeleteManyArgs>(args?: SelectSubset<T, ExternalApiKeyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExternalApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ExternalApiKeys
     * const externalApiKey = await prisma.externalApiKey.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExternalApiKeyUpdateManyArgs>(args: SelectSubset<T, ExternalApiKeyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ExternalApiKey.
     * @param {ExternalApiKeyUpsertArgs} args - Arguments to update or create a ExternalApiKey.
     * @example
     * // Update or create a ExternalApiKey
     * const externalApiKey = await prisma.externalApiKey.upsert({
     *   create: {
     *     // ... data to create a ExternalApiKey
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ExternalApiKey we want to update
     *   }
     * })
     */
    upsert<T extends ExternalApiKeyUpsertArgs>(args: SelectSubset<T, ExternalApiKeyUpsertArgs<ExtArgs>>): Prisma__ExternalApiKeyClient<$Result.GetResult<Prisma.$ExternalApiKeyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ExternalApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyCountArgs} args - Arguments to filter ExternalApiKeys to count.
     * @example
     * // Count the number of ExternalApiKeys
     * const count = await prisma.externalApiKey.count({
     *   where: {
     *     // ... the filter for the ExternalApiKeys we want to count
     *   }
     * })
    **/
    count<T extends ExternalApiKeyCountArgs>(
      args?: Subset<T, ExternalApiKeyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExternalApiKeyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ExternalApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExternalApiKeyAggregateArgs>(args: Subset<T, ExternalApiKeyAggregateArgs>): Prisma.PrismaPromise<GetExternalApiKeyAggregateType<T>>

    /**
     * Group by ExternalApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalApiKeyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExternalApiKeyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExternalApiKeyGroupByArgs['orderBy'] }
        : { orderBy?: ExternalApiKeyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExternalApiKeyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExternalApiKeyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ExternalApiKey model
   */
  readonly fields: ExternalApiKeyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ExternalApiKey.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExternalApiKeyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ExternalApiKey model
   */ 
  interface ExternalApiKeyFieldRefs {
    readonly id: FieldRef<"ExternalApiKey", 'String'>
    readonly key: FieldRef<"ExternalApiKey", 'String'>
    readonly name: FieldRef<"ExternalApiKey", 'String'>
    readonly active: FieldRef<"ExternalApiKey", 'Boolean'>
    readonly createdAt: FieldRef<"ExternalApiKey", 'DateTime'>
    readonly revokedAt: FieldRef<"ExternalApiKey", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ExternalApiKey findUnique
   */
  export type ExternalApiKeyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter, which ExternalApiKey to fetch.
     */
    where: ExternalApiKeyWhereUniqueInput
  }

  /**
   * ExternalApiKey findUniqueOrThrow
   */
  export type ExternalApiKeyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter, which ExternalApiKey to fetch.
     */
    where: ExternalApiKeyWhereUniqueInput
  }

  /**
   * ExternalApiKey findFirst
   */
  export type ExternalApiKeyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter, which ExternalApiKey to fetch.
     */
    where?: ExternalApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalApiKeys to fetch.
     */
    orderBy?: ExternalApiKeyOrderByWithRelationInput | ExternalApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalApiKeys.
     */
    cursor?: ExternalApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalApiKeys.
     */
    distinct?: ExternalApiKeyScalarFieldEnum | ExternalApiKeyScalarFieldEnum[]
  }

  /**
   * ExternalApiKey findFirstOrThrow
   */
  export type ExternalApiKeyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter, which ExternalApiKey to fetch.
     */
    where?: ExternalApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalApiKeys to fetch.
     */
    orderBy?: ExternalApiKeyOrderByWithRelationInput | ExternalApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalApiKeys.
     */
    cursor?: ExternalApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalApiKeys.
     */
    distinct?: ExternalApiKeyScalarFieldEnum | ExternalApiKeyScalarFieldEnum[]
  }

  /**
   * ExternalApiKey findMany
   */
  export type ExternalApiKeyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter, which ExternalApiKeys to fetch.
     */
    where?: ExternalApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalApiKeys to fetch.
     */
    orderBy?: ExternalApiKeyOrderByWithRelationInput | ExternalApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ExternalApiKeys.
     */
    cursor?: ExternalApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalApiKeys.
     */
    skip?: number
    distinct?: ExternalApiKeyScalarFieldEnum | ExternalApiKeyScalarFieldEnum[]
  }

  /**
   * ExternalApiKey create
   */
  export type ExternalApiKeyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * The data needed to create a ExternalApiKey.
     */
    data: XOR<ExternalApiKeyCreateInput, ExternalApiKeyUncheckedCreateInput>
  }

  /**
   * ExternalApiKey createMany
   */
  export type ExternalApiKeyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ExternalApiKeys.
     */
    data: ExternalApiKeyCreateManyInput | ExternalApiKeyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExternalApiKey createManyAndReturn
   */
  export type ExternalApiKeyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ExternalApiKeys.
     */
    data: ExternalApiKeyCreateManyInput | ExternalApiKeyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExternalApiKey update
   */
  export type ExternalApiKeyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * The data needed to update a ExternalApiKey.
     */
    data: XOR<ExternalApiKeyUpdateInput, ExternalApiKeyUncheckedUpdateInput>
    /**
     * Choose, which ExternalApiKey to update.
     */
    where: ExternalApiKeyWhereUniqueInput
  }

  /**
   * ExternalApiKey updateMany
   */
  export type ExternalApiKeyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ExternalApiKeys.
     */
    data: XOR<ExternalApiKeyUpdateManyMutationInput, ExternalApiKeyUncheckedUpdateManyInput>
    /**
     * Filter which ExternalApiKeys to update
     */
    where?: ExternalApiKeyWhereInput
  }

  /**
   * ExternalApiKey upsert
   */
  export type ExternalApiKeyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * The filter to search for the ExternalApiKey to update in case it exists.
     */
    where: ExternalApiKeyWhereUniqueInput
    /**
     * In case the ExternalApiKey found by the `where` argument doesn't exist, create a new ExternalApiKey with this data.
     */
    create: XOR<ExternalApiKeyCreateInput, ExternalApiKeyUncheckedCreateInput>
    /**
     * In case the ExternalApiKey was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExternalApiKeyUpdateInput, ExternalApiKeyUncheckedUpdateInput>
  }

  /**
   * ExternalApiKey delete
   */
  export type ExternalApiKeyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
    /**
     * Filter which ExternalApiKey to delete.
     */
    where: ExternalApiKeyWhereUniqueInput
  }

  /**
   * ExternalApiKey deleteMany
   */
  export type ExternalApiKeyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalApiKeys to delete
     */
    where?: ExternalApiKeyWhereInput
  }

  /**
   * ExternalApiKey without action
   */
  export type ExternalApiKeyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalApiKey
     */
    select?: ExternalApiKeySelect<ExtArgs> | null
  }


  /**
   * Model Institution
   */

  export type AggregateInstitution = {
    _count: InstitutionCountAggregateOutputType | null
    _avg: InstitutionAvgAggregateOutputType | null
    _sum: InstitutionSumAggregateOutputType | null
    _min: InstitutionMinAggregateOutputType | null
    _max: InstitutionMaxAggregateOutputType | null
  }

  export type InstitutionAvgAggregateOutputType = {
    population: number | null
  }

  export type InstitutionSumAggregateOutputType = {
    population: number | null
  }

  export type InstitutionMinAggregateOutputType = {
    id: string | null
    name: string | null
    department: string | null
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean | null
    username: string | null
    password: string | null
    email: string | null
    phone: string | null
    institutionType: $Enums.InstitutionType | null
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InstitutionMaxAggregateOutputType = {
    id: string | null
    name: string | null
    department: string | null
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean | null
    username: string | null
    password: string | null
    email: string | null
    phone: string | null
    institutionType: $Enums.InstitutionType | null
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InstitutionCountAggregateOutputType = {
    id: number
    name: number
    department: number
    region: number
    population: number
    mayorName: number
    mayorEmail: number
    mayorPhone: number
    address: number
    website: number
    isActive: number
    username: number
    password: number
    email: number
    phone: number
    institutionType: number
    customType: number
    primaryColor: number
    secondaryColor: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InstitutionAvgAggregateInputType = {
    population?: true
  }

  export type InstitutionSumAggregateInputType = {
    population?: true
  }

  export type InstitutionMinAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InstitutionMaxAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InstitutionCountAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InstitutionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Institution to aggregate.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Institutions
    **/
    _count?: true | InstitutionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InstitutionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InstitutionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstitutionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstitutionMaxAggregateInputType
  }

  export type GetInstitutionAggregateType<T extends InstitutionAggregateArgs> = {
        [P in keyof T & keyof AggregateInstitution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstitution[P]>
      : GetScalarType<T[P], AggregateInstitution[P]>
  }




  export type InstitutionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitutionWhereInput
    orderBy?: InstitutionOrderByWithAggregationInput | InstitutionOrderByWithAggregationInput[]
    by: InstitutionScalarFieldEnum[] | InstitutionScalarFieldEnum
    having?: InstitutionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstitutionCountAggregateInputType | true
    _avg?: InstitutionAvgAggregateInputType
    _sum?: InstitutionSumAggregateInputType
    _min?: InstitutionMinAggregateInputType
    _max?: InstitutionMaxAggregateInputType
  }

  export type InstitutionGroupByOutputType = {
    id: string
    name: string
    department: string
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean
    username: string
    password: string
    email: string
    phone: string | null
    institutionType: $Enums.InstitutionType
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string
    createdAt: Date
    updatedAt: Date
    _count: InstitutionCountAggregateOutputType | null
    _avg: InstitutionAvgAggregateOutputType | null
    _sum: InstitutionSumAggregateOutputType | null
    _min: InstitutionMinAggregateOutputType | null
    _max: InstitutionMaxAggregateOutputType | null
  }

  type GetInstitutionGroupByPayload<T extends InstitutionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstitutionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstitutionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstitutionGroupByOutputType[P]>
            : GetScalarType<T[P], InstitutionGroupByOutputType[P]>
        }
      >
    >


  export type InstitutionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institution"]>

  export type InstitutionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institution"]>

  export type InstitutionSelectScalar = {
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InstitutionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InstitutionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InstitutionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Institution"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      department: string
      region: string | null
      population: number | null
      mayorName: string | null
      mayorEmail: string | null
      mayorPhone: string | null
      address: string | null
      website: string | null
      isActive: boolean
      username: string
      password: string
      email: string
      phone: string | null
      institutionType: $Enums.InstitutionType
      customType: string | null
      primaryColor: string | null
      secondaryColor: string | null
      createdBy: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["institution"]>
    composites: {}
  }

  type InstitutionGetPayload<S extends boolean | null | undefined | InstitutionDefaultArgs> = $Result.GetResult<Prisma.$InstitutionPayload, S>

  type InstitutionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InstitutionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InstitutionCountAggregateInputType | true
    }

  export interface InstitutionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Institution'], meta: { name: 'Institution' } }
    /**
     * Find zero or one Institution that matches the filter.
     * @param {InstitutionFindUniqueArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InstitutionFindUniqueArgs>(args: SelectSubset<T, InstitutionFindUniqueArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Institution that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InstitutionFindUniqueOrThrowArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InstitutionFindUniqueOrThrowArgs>(args: SelectSubset<T, InstitutionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Institution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindFirstArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InstitutionFindFirstArgs>(args?: SelectSubset<T, InstitutionFindFirstArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Institution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindFirstOrThrowArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InstitutionFindFirstOrThrowArgs>(args?: SelectSubset<T, InstitutionFindFirstOrThrowArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Institutions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Institutions
     * const institutions = await prisma.institution.findMany()
     * 
     * // Get first 10 Institutions
     * const institutions = await prisma.institution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const institutionWithIdOnly = await prisma.institution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InstitutionFindManyArgs>(args?: SelectSubset<T, InstitutionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Institution.
     * @param {InstitutionCreateArgs} args - Arguments to create a Institution.
     * @example
     * // Create one Institution
     * const Institution = await prisma.institution.create({
     *   data: {
     *     // ... data to create a Institution
     *   }
     * })
     * 
     */
    create<T extends InstitutionCreateArgs>(args: SelectSubset<T, InstitutionCreateArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Institutions.
     * @param {InstitutionCreateManyArgs} args - Arguments to create many Institutions.
     * @example
     * // Create many Institutions
     * const institution = await prisma.institution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InstitutionCreateManyArgs>(args?: SelectSubset<T, InstitutionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Institutions and returns the data saved in the database.
     * @param {InstitutionCreateManyAndReturnArgs} args - Arguments to create many Institutions.
     * @example
     * // Create many Institutions
     * const institution = await prisma.institution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Institutions and only return the `id`
     * const institutionWithIdOnly = await prisma.institution.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InstitutionCreateManyAndReturnArgs>(args?: SelectSubset<T, InstitutionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Institution.
     * @param {InstitutionDeleteArgs} args - Arguments to delete one Institution.
     * @example
     * // Delete one Institution
     * const Institution = await prisma.institution.delete({
     *   where: {
     *     // ... filter to delete one Institution
     *   }
     * })
     * 
     */
    delete<T extends InstitutionDeleteArgs>(args: SelectSubset<T, InstitutionDeleteArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Institution.
     * @param {InstitutionUpdateArgs} args - Arguments to update one Institution.
     * @example
     * // Update one Institution
     * const institution = await prisma.institution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InstitutionUpdateArgs>(args: SelectSubset<T, InstitutionUpdateArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Institutions.
     * @param {InstitutionDeleteManyArgs} args - Arguments to filter Institutions to delete.
     * @example
     * // Delete a few Institutions
     * const { count } = await prisma.institution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InstitutionDeleteManyArgs>(args?: SelectSubset<T, InstitutionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Institutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Institutions
     * const institution = await prisma.institution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InstitutionUpdateManyArgs>(args: SelectSubset<T, InstitutionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Institution.
     * @param {InstitutionUpsertArgs} args - Arguments to update or create a Institution.
     * @example
     * // Update or create a Institution
     * const institution = await prisma.institution.upsert({
     *   create: {
     *     // ... data to create a Institution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Institution we want to update
     *   }
     * })
     */
    upsert<T extends InstitutionUpsertArgs>(args: SelectSubset<T, InstitutionUpsertArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Institutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionCountArgs} args - Arguments to filter Institutions to count.
     * @example
     * // Count the number of Institutions
     * const count = await prisma.institution.count({
     *   where: {
     *     // ... the filter for the Institutions we want to count
     *   }
     * })
    **/
    count<T extends InstitutionCountArgs>(
      args?: Subset<T, InstitutionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstitutionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Institution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstitutionAggregateArgs>(args: Subset<T, InstitutionAggregateArgs>): Prisma.PrismaPromise<GetInstitutionAggregateType<T>>

    /**
     * Group by Institution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InstitutionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InstitutionGroupByArgs['orderBy'] }
        : { orderBy?: InstitutionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InstitutionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstitutionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Institution model
   */
  readonly fields: InstitutionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Institution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InstitutionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Institution model
   */ 
  interface InstitutionFieldRefs {
    readonly id: FieldRef<"Institution", 'String'>
    readonly name: FieldRef<"Institution", 'String'>
    readonly department: FieldRef<"Institution", 'String'>
    readonly region: FieldRef<"Institution", 'String'>
    readonly population: FieldRef<"Institution", 'Int'>
    readonly mayorName: FieldRef<"Institution", 'String'>
    readonly mayorEmail: FieldRef<"Institution", 'String'>
    readonly mayorPhone: FieldRef<"Institution", 'String'>
    readonly address: FieldRef<"Institution", 'String'>
    readonly website: FieldRef<"Institution", 'String'>
    readonly isActive: FieldRef<"Institution", 'Boolean'>
    readonly username: FieldRef<"Institution", 'String'>
    readonly password: FieldRef<"Institution", 'String'>
    readonly email: FieldRef<"Institution", 'String'>
    readonly phone: FieldRef<"Institution", 'String'>
    readonly institutionType: FieldRef<"Institution", 'InstitutionType'>
    readonly customType: FieldRef<"Institution", 'String'>
    readonly primaryColor: FieldRef<"Institution", 'String'>
    readonly secondaryColor: FieldRef<"Institution", 'String'>
    readonly createdBy: FieldRef<"Institution", 'String'>
    readonly createdAt: FieldRef<"Institution", 'DateTime'>
    readonly updatedAt: FieldRef<"Institution", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Institution findUnique
   */
  export type InstitutionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution findUniqueOrThrow
   */
  export type InstitutionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution findFirst
   */
  export type InstitutionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Institutions.
     */
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution findFirstOrThrow
   */
  export type InstitutionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Institutions.
     */
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution findMany
   */
  export type InstitutionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institutions to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution create
   */
  export type InstitutionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The data needed to create a Institution.
     */
    data: XOR<InstitutionCreateInput, InstitutionUncheckedCreateInput>
  }

  /**
   * Institution createMany
   */
  export type InstitutionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Institutions.
     */
    data: InstitutionCreateManyInput | InstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Institution createManyAndReturn
   */
  export type InstitutionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Institutions.
     */
    data: InstitutionCreateManyInput | InstitutionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Institution update
   */
  export type InstitutionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The data needed to update a Institution.
     */
    data: XOR<InstitutionUpdateInput, InstitutionUncheckedUpdateInput>
    /**
     * Choose, which Institution to update.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution updateMany
   */
  export type InstitutionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Institutions.
     */
    data: XOR<InstitutionUpdateManyMutationInput, InstitutionUncheckedUpdateManyInput>
    /**
     * Filter which Institutions to update
     */
    where?: InstitutionWhereInput
  }

  /**
   * Institution upsert
   */
  export type InstitutionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The filter to search for the Institution to update in case it exists.
     */
    where: InstitutionWhereUniqueInput
    /**
     * In case the Institution found by the `where` argument doesn't exist, create a new Institution with this data.
     */
    create: XOR<InstitutionCreateInput, InstitutionUncheckedCreateInput>
    /**
     * In case the Institution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InstitutionUpdateInput, InstitutionUncheckedUpdateInput>
  }

  /**
   * Institution delete
   */
  export type InstitutionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter which Institution to delete.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution deleteMany
   */
  export type InstitutionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Institutions to delete
     */
    where?: InstitutionWhereInput
  }

  /**
   * Institution without action
   */
  export type InstitutionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
  }


  /**
   * Model Municipality
   */

  export type AggregateMunicipality = {
    _count: MunicipalityCountAggregateOutputType | null
    _avg: MunicipalityAvgAggregateOutputType | null
    _sum: MunicipalitySumAggregateOutputType | null
    _min: MunicipalityMinAggregateOutputType | null
    _max: MunicipalityMaxAggregateOutputType | null
  }

  export type MunicipalityAvgAggregateOutputType = {
    population: number | null
  }

  export type MunicipalitySumAggregateOutputType = {
    population: number | null
  }

  export type MunicipalityMinAggregateOutputType = {
    id: string | null
    name: string | null
    department: string | null
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean | null
    username: string | null
    password: string | null
    email: string | null
    phone: string | null
    institutionType: $Enums.InstitutionType | null
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MunicipalityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    department: string | null
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean | null
    username: string | null
    password: string | null
    email: string | null
    phone: string | null
    institutionType: $Enums.InstitutionType | null
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MunicipalityCountAggregateOutputType = {
    id: number
    name: number
    department: number
    region: number
    population: number
    mayorName: number
    mayorEmail: number
    mayorPhone: number
    address: number
    website: number
    isActive: number
    username: number
    password: number
    email: number
    phone: number
    institutionType: number
    customType: number
    primaryColor: number
    secondaryColor: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MunicipalityAvgAggregateInputType = {
    population?: true
  }

  export type MunicipalitySumAggregateInputType = {
    population?: true
  }

  export type MunicipalityMinAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MunicipalityMaxAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MunicipalityCountAggregateInputType = {
    id?: true
    name?: true
    department?: true
    region?: true
    population?: true
    mayorName?: true
    mayorEmail?: true
    mayorPhone?: true
    address?: true
    website?: true
    isActive?: true
    username?: true
    password?: true
    email?: true
    phone?: true
    institutionType?: true
    customType?: true
    primaryColor?: true
    secondaryColor?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MunicipalityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipality to aggregate.
     */
    where?: MunicipalityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipalities to fetch.
     */
    orderBy?: MunicipalityOrderByWithRelationInput | MunicipalityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MunicipalityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipalities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipalities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Municipalities
    **/
    _count?: true | MunicipalityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MunicipalityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MunicipalitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MunicipalityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MunicipalityMaxAggregateInputType
  }

  export type GetMunicipalityAggregateType<T extends MunicipalityAggregateArgs> = {
        [P in keyof T & keyof AggregateMunicipality]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMunicipality[P]>
      : GetScalarType<T[P], AggregateMunicipality[P]>
  }




  export type MunicipalityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipalityWhereInput
    orderBy?: MunicipalityOrderByWithAggregationInput | MunicipalityOrderByWithAggregationInput[]
    by: MunicipalityScalarFieldEnum[] | MunicipalityScalarFieldEnum
    having?: MunicipalityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MunicipalityCountAggregateInputType | true
    _avg?: MunicipalityAvgAggregateInputType
    _sum?: MunicipalitySumAggregateInputType
    _min?: MunicipalityMinAggregateInputType
    _max?: MunicipalityMaxAggregateInputType
  }

  export type MunicipalityGroupByOutputType = {
    id: string
    name: string
    department: string
    region: string | null
    population: number | null
    mayorName: string | null
    mayorEmail: string | null
    mayorPhone: string | null
    address: string | null
    website: string | null
    isActive: boolean
    username: string
    password: string
    email: string
    phone: string | null
    institutionType: $Enums.InstitutionType
    customType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    createdBy: string
    createdAt: Date
    updatedAt: Date
    _count: MunicipalityCountAggregateOutputType | null
    _avg: MunicipalityAvgAggregateOutputType | null
    _sum: MunicipalitySumAggregateOutputType | null
    _min: MunicipalityMinAggregateOutputType | null
    _max: MunicipalityMaxAggregateOutputType | null
  }

  type GetMunicipalityGroupByPayload<T extends MunicipalityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MunicipalityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MunicipalityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MunicipalityGroupByOutputType[P]>
            : GetScalarType<T[P], MunicipalityGroupByOutputType[P]>
        }
      >
    >


  export type MunicipalitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companies?: boolean | Municipality$companiesArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | MunicipalityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipality"]>

  export type MunicipalitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipality"]>

  export type MunicipalitySelectScalar = {
    id?: boolean
    name?: boolean
    department?: boolean
    region?: boolean
    population?: boolean
    mayorName?: boolean
    mayorEmail?: boolean
    mayorPhone?: boolean
    address?: boolean
    website?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    phone?: boolean
    institutionType?: boolean
    customType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MunicipalityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    companies?: boolean | Municipality$companiesArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | MunicipalityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MunicipalityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MunicipalityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Municipality"
    objects: {
      companies: Prisma.$CompanyPayload<ExtArgs>[]
      creator: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      department: string
      region: string | null
      population: number | null
      mayorName: string | null
      mayorEmail: string | null
      mayorPhone: string | null
      address: string | null
      website: string | null
      isActive: boolean
      username: string
      password: string
      email: string
      phone: string | null
      institutionType: $Enums.InstitutionType
      customType: string | null
      primaryColor: string | null
      secondaryColor: string | null
      createdBy: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["municipality"]>
    composites: {}
  }

  type MunicipalityGetPayload<S extends boolean | null | undefined | MunicipalityDefaultArgs> = $Result.GetResult<Prisma.$MunicipalityPayload, S>

  type MunicipalityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MunicipalityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MunicipalityCountAggregateInputType | true
    }

  export interface MunicipalityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Municipality'], meta: { name: 'Municipality' } }
    /**
     * Find zero or one Municipality that matches the filter.
     * @param {MunicipalityFindUniqueArgs} args - Arguments to find a Municipality
     * @example
     * // Get one Municipality
     * const municipality = await prisma.municipality.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MunicipalityFindUniqueArgs>(args: SelectSubset<T, MunicipalityFindUniqueArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Municipality that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MunicipalityFindUniqueOrThrowArgs} args - Arguments to find a Municipality
     * @example
     * // Get one Municipality
     * const municipality = await prisma.municipality.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MunicipalityFindUniqueOrThrowArgs>(args: SelectSubset<T, MunicipalityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Municipality that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityFindFirstArgs} args - Arguments to find a Municipality
     * @example
     * // Get one Municipality
     * const municipality = await prisma.municipality.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MunicipalityFindFirstArgs>(args?: SelectSubset<T, MunicipalityFindFirstArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Municipality that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityFindFirstOrThrowArgs} args - Arguments to find a Municipality
     * @example
     * // Get one Municipality
     * const municipality = await prisma.municipality.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MunicipalityFindFirstOrThrowArgs>(args?: SelectSubset<T, MunicipalityFindFirstOrThrowArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Municipalities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Municipalities
     * const municipalities = await prisma.municipality.findMany()
     * 
     * // Get first 10 Municipalities
     * const municipalities = await prisma.municipality.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const municipalityWithIdOnly = await prisma.municipality.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MunicipalityFindManyArgs>(args?: SelectSubset<T, MunicipalityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Municipality.
     * @param {MunicipalityCreateArgs} args - Arguments to create a Municipality.
     * @example
     * // Create one Municipality
     * const Municipality = await prisma.municipality.create({
     *   data: {
     *     // ... data to create a Municipality
     *   }
     * })
     * 
     */
    create<T extends MunicipalityCreateArgs>(args: SelectSubset<T, MunicipalityCreateArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Municipalities.
     * @param {MunicipalityCreateManyArgs} args - Arguments to create many Municipalities.
     * @example
     * // Create many Municipalities
     * const municipality = await prisma.municipality.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MunicipalityCreateManyArgs>(args?: SelectSubset<T, MunicipalityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Municipalities and returns the data saved in the database.
     * @param {MunicipalityCreateManyAndReturnArgs} args - Arguments to create many Municipalities.
     * @example
     * // Create many Municipalities
     * const municipality = await prisma.municipality.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Municipalities and only return the `id`
     * const municipalityWithIdOnly = await prisma.municipality.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MunicipalityCreateManyAndReturnArgs>(args?: SelectSubset<T, MunicipalityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Municipality.
     * @param {MunicipalityDeleteArgs} args - Arguments to delete one Municipality.
     * @example
     * // Delete one Municipality
     * const Municipality = await prisma.municipality.delete({
     *   where: {
     *     // ... filter to delete one Municipality
     *   }
     * })
     * 
     */
    delete<T extends MunicipalityDeleteArgs>(args: SelectSubset<T, MunicipalityDeleteArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Municipality.
     * @param {MunicipalityUpdateArgs} args - Arguments to update one Municipality.
     * @example
     * // Update one Municipality
     * const municipality = await prisma.municipality.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MunicipalityUpdateArgs>(args: SelectSubset<T, MunicipalityUpdateArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Municipalities.
     * @param {MunicipalityDeleteManyArgs} args - Arguments to filter Municipalities to delete.
     * @example
     * // Delete a few Municipalities
     * const { count } = await prisma.municipality.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MunicipalityDeleteManyArgs>(args?: SelectSubset<T, MunicipalityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Municipalities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Municipalities
     * const municipality = await prisma.municipality.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MunicipalityUpdateManyArgs>(args: SelectSubset<T, MunicipalityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Municipality.
     * @param {MunicipalityUpsertArgs} args - Arguments to update or create a Municipality.
     * @example
     * // Update or create a Municipality
     * const municipality = await prisma.municipality.upsert({
     *   create: {
     *     // ... data to create a Municipality
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Municipality we want to update
     *   }
     * })
     */
    upsert<T extends MunicipalityUpsertArgs>(args: SelectSubset<T, MunicipalityUpsertArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Municipalities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityCountArgs} args - Arguments to filter Municipalities to count.
     * @example
     * // Count the number of Municipalities
     * const count = await prisma.municipality.count({
     *   where: {
     *     // ... the filter for the Municipalities we want to count
     *   }
     * })
    **/
    count<T extends MunicipalityCountArgs>(
      args?: Subset<T, MunicipalityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MunicipalityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Municipality.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MunicipalityAggregateArgs>(args: Subset<T, MunicipalityAggregateArgs>): Prisma.PrismaPromise<GetMunicipalityAggregateType<T>>

    /**
     * Group by Municipality.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipalityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MunicipalityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MunicipalityGroupByArgs['orderBy'] }
        : { orderBy?: MunicipalityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MunicipalityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMunicipalityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Municipality model
   */
  readonly fields: MunicipalityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Municipality.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MunicipalityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    companies<T extends Municipality$companiesArgs<ExtArgs> = {}>(args?: Subset<T, Municipality$companiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany"> | Null>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Municipality model
   */ 
  interface MunicipalityFieldRefs {
    readonly id: FieldRef<"Municipality", 'String'>
    readonly name: FieldRef<"Municipality", 'String'>
    readonly department: FieldRef<"Municipality", 'String'>
    readonly region: FieldRef<"Municipality", 'String'>
    readonly population: FieldRef<"Municipality", 'Int'>
    readonly mayorName: FieldRef<"Municipality", 'String'>
    readonly mayorEmail: FieldRef<"Municipality", 'String'>
    readonly mayorPhone: FieldRef<"Municipality", 'String'>
    readonly address: FieldRef<"Municipality", 'String'>
    readonly website: FieldRef<"Municipality", 'String'>
    readonly isActive: FieldRef<"Municipality", 'Boolean'>
    readonly username: FieldRef<"Municipality", 'String'>
    readonly password: FieldRef<"Municipality", 'String'>
    readonly email: FieldRef<"Municipality", 'String'>
    readonly phone: FieldRef<"Municipality", 'String'>
    readonly institutionType: FieldRef<"Municipality", 'InstitutionType'>
    readonly customType: FieldRef<"Municipality", 'String'>
    readonly primaryColor: FieldRef<"Municipality", 'String'>
    readonly secondaryColor: FieldRef<"Municipality", 'String'>
    readonly createdBy: FieldRef<"Municipality", 'String'>
    readonly createdAt: FieldRef<"Municipality", 'DateTime'>
    readonly updatedAt: FieldRef<"Municipality", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Municipality findUnique
   */
  export type MunicipalityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter, which Municipality to fetch.
     */
    where: MunicipalityWhereUniqueInput
  }

  /**
   * Municipality findUniqueOrThrow
   */
  export type MunicipalityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter, which Municipality to fetch.
     */
    where: MunicipalityWhereUniqueInput
  }

  /**
   * Municipality findFirst
   */
  export type MunicipalityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter, which Municipality to fetch.
     */
    where?: MunicipalityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipalities to fetch.
     */
    orderBy?: MunicipalityOrderByWithRelationInput | MunicipalityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipalities.
     */
    cursor?: MunicipalityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipalities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipalities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipalities.
     */
    distinct?: MunicipalityScalarFieldEnum | MunicipalityScalarFieldEnum[]
  }

  /**
   * Municipality findFirstOrThrow
   */
  export type MunicipalityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter, which Municipality to fetch.
     */
    where?: MunicipalityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipalities to fetch.
     */
    orderBy?: MunicipalityOrderByWithRelationInput | MunicipalityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipalities.
     */
    cursor?: MunicipalityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipalities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipalities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipalities.
     */
    distinct?: MunicipalityScalarFieldEnum | MunicipalityScalarFieldEnum[]
  }

  /**
   * Municipality findMany
   */
  export type MunicipalityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter, which Municipalities to fetch.
     */
    where?: MunicipalityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipalities to fetch.
     */
    orderBy?: MunicipalityOrderByWithRelationInput | MunicipalityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Municipalities.
     */
    cursor?: MunicipalityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipalities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipalities.
     */
    skip?: number
    distinct?: MunicipalityScalarFieldEnum | MunicipalityScalarFieldEnum[]
  }

  /**
   * Municipality create
   */
  export type MunicipalityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * The data needed to create a Municipality.
     */
    data: XOR<MunicipalityCreateInput, MunicipalityUncheckedCreateInput>
  }

  /**
   * Municipality createMany
   */
  export type MunicipalityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Municipalities.
     */
    data: MunicipalityCreateManyInput | MunicipalityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Municipality createManyAndReturn
   */
  export type MunicipalityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Municipalities.
     */
    data: MunicipalityCreateManyInput | MunicipalityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Municipality update
   */
  export type MunicipalityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * The data needed to update a Municipality.
     */
    data: XOR<MunicipalityUpdateInput, MunicipalityUncheckedUpdateInput>
    /**
     * Choose, which Municipality to update.
     */
    where: MunicipalityWhereUniqueInput
  }

  /**
   * Municipality updateMany
   */
  export type MunicipalityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Municipalities.
     */
    data: XOR<MunicipalityUpdateManyMutationInput, MunicipalityUncheckedUpdateManyInput>
    /**
     * Filter which Municipalities to update
     */
    where?: MunicipalityWhereInput
  }

  /**
   * Municipality upsert
   */
  export type MunicipalityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * The filter to search for the Municipality to update in case it exists.
     */
    where: MunicipalityWhereUniqueInput
    /**
     * In case the Municipality found by the `where` argument doesn't exist, create a new Municipality with this data.
     */
    create: XOR<MunicipalityCreateInput, MunicipalityUncheckedCreateInput>
    /**
     * In case the Municipality was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MunicipalityUpdateInput, MunicipalityUncheckedUpdateInput>
  }

  /**
   * Municipality delete
   */
  export type MunicipalityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
    /**
     * Filter which Municipality to delete.
     */
    where: MunicipalityWhereUniqueInput
  }

  /**
   * Municipality deleteMany
   */
  export type MunicipalityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipalities to delete
     */
    where?: MunicipalityWhereInput
  }

  /**
   * Municipality.companies
   */
  export type Municipality$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    cursor?: CompanyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Municipality without action
   */
  export type MunicipalityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipality
     */
    select?: MunicipalitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipalityInclude<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    foundedYear: number | null
  }

  export type CompanySumAggregateOutputType = {
    foundedYear: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    foundedYear: number | null
    isActive: boolean | null
    username: string | null
    password: string | null
    loginEmail: string | null
    municipalityId: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    foundedYear: number | null
    isActive: boolean | null
    username: string | null
    password: string | null
    loginEmail: string | null
    municipalityId: string | null
    createdBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    name: number
    description: number
    taxId: number
    legalRepresentative: number
    businessSector: number
    companySize: number
    website: number
    email: number
    phone: number
    address: number
    foundedYear: number
    isActive: number
    username: number
    password: number
    loginEmail: number
    municipalityId: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    foundedYear?: true
  }

  export type CompanySumAggregateInputType = {
    foundedYear?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    foundedYear?: true
    isActive?: true
    username?: true
    password?: true
    loginEmail?: true
    municipalityId?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    foundedYear?: true
    isActive?: true
    username?: true
    password?: true
    loginEmail?: true
    municipalityId?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    taxId?: true
    legalRepresentative?: true
    businessSector?: true
    companySize?: true
    website?: true
    email?: true
    phone?: true
    address?: true
    foundedYear?: true
    isActive?: true
    username?: true
    password?: true
    loginEmail?: true
    municipalityId?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: string
    name: string
    description: string | null
    taxId: string | null
    legalRepresentative: string | null
    businessSector: string | null
    companySize: $Enums.CompanySize | null
    website: string | null
    email: string | null
    phone: string | null
    address: string | null
    foundedYear: number | null
    isActive: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdBy: string
    createdAt: Date
    updatedAt: Date
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    foundedYear?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    loginEmail?: boolean
    municipalityId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    municipality?: boolean | MunicipalityDefaultArgs<ExtArgs>
    jobOffers?: boolean | Company$jobOffersArgs<ExtArgs>
    profiles?: boolean | Company$profilesArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    foundedYear?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    loginEmail?: boolean
    municipalityId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    municipality?: boolean | MunicipalityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    taxId?: boolean
    legalRepresentative?: boolean
    businessSector?: boolean
    companySize?: boolean
    website?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    foundedYear?: boolean
    isActive?: boolean
    username?: boolean
    password?: boolean
    loginEmail?: boolean
    municipalityId?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    municipality?: boolean | MunicipalityDefaultArgs<ExtArgs>
    jobOffers?: boolean | Company$jobOffersArgs<ExtArgs>
    profiles?: boolean | Company$profilesArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompanyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    municipality?: boolean | MunicipalityDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs>
      municipality: Prisma.$MunicipalityPayload<ExtArgs>
      jobOffers: Prisma.$JobOfferPayload<ExtArgs>[]
      profiles: Prisma.$ProfilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      taxId: string | null
      legalRepresentative: string | null
      businessSector: string | null
      companySize: $Enums.CompanySize | null
      website: string | null
      email: string | null
      phone: string | null
      address: string | null
      foundedYear: number | null
      isActive: boolean
      username: string
      password: string
      loginEmail: string
      municipalityId: string
      createdBy: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {CompanyCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `id`
     * const companyWithIdOnly = await prisma.company.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompanyCreateManyAndReturnArgs>(args?: SelectSubset<T, CompanyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    municipality<T extends MunicipalityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MunicipalityDefaultArgs<ExtArgs>>): Prisma__MunicipalityClient<$Result.GetResult<Prisma.$MunicipalityPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    jobOffers<T extends Company$jobOffersArgs<ExtArgs> = {}>(args?: Subset<T, Company$jobOffersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobOfferPayload<ExtArgs>, T, "findMany"> | Null>
    profiles<T extends Company$profilesArgs<ExtArgs> = {}>(args?: Subset<T, Company$profilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */ 
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'String'>
    readonly name: FieldRef<"Company", 'String'>
    readonly description: FieldRef<"Company", 'String'>
    readonly taxId: FieldRef<"Company", 'String'>
    readonly legalRepresentative: FieldRef<"Company", 'String'>
    readonly businessSector: FieldRef<"Company", 'String'>
    readonly companySize: FieldRef<"Company", 'CompanySize'>
    readonly website: FieldRef<"Company", 'String'>
    readonly email: FieldRef<"Company", 'String'>
    readonly phone: FieldRef<"Company", 'String'>
    readonly address: FieldRef<"Company", 'String'>
    readonly foundedYear: FieldRef<"Company", 'Int'>
    readonly isActive: FieldRef<"Company", 'Boolean'>
    readonly username: FieldRef<"Company", 'String'>
    readonly password: FieldRef<"Company", 'String'>
    readonly loginEmail: FieldRef<"Company", 'String'>
    readonly municipalityId: FieldRef<"Company", 'String'>
    readonly createdBy: FieldRef<"Company", 'String'>
    readonly createdAt: FieldRef<"Company", 'DateTime'>
    readonly updatedAt: FieldRef<"Company", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company createManyAndReturn
   */
  export type CompanyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
  }

  /**
   * Company.jobOffers
   */
  export type Company$jobOffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobOffer
     */
    select?: JobOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobOfferInclude<ExtArgs> | null
    where?: JobOfferWhereInput
    orderBy?: JobOfferOrderByWithRelationInput | JobOfferOrderByWithRelationInput[]
    cursor?: JobOfferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobOfferScalarFieldEnum | JobOfferScalarFieldEnum[]
  }

  /**
   * Company.profiles
   */
  export type Company$profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactMinAggregateOutputType = {
    id: string | null
    userId: string | null
    contactId: string | null
    status: $Enums.ContactStatus | null
    requestMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    contactId: string | null
    status: $Enums.ContactStatus | null
    requestMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    userId: number
    contactId: number
    status: number
    requestMessage: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ContactMinAggregateInputType = {
    id?: true
    userId?: true
    contactId?: true
    status?: true
    requestMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    userId?: true
    contactId?: true
    status?: true
    requestMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    userId?: true
    contactId?: true
    status?: true
    requestMessage?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: string
    userId: string
    contactId: string
    status: $Enums.ContactStatus
    requestMessage: string | null
    createdAt: Date
    updatedAt: Date
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    contactId?: boolean
    status?: boolean
    requestMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    contact?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    contactId?: boolean
    status?: boolean
    requestMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    contact?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectScalar = {
    id?: boolean
    userId?: boolean
    contactId?: boolean
    status?: boolean
    requestMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    contact?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type ContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    contact?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {
      user: Prisma.$ProfilePayload<ExtArgs>
      contact: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      contactId: string
      status: $Enums.ContactStatus
      requestMessage: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contacts and returns the data saved in the database.
     * @param {ContactCreateManyAndReturnArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContactCreateManyAndReturnArgs>(args?: SelectSubset<T, ContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    contact<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */ 
  interface ContactFieldRefs {
    readonly id: FieldRef<"Contact", 'String'>
    readonly userId: FieldRef<"Contact", 'String'>
    readonly contactId: FieldRef<"Contact", 'String'>
    readonly status: FieldRef<"Contact", 'ContactStatus'>
    readonly requestMessage: FieldRef<"Contact", 'String'>
    readonly createdAt: FieldRef<"Contact", 'DateTime'>
    readonly updatedAt: FieldRef<"Contact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact createManyAndReturn
   */
  export type ContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
  }


  /**
   * Model Conversation
   */

  export type AggregateConversation = {
    _count: ConversationCountAggregateOutputType | null
    _avg: ConversationAvgAggregateOutputType | null
    _sum: ConversationSumAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  export type ConversationAvgAggregateOutputType = {
    unreadCount: number | null
  }

  export type ConversationSumAggregateOutputType = {
    unreadCount: number | null
  }

  export type ConversationMinAggregateOutputType = {
    id: string | null
    lastMessageContent: string | null
    lastMessageTime: Date | null
    unreadCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConversationMaxAggregateOutputType = {
    id: string | null
    lastMessageContent: string | null
    lastMessageTime: Date | null
    unreadCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConversationCountAggregateOutputType = {
    id: number
    participants: number
    lastMessageContent: number
    lastMessageTime: number
    unreadCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConversationAvgAggregateInputType = {
    unreadCount?: true
  }

  export type ConversationSumAggregateInputType = {
    unreadCount?: true
  }

  export type ConversationMinAggregateInputType = {
    id?: true
    lastMessageContent?: true
    lastMessageTime?: true
    unreadCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConversationMaxAggregateInputType = {
    id?: true
    lastMessageContent?: true
    lastMessageTime?: true
    unreadCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConversationCountAggregateInputType = {
    id?: true
    participants?: true
    lastMessageContent?: true
    lastMessageTime?: true
    unreadCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConversationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversation to aggregate.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Conversations
    **/
    _count?: true | ConversationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConversationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConversationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConversationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConversationMaxAggregateInputType
  }

  export type GetConversationAggregateType<T extends ConversationAggregateArgs> = {
        [P in keyof T & keyof AggregateConversation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConversation[P]>
      : GetScalarType<T[P], AggregateConversation[P]>
  }




  export type ConversationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithAggregationInput | ConversationOrderByWithAggregationInput[]
    by: ConversationScalarFieldEnum[] | ConversationScalarFieldEnum
    having?: ConversationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConversationCountAggregateInputType | true
    _avg?: ConversationAvgAggregateInputType
    _sum?: ConversationSumAggregateInputType
    _min?: ConversationMinAggregateInputType
    _max?: ConversationMaxAggregateInputType
  }

  export type ConversationGroupByOutputType = {
    id: string
    participants: string[]
    lastMessageContent: string | null
    lastMessageTime: Date | null
    unreadCount: number
    createdAt: Date
    updatedAt: Date
    _count: ConversationCountAggregateOutputType | null
    _avg: ConversationAvgAggregateOutputType | null
    _sum: ConversationSumAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  type GetConversationGroupByPayload<T extends ConversationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConversationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConversationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConversationGroupByOutputType[P]>
            : GetScalarType<T[P], ConversationGroupByOutputType[P]>
        }
      >
    >


  export type ConversationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    participants?: boolean
    lastMessageContent?: boolean
    lastMessageTime?: boolean
    unreadCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    participants?: boolean
    lastMessageContent?: boolean
    lastMessageTime?: boolean
    unreadCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectScalar = {
    id?: boolean
    participants?: boolean
    lastMessageContent?: boolean
    lastMessageTime?: boolean
    unreadCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConversationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConversationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ConversationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Conversation"
    objects: {
      messages: Prisma.$MessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      participants: string[]
      lastMessageContent: string | null
      lastMessageTime: Date | null
      unreadCount: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["conversation"]>
    composites: {}
  }

  type ConversationGetPayload<S extends boolean | null | undefined | ConversationDefaultArgs> = $Result.GetResult<Prisma.$ConversationPayload, S>

  type ConversationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConversationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConversationCountAggregateInputType | true
    }

  export interface ConversationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Conversation'], meta: { name: 'Conversation' } }
    /**
     * Find zero or one Conversation that matches the filter.
     * @param {ConversationFindUniqueArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConversationFindUniqueArgs>(args: SelectSubset<T, ConversationFindUniqueArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Conversation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConversationFindUniqueOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConversationFindUniqueOrThrowArgs>(args: SelectSubset<T, ConversationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Conversation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConversationFindFirstArgs>(args?: SelectSubset<T, ConversationFindFirstArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Conversation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConversationFindFirstOrThrowArgs>(args?: SelectSubset<T, ConversationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Conversations
     * const conversations = await prisma.conversation.findMany()
     * 
     * // Get first 10 Conversations
     * const conversations = await prisma.conversation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conversationWithIdOnly = await prisma.conversation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConversationFindManyArgs>(args?: SelectSubset<T, ConversationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Conversation.
     * @param {ConversationCreateArgs} args - Arguments to create a Conversation.
     * @example
     * // Create one Conversation
     * const Conversation = await prisma.conversation.create({
     *   data: {
     *     // ... data to create a Conversation
     *   }
     * })
     * 
     */
    create<T extends ConversationCreateArgs>(args: SelectSubset<T, ConversationCreateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Conversations.
     * @param {ConversationCreateManyArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConversationCreateManyArgs>(args?: SelectSubset<T, ConversationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Conversations and returns the data saved in the database.
     * @param {ConversationCreateManyAndReturnArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Conversations and only return the `id`
     * const conversationWithIdOnly = await prisma.conversation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConversationCreateManyAndReturnArgs>(args?: SelectSubset<T, ConversationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Conversation.
     * @param {ConversationDeleteArgs} args - Arguments to delete one Conversation.
     * @example
     * // Delete one Conversation
     * const Conversation = await prisma.conversation.delete({
     *   where: {
     *     // ... filter to delete one Conversation
     *   }
     * })
     * 
     */
    delete<T extends ConversationDeleteArgs>(args: SelectSubset<T, ConversationDeleteArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Conversation.
     * @param {ConversationUpdateArgs} args - Arguments to update one Conversation.
     * @example
     * // Update one Conversation
     * const conversation = await prisma.conversation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConversationUpdateArgs>(args: SelectSubset<T, ConversationUpdateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Conversations.
     * @param {ConversationDeleteManyArgs} args - Arguments to filter Conversations to delete.
     * @example
     * // Delete a few Conversations
     * const { count } = await prisma.conversation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConversationDeleteManyArgs>(args?: SelectSubset<T, ConversationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Conversations
     * const conversation = await prisma.conversation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConversationUpdateManyArgs>(args: SelectSubset<T, ConversationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Conversation.
     * @param {ConversationUpsertArgs} args - Arguments to update or create a Conversation.
     * @example
     * // Update or create a Conversation
     * const conversation = await prisma.conversation.upsert({
     *   create: {
     *     // ... data to create a Conversation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Conversation we want to update
     *   }
     * })
     */
    upsert<T extends ConversationUpsertArgs>(args: SelectSubset<T, ConversationUpsertArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationCountArgs} args - Arguments to filter Conversations to count.
     * @example
     * // Count the number of Conversations
     * const count = await prisma.conversation.count({
     *   where: {
     *     // ... the filter for the Conversations we want to count
     *   }
     * })
    **/
    count<T extends ConversationCountArgs>(
      args?: Subset<T, ConversationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConversationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConversationAggregateArgs>(args: Subset<T, ConversationAggregateArgs>): Prisma.PrismaPromise<GetConversationAggregateType<T>>

    /**
     * Group by Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConversationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConversationGroupByArgs['orderBy'] }
        : { orderBy?: ConversationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConversationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConversationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Conversation model
   */
  readonly fields: ConversationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Conversation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConversationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    messages<T extends Conversation$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Conversation$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Conversation model
   */ 
  interface ConversationFieldRefs {
    readonly id: FieldRef<"Conversation", 'String'>
    readonly participants: FieldRef<"Conversation", 'String[]'>
    readonly lastMessageContent: FieldRef<"Conversation", 'String'>
    readonly lastMessageTime: FieldRef<"Conversation", 'DateTime'>
    readonly unreadCount: FieldRef<"Conversation", 'Int'>
    readonly createdAt: FieldRef<"Conversation", 'DateTime'>
    readonly updatedAt: FieldRef<"Conversation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Conversation findUnique
   */
  export type ConversationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findUniqueOrThrow
   */
  export type ConversationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findFirst
   */
  export type ConversationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findFirstOrThrow
   */
  export type ConversationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findMany
   */
  export type ConversationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversations to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation create
   */
  export type ConversationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to create a Conversation.
     */
    data: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
  }

  /**
   * Conversation createMany
   */
  export type ConversationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conversation createManyAndReturn
   */
  export type ConversationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conversation update
   */
  export type ConversationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to update a Conversation.
     */
    data: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
    /**
     * Choose, which Conversation to update.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation updateMany
   */
  export type ConversationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Conversations.
     */
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyInput>
    /**
     * Filter which Conversations to update
     */
    where?: ConversationWhereInput
  }

  /**
   * Conversation upsert
   */
  export type ConversationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The filter to search for the Conversation to update in case it exists.
     */
    where: ConversationWhereUniqueInput
    /**
     * In case the Conversation found by the `where` argument doesn't exist, create a new Conversation with this data.
     */
    create: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
    /**
     * In case the Conversation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
  }

  /**
   * Conversation delete
   */
  export type ConversationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter which Conversation to delete.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation deleteMany
   */
  export type ConversationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversations to delete
     */
    where?: ConversationWhereInput
  }

  /**
   * Conversation.messages
   */
  export type Conversation$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Conversation without action
   */
  export type ConversationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    receiverId: string | null
    content: string | null
    messageType: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    receiverId: string | null
    content: string | null
    messageType: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    conversationId: number
    senderId: number
    receiverId: number
    content: number
    messageType: number
    status: number
    createdAt: number
    readAt: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    receiverId?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    receiverId?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    receiverId?: true
    content?: true
    messageType?: true
    status?: true
    createdAt?: true
    readAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    conversationId: string
    senderId: string
    receiverId: string
    content: string
    messageType: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date
    readAt: Date | null
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | ProfileDefaultArgs<ExtArgs>
    receiver?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | ProfileDefaultArgs<ExtArgs>
    receiver?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    messageType?: boolean
    status?: boolean
    createdAt?: boolean
    readAt?: boolean
  }

  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | ProfileDefaultArgs<ExtArgs>
    receiver?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | ProfileDefaultArgs<ExtArgs>
    receiver?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      conversation: Prisma.$ConversationPayload<ExtArgs>
      sender: Prisma.$ProfilePayload<ExtArgs>
      receiver: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conversationId: string
      senderId: string
      receiverId: string
      content: string
      messageType: $Enums.MessageType
      status: $Enums.MessageStatus
      createdAt: Date
      readAt: Date | null
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conversation<T extends ConversationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConversationDefaultArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sender<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    receiver<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */ 
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly conversationId: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly receiverId: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly messageType: FieldRef<"Message", 'MessageType'>
    readonly status: FieldRef<"Message", 'MessageStatus'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
    readonly readAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model LessonResource
   */

  export type AggregateLessonResource = {
    _count: LessonResourceCountAggregateOutputType | null
    _avg: LessonResourceAvgAggregateOutputType | null
    _sum: LessonResourceSumAggregateOutputType | null
    _min: LessonResourceMinAggregateOutputType | null
    _max: LessonResourceMaxAggregateOutputType | null
  }

  export type LessonResourceAvgAggregateOutputType = {
    fileSize: number | null
    orderIndex: number | null
  }

  export type LessonResourceSumAggregateOutputType = {
    fileSize: number | null
    orderIndex: number | null
  }

  export type LessonResourceMinAggregateOutputType = {
    id: string | null
    lessonId: string | null
    title: string | null
    description: string | null
    type: $Enums.ResourceType | null
    url: string | null
    filePath: string | null
    fileSize: number | null
    orderIndex: number | null
    isDownloadable: boolean | null
    createdAt: Date | null
  }

  export type LessonResourceMaxAggregateOutputType = {
    id: string | null
    lessonId: string | null
    title: string | null
    description: string | null
    type: $Enums.ResourceType | null
    url: string | null
    filePath: string | null
    fileSize: number | null
    orderIndex: number | null
    isDownloadable: boolean | null
    createdAt: Date | null
  }

  export type LessonResourceCountAggregateOutputType = {
    id: number
    lessonId: number
    title: number
    description: number
    type: number
    url: number
    filePath: number
    fileSize: number
    orderIndex: number
    isDownloadable: number
    createdAt: number
    _all: number
  }


  export type LessonResourceAvgAggregateInputType = {
    fileSize?: true
    orderIndex?: true
  }

  export type LessonResourceSumAggregateInputType = {
    fileSize?: true
    orderIndex?: true
  }

  export type LessonResourceMinAggregateInputType = {
    id?: true
    lessonId?: true
    title?: true
    description?: true
    type?: true
    url?: true
    filePath?: true
    fileSize?: true
    orderIndex?: true
    isDownloadable?: true
    createdAt?: true
  }

  export type LessonResourceMaxAggregateInputType = {
    id?: true
    lessonId?: true
    title?: true
    description?: true
    type?: true
    url?: true
    filePath?: true
    fileSize?: true
    orderIndex?: true
    isDownloadable?: true
    createdAt?: true
  }

  export type LessonResourceCountAggregateInputType = {
    id?: true
    lessonId?: true
    title?: true
    description?: true
    type?: true
    url?: true
    filePath?: true
    fileSize?: true
    orderIndex?: true
    isDownloadable?: true
    createdAt?: true
    _all?: true
  }

  export type LessonResourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LessonResource to aggregate.
     */
    where?: LessonResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonResources to fetch.
     */
    orderBy?: LessonResourceOrderByWithRelationInput | LessonResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LessonResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonResources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonResources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LessonResources
    **/
    _count?: true | LessonResourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LessonResourceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LessonResourceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LessonResourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LessonResourceMaxAggregateInputType
  }

  export type GetLessonResourceAggregateType<T extends LessonResourceAggregateArgs> = {
        [P in keyof T & keyof AggregateLessonResource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLessonResource[P]>
      : GetScalarType<T[P], AggregateLessonResource[P]>
  }




  export type LessonResourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LessonResourceWhereInput
    orderBy?: LessonResourceOrderByWithAggregationInput | LessonResourceOrderByWithAggregationInput[]
    by: LessonResourceScalarFieldEnum[] | LessonResourceScalarFieldEnum
    having?: LessonResourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LessonResourceCountAggregateInputType | true
    _avg?: LessonResourceAvgAggregateInputType
    _sum?: LessonResourceSumAggregateInputType
    _min?: LessonResourceMinAggregateInputType
    _max?: LessonResourceMaxAggregateInputType
  }

  export type LessonResourceGroupByOutputType = {
    id: string
    lessonId: string
    title: string
    description: string | null
    type: $Enums.ResourceType
    url: string
    filePath: string | null
    fileSize: number | null
    orderIndex: number
    isDownloadable: boolean
    createdAt: Date
    _count: LessonResourceCountAggregateOutputType | null
    _avg: LessonResourceAvgAggregateOutputType | null
    _sum: LessonResourceSumAggregateOutputType | null
    _min: LessonResourceMinAggregateOutputType | null
    _max: LessonResourceMaxAggregateOutputType | null
  }

  type GetLessonResourceGroupByPayload<T extends LessonResourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LessonResourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LessonResourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LessonResourceGroupByOutputType[P]>
            : GetScalarType<T[P], LessonResourceGroupByOutputType[P]>
        }
      >
    >


  export type LessonResourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    url?: boolean
    filePath?: boolean
    fileSize?: boolean
    orderIndex?: boolean
    isDownloadable?: boolean
    createdAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lessonResource"]>

  export type LessonResourceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    url?: boolean
    filePath?: boolean
    fileSize?: boolean
    orderIndex?: boolean
    isDownloadable?: boolean
    createdAt?: boolean
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lessonResource"]>

  export type LessonResourceSelectScalar = {
    id?: boolean
    lessonId?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    url?: boolean
    filePath?: boolean
    fileSize?: boolean
    orderIndex?: boolean
    isDownloadable?: boolean
    createdAt?: boolean
  }

  export type LessonResourceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }
  export type LessonResourceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lesson?: boolean | LessonDefaultArgs<ExtArgs>
  }

  export type $LessonResourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LessonResource"
    objects: {
      lesson: Prisma.$LessonPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      lessonId: string
      title: string
      description: string | null
      type: $Enums.ResourceType
      url: string
      filePath: string | null
      fileSize: number | null
      orderIndex: number
      isDownloadable: boolean
      createdAt: Date
    }, ExtArgs["result"]["lessonResource"]>
    composites: {}
  }

  type LessonResourceGetPayload<S extends boolean | null | undefined | LessonResourceDefaultArgs> = $Result.GetResult<Prisma.$LessonResourcePayload, S>

  type LessonResourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LessonResourceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LessonResourceCountAggregateInputType | true
    }

  export interface LessonResourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LessonResource'], meta: { name: 'LessonResource' } }
    /**
     * Find zero or one LessonResource that matches the filter.
     * @param {LessonResourceFindUniqueArgs} args - Arguments to find a LessonResource
     * @example
     * // Get one LessonResource
     * const lessonResource = await prisma.lessonResource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LessonResourceFindUniqueArgs>(args: SelectSubset<T, LessonResourceFindUniqueArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LessonResource that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LessonResourceFindUniqueOrThrowArgs} args - Arguments to find a LessonResource
     * @example
     * // Get one LessonResource
     * const lessonResource = await prisma.lessonResource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LessonResourceFindUniqueOrThrowArgs>(args: SelectSubset<T, LessonResourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LessonResource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceFindFirstArgs} args - Arguments to find a LessonResource
     * @example
     * // Get one LessonResource
     * const lessonResource = await prisma.lessonResource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LessonResourceFindFirstArgs>(args?: SelectSubset<T, LessonResourceFindFirstArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LessonResource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceFindFirstOrThrowArgs} args - Arguments to find a LessonResource
     * @example
     * // Get one LessonResource
     * const lessonResource = await prisma.lessonResource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LessonResourceFindFirstOrThrowArgs>(args?: SelectSubset<T, LessonResourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LessonResources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LessonResources
     * const lessonResources = await prisma.lessonResource.findMany()
     * 
     * // Get first 10 LessonResources
     * const lessonResources = await prisma.lessonResource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lessonResourceWithIdOnly = await prisma.lessonResource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LessonResourceFindManyArgs>(args?: SelectSubset<T, LessonResourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LessonResource.
     * @param {LessonResourceCreateArgs} args - Arguments to create a LessonResource.
     * @example
     * // Create one LessonResource
     * const LessonResource = await prisma.lessonResource.create({
     *   data: {
     *     // ... data to create a LessonResource
     *   }
     * })
     * 
     */
    create<T extends LessonResourceCreateArgs>(args: SelectSubset<T, LessonResourceCreateArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LessonResources.
     * @param {LessonResourceCreateManyArgs} args - Arguments to create many LessonResources.
     * @example
     * // Create many LessonResources
     * const lessonResource = await prisma.lessonResource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LessonResourceCreateManyArgs>(args?: SelectSubset<T, LessonResourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LessonResources and returns the data saved in the database.
     * @param {LessonResourceCreateManyAndReturnArgs} args - Arguments to create many LessonResources.
     * @example
     * // Create many LessonResources
     * const lessonResource = await prisma.lessonResource.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LessonResources and only return the `id`
     * const lessonResourceWithIdOnly = await prisma.lessonResource.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LessonResourceCreateManyAndReturnArgs>(args?: SelectSubset<T, LessonResourceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LessonResource.
     * @param {LessonResourceDeleteArgs} args - Arguments to delete one LessonResource.
     * @example
     * // Delete one LessonResource
     * const LessonResource = await prisma.lessonResource.delete({
     *   where: {
     *     // ... filter to delete one LessonResource
     *   }
     * })
     * 
     */
    delete<T extends LessonResourceDeleteArgs>(args: SelectSubset<T, LessonResourceDeleteArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LessonResource.
     * @param {LessonResourceUpdateArgs} args - Arguments to update one LessonResource.
     * @example
     * // Update one LessonResource
     * const lessonResource = await prisma.lessonResource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LessonResourceUpdateArgs>(args: SelectSubset<T, LessonResourceUpdateArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LessonResources.
     * @param {LessonResourceDeleteManyArgs} args - Arguments to filter LessonResources to delete.
     * @example
     * // Delete a few LessonResources
     * const { count } = await prisma.lessonResource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LessonResourceDeleteManyArgs>(args?: SelectSubset<T, LessonResourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LessonResources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LessonResources
     * const lessonResource = await prisma.lessonResource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LessonResourceUpdateManyArgs>(args: SelectSubset<T, LessonResourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LessonResource.
     * @param {LessonResourceUpsertArgs} args - Arguments to update or create a LessonResource.
     * @example
     * // Update or create a LessonResource
     * const lessonResource = await prisma.lessonResource.upsert({
     *   create: {
     *     // ... data to create a LessonResource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LessonResource we want to update
     *   }
     * })
     */
    upsert<T extends LessonResourceUpsertArgs>(args: SelectSubset<T, LessonResourceUpsertArgs<ExtArgs>>): Prisma__LessonResourceClient<$Result.GetResult<Prisma.$LessonResourcePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LessonResources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceCountArgs} args - Arguments to filter LessonResources to count.
     * @example
     * // Count the number of LessonResources
     * const count = await prisma.lessonResource.count({
     *   where: {
     *     // ... the filter for the LessonResources we want to count
     *   }
     * })
    **/
    count<T extends LessonResourceCountArgs>(
      args?: Subset<T, LessonResourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LessonResourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LessonResource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LessonResourceAggregateArgs>(args: Subset<T, LessonResourceAggregateArgs>): Prisma.PrismaPromise<GetLessonResourceAggregateType<T>>

    /**
     * Group by LessonResource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LessonResourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LessonResourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LessonResourceGroupByArgs['orderBy'] }
        : { orderBy?: LessonResourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LessonResourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLessonResourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LessonResource model
   */
  readonly fields: LessonResourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LessonResource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LessonResourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lesson<T extends LessonDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LessonDefaultArgs<ExtArgs>>): Prisma__LessonClient<$Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LessonResource model
   */ 
  interface LessonResourceFieldRefs {
    readonly id: FieldRef<"LessonResource", 'String'>
    readonly lessonId: FieldRef<"LessonResource", 'String'>
    readonly title: FieldRef<"LessonResource", 'String'>
    readonly description: FieldRef<"LessonResource", 'String'>
    readonly type: FieldRef<"LessonResource", 'ResourceType'>
    readonly url: FieldRef<"LessonResource", 'String'>
    readonly filePath: FieldRef<"LessonResource", 'String'>
    readonly fileSize: FieldRef<"LessonResource", 'Int'>
    readonly orderIndex: FieldRef<"LessonResource", 'Int'>
    readonly isDownloadable: FieldRef<"LessonResource", 'Boolean'>
    readonly createdAt: FieldRef<"LessonResource", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LessonResource findUnique
   */
  export type LessonResourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter, which LessonResource to fetch.
     */
    where: LessonResourceWhereUniqueInput
  }

  /**
   * LessonResource findUniqueOrThrow
   */
  export type LessonResourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter, which LessonResource to fetch.
     */
    where: LessonResourceWhereUniqueInput
  }

  /**
   * LessonResource findFirst
   */
  export type LessonResourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter, which LessonResource to fetch.
     */
    where?: LessonResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonResources to fetch.
     */
    orderBy?: LessonResourceOrderByWithRelationInput | LessonResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LessonResources.
     */
    cursor?: LessonResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonResources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonResources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LessonResources.
     */
    distinct?: LessonResourceScalarFieldEnum | LessonResourceScalarFieldEnum[]
  }

  /**
   * LessonResource findFirstOrThrow
   */
  export type LessonResourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter, which LessonResource to fetch.
     */
    where?: LessonResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonResources to fetch.
     */
    orderBy?: LessonResourceOrderByWithRelationInput | LessonResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LessonResources.
     */
    cursor?: LessonResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonResources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonResources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LessonResources.
     */
    distinct?: LessonResourceScalarFieldEnum | LessonResourceScalarFieldEnum[]
  }

  /**
   * LessonResource findMany
   */
  export type LessonResourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter, which LessonResources to fetch.
     */
    where?: LessonResourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LessonResources to fetch.
     */
    orderBy?: LessonResourceOrderByWithRelationInput | LessonResourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LessonResources.
     */
    cursor?: LessonResourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LessonResources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LessonResources.
     */
    skip?: number
    distinct?: LessonResourceScalarFieldEnum | LessonResourceScalarFieldEnum[]
  }

  /**
   * LessonResource create
   */
  export type LessonResourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * The data needed to create a LessonResource.
     */
    data: XOR<LessonResourceCreateInput, LessonResourceUncheckedCreateInput>
  }

  /**
   * LessonResource createMany
   */
  export type LessonResourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LessonResources.
     */
    data: LessonResourceCreateManyInput | LessonResourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LessonResource createManyAndReturn
   */
  export type LessonResourceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LessonResources.
     */
    data: LessonResourceCreateManyInput | LessonResourceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LessonResource update
   */
  export type LessonResourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * The data needed to update a LessonResource.
     */
    data: XOR<LessonResourceUpdateInput, LessonResourceUncheckedUpdateInput>
    /**
     * Choose, which LessonResource to update.
     */
    where: LessonResourceWhereUniqueInput
  }

  /**
   * LessonResource updateMany
   */
  export type LessonResourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LessonResources.
     */
    data: XOR<LessonResourceUpdateManyMutationInput, LessonResourceUncheckedUpdateManyInput>
    /**
     * Filter which LessonResources to update
     */
    where?: LessonResourceWhereInput
  }

  /**
   * LessonResource upsert
   */
  export type LessonResourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * The filter to search for the LessonResource to update in case it exists.
     */
    where: LessonResourceWhereUniqueInput
    /**
     * In case the LessonResource found by the `where` argument doesn't exist, create a new LessonResource with this data.
     */
    create: XOR<LessonResourceCreateInput, LessonResourceUncheckedCreateInput>
    /**
     * In case the LessonResource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LessonResourceUpdateInput, LessonResourceUncheckedUpdateInput>
  }

  /**
   * LessonResource delete
   */
  export type LessonResourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
    /**
     * Filter which LessonResource to delete.
     */
    where: LessonResourceWhereUniqueInput
  }

  /**
   * LessonResource deleteMany
   */
  export type LessonResourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LessonResources to delete
     */
    where?: LessonResourceWhereInput
  }

  /**
   * LessonResource without action
   */
  export type LessonResourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LessonResource
     */
    select?: LessonResourceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LessonResourceInclude<ExtArgs> | null
  }


  /**
   * Model ModuleCertificate
   */

  export type AggregateModuleCertificate = {
    _count: ModuleCertificateCountAggregateOutputType | null
    _avg: ModuleCertificateAvgAggregateOutputType | null
    _sum: ModuleCertificateSumAggregateOutputType | null
    _min: ModuleCertificateMinAggregateOutputType | null
    _max: ModuleCertificateMaxAggregateOutputType | null
  }

  export type ModuleCertificateAvgAggregateOutputType = {
    grade: number | null
  }

  export type ModuleCertificateSumAggregateOutputType = {
    grade: number | null
  }

  export type ModuleCertificateMinAggregateOutputType = {
    id: string | null
    moduleId: string | null
    studentId: string | null
    certificateUrl: string | null
    issuedAt: Date | null
    grade: number | null
    completedAt: Date | null
  }

  export type ModuleCertificateMaxAggregateOutputType = {
    id: string | null
    moduleId: string | null
    studentId: string | null
    certificateUrl: string | null
    issuedAt: Date | null
    grade: number | null
    completedAt: Date | null
  }

  export type ModuleCertificateCountAggregateOutputType = {
    id: number
    moduleId: number
    studentId: number
    certificateUrl: number
    issuedAt: number
    grade: number
    completedAt: number
    _all: number
  }


  export type ModuleCertificateAvgAggregateInputType = {
    grade?: true
  }

  export type ModuleCertificateSumAggregateInputType = {
    grade?: true
  }

  export type ModuleCertificateMinAggregateInputType = {
    id?: true
    moduleId?: true
    studentId?: true
    certificateUrl?: true
    issuedAt?: true
    grade?: true
    completedAt?: true
  }

  export type ModuleCertificateMaxAggregateInputType = {
    id?: true
    moduleId?: true
    studentId?: true
    certificateUrl?: true
    issuedAt?: true
    grade?: true
    completedAt?: true
  }

  export type ModuleCertificateCountAggregateInputType = {
    id?: true
    moduleId?: true
    studentId?: true
    certificateUrl?: true
    issuedAt?: true
    grade?: true
    completedAt?: true
    _all?: true
  }

  export type ModuleCertificateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModuleCertificate to aggregate.
     */
    where?: ModuleCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleCertificates to fetch.
     */
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModuleCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModuleCertificates
    **/
    _count?: true | ModuleCertificateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModuleCertificateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModuleCertificateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModuleCertificateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModuleCertificateMaxAggregateInputType
  }

  export type GetModuleCertificateAggregateType<T extends ModuleCertificateAggregateArgs> = {
        [P in keyof T & keyof AggregateModuleCertificate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModuleCertificate[P]>
      : GetScalarType<T[P], AggregateModuleCertificate[P]>
  }




  export type ModuleCertificateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModuleCertificateWhereInput
    orderBy?: ModuleCertificateOrderByWithAggregationInput | ModuleCertificateOrderByWithAggregationInput[]
    by: ModuleCertificateScalarFieldEnum[] | ModuleCertificateScalarFieldEnum
    having?: ModuleCertificateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModuleCertificateCountAggregateInputType | true
    _avg?: ModuleCertificateAvgAggregateInputType
    _sum?: ModuleCertificateSumAggregateInputType
    _min?: ModuleCertificateMinAggregateInputType
    _max?: ModuleCertificateMaxAggregateInputType
  }

  export type ModuleCertificateGroupByOutputType = {
    id: string
    moduleId: string
    studentId: string
    certificateUrl: string
    issuedAt: Date
    grade: number | null
    completedAt: Date
    _count: ModuleCertificateCountAggregateOutputType | null
    _avg: ModuleCertificateAvgAggregateOutputType | null
    _sum: ModuleCertificateSumAggregateOutputType | null
    _min: ModuleCertificateMinAggregateOutputType | null
    _max: ModuleCertificateMaxAggregateOutputType | null
  }

  type GetModuleCertificateGroupByPayload<T extends ModuleCertificateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModuleCertificateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModuleCertificateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModuleCertificateGroupByOutputType[P]>
            : GetScalarType<T[P], ModuleCertificateGroupByOutputType[P]>
        }
      >
    >


  export type ModuleCertificateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    moduleId?: boolean
    studentId?: boolean
    certificateUrl?: boolean
    issuedAt?: boolean
    grade?: boolean
    completedAt?: boolean
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moduleCertificate"]>

  export type ModuleCertificateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    moduleId?: boolean
    studentId?: boolean
    certificateUrl?: boolean
    issuedAt?: boolean
    grade?: boolean
    completedAt?: boolean
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moduleCertificate"]>

  export type ModuleCertificateSelectScalar = {
    id?: boolean
    moduleId?: boolean
    studentId?: boolean
    certificateUrl?: boolean
    issuedAt?: boolean
    grade?: boolean
    completedAt?: boolean
  }

  export type ModuleCertificateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type ModuleCertificateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    module?: boolean | CourseModuleDefaultArgs<ExtArgs>
    student?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $ModuleCertificatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ModuleCertificate"
    objects: {
      module: Prisma.$CourseModulePayload<ExtArgs>
      student: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      moduleId: string
      studentId: string
      certificateUrl: string
      issuedAt: Date
      grade: number | null
      completedAt: Date
    }, ExtArgs["result"]["moduleCertificate"]>
    composites: {}
  }

  type ModuleCertificateGetPayload<S extends boolean | null | undefined | ModuleCertificateDefaultArgs> = $Result.GetResult<Prisma.$ModuleCertificatePayload, S>

  type ModuleCertificateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModuleCertificateFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModuleCertificateCountAggregateInputType | true
    }

  export interface ModuleCertificateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModuleCertificate'], meta: { name: 'ModuleCertificate' } }
    /**
     * Find zero or one ModuleCertificate that matches the filter.
     * @param {ModuleCertificateFindUniqueArgs} args - Arguments to find a ModuleCertificate
     * @example
     * // Get one ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModuleCertificateFindUniqueArgs>(args: SelectSubset<T, ModuleCertificateFindUniqueArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ModuleCertificate that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ModuleCertificateFindUniqueOrThrowArgs} args - Arguments to find a ModuleCertificate
     * @example
     * // Get one ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModuleCertificateFindUniqueOrThrowArgs>(args: SelectSubset<T, ModuleCertificateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ModuleCertificate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateFindFirstArgs} args - Arguments to find a ModuleCertificate
     * @example
     * // Get one ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModuleCertificateFindFirstArgs>(args?: SelectSubset<T, ModuleCertificateFindFirstArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ModuleCertificate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateFindFirstOrThrowArgs} args - Arguments to find a ModuleCertificate
     * @example
     * // Get one ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModuleCertificateFindFirstOrThrowArgs>(args?: SelectSubset<T, ModuleCertificateFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ModuleCertificates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModuleCertificates
     * const moduleCertificates = await prisma.moduleCertificate.findMany()
     * 
     * // Get first 10 ModuleCertificates
     * const moduleCertificates = await prisma.moduleCertificate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const moduleCertificateWithIdOnly = await prisma.moduleCertificate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModuleCertificateFindManyArgs>(args?: SelectSubset<T, ModuleCertificateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ModuleCertificate.
     * @param {ModuleCertificateCreateArgs} args - Arguments to create a ModuleCertificate.
     * @example
     * // Create one ModuleCertificate
     * const ModuleCertificate = await prisma.moduleCertificate.create({
     *   data: {
     *     // ... data to create a ModuleCertificate
     *   }
     * })
     * 
     */
    create<T extends ModuleCertificateCreateArgs>(args: SelectSubset<T, ModuleCertificateCreateArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ModuleCertificates.
     * @param {ModuleCertificateCreateManyArgs} args - Arguments to create many ModuleCertificates.
     * @example
     * // Create many ModuleCertificates
     * const moduleCertificate = await prisma.moduleCertificate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModuleCertificateCreateManyArgs>(args?: SelectSubset<T, ModuleCertificateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModuleCertificates and returns the data saved in the database.
     * @param {ModuleCertificateCreateManyAndReturnArgs} args - Arguments to create many ModuleCertificates.
     * @example
     * // Create many ModuleCertificates
     * const moduleCertificate = await prisma.moduleCertificate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModuleCertificates and only return the `id`
     * const moduleCertificateWithIdOnly = await prisma.moduleCertificate.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModuleCertificateCreateManyAndReturnArgs>(args?: SelectSubset<T, ModuleCertificateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ModuleCertificate.
     * @param {ModuleCertificateDeleteArgs} args - Arguments to delete one ModuleCertificate.
     * @example
     * // Delete one ModuleCertificate
     * const ModuleCertificate = await prisma.moduleCertificate.delete({
     *   where: {
     *     // ... filter to delete one ModuleCertificate
     *   }
     * })
     * 
     */
    delete<T extends ModuleCertificateDeleteArgs>(args: SelectSubset<T, ModuleCertificateDeleteArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ModuleCertificate.
     * @param {ModuleCertificateUpdateArgs} args - Arguments to update one ModuleCertificate.
     * @example
     * // Update one ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModuleCertificateUpdateArgs>(args: SelectSubset<T, ModuleCertificateUpdateArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ModuleCertificates.
     * @param {ModuleCertificateDeleteManyArgs} args - Arguments to filter ModuleCertificates to delete.
     * @example
     * // Delete a few ModuleCertificates
     * const { count } = await prisma.moduleCertificate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModuleCertificateDeleteManyArgs>(args?: SelectSubset<T, ModuleCertificateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModuleCertificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModuleCertificates
     * const moduleCertificate = await prisma.moduleCertificate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModuleCertificateUpdateManyArgs>(args: SelectSubset<T, ModuleCertificateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ModuleCertificate.
     * @param {ModuleCertificateUpsertArgs} args - Arguments to update or create a ModuleCertificate.
     * @example
     * // Update or create a ModuleCertificate
     * const moduleCertificate = await prisma.moduleCertificate.upsert({
     *   create: {
     *     // ... data to create a ModuleCertificate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModuleCertificate we want to update
     *   }
     * })
     */
    upsert<T extends ModuleCertificateUpsertArgs>(args: SelectSubset<T, ModuleCertificateUpsertArgs<ExtArgs>>): Prisma__ModuleCertificateClient<$Result.GetResult<Prisma.$ModuleCertificatePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ModuleCertificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateCountArgs} args - Arguments to filter ModuleCertificates to count.
     * @example
     * // Count the number of ModuleCertificates
     * const count = await prisma.moduleCertificate.count({
     *   where: {
     *     // ... the filter for the ModuleCertificates we want to count
     *   }
     * })
    **/
    count<T extends ModuleCertificateCountArgs>(
      args?: Subset<T, ModuleCertificateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModuleCertificateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModuleCertificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModuleCertificateAggregateArgs>(args: Subset<T, ModuleCertificateAggregateArgs>): Prisma.PrismaPromise<GetModuleCertificateAggregateType<T>>

    /**
     * Group by ModuleCertificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleCertificateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModuleCertificateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModuleCertificateGroupByArgs['orderBy'] }
        : { orderBy?: ModuleCertificateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModuleCertificateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModuleCertificateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ModuleCertificate model
   */
  readonly fields: ModuleCertificateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ModuleCertificate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModuleCertificateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    module<T extends CourseModuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CourseModuleDefaultArgs<ExtArgs>>): Prisma__CourseModuleClient<$Result.GetResult<Prisma.$CourseModulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    student<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ModuleCertificate model
   */ 
  interface ModuleCertificateFieldRefs {
    readonly id: FieldRef<"ModuleCertificate", 'String'>
    readonly moduleId: FieldRef<"ModuleCertificate", 'String'>
    readonly studentId: FieldRef<"ModuleCertificate", 'String'>
    readonly certificateUrl: FieldRef<"ModuleCertificate", 'String'>
    readonly issuedAt: FieldRef<"ModuleCertificate", 'DateTime'>
    readonly grade: FieldRef<"ModuleCertificate", 'Int'>
    readonly completedAt: FieldRef<"ModuleCertificate", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ModuleCertificate findUnique
   */
  export type ModuleCertificateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter, which ModuleCertificate to fetch.
     */
    where: ModuleCertificateWhereUniqueInput
  }

  /**
   * ModuleCertificate findUniqueOrThrow
   */
  export type ModuleCertificateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter, which ModuleCertificate to fetch.
     */
    where: ModuleCertificateWhereUniqueInput
  }

  /**
   * ModuleCertificate findFirst
   */
  export type ModuleCertificateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter, which ModuleCertificate to fetch.
     */
    where?: ModuleCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleCertificates to fetch.
     */
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModuleCertificates.
     */
    cursor?: ModuleCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModuleCertificates.
     */
    distinct?: ModuleCertificateScalarFieldEnum | ModuleCertificateScalarFieldEnum[]
  }

  /**
   * ModuleCertificate findFirstOrThrow
   */
  export type ModuleCertificateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter, which ModuleCertificate to fetch.
     */
    where?: ModuleCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleCertificates to fetch.
     */
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModuleCertificates.
     */
    cursor?: ModuleCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModuleCertificates.
     */
    distinct?: ModuleCertificateScalarFieldEnum | ModuleCertificateScalarFieldEnum[]
  }

  /**
   * ModuleCertificate findMany
   */
  export type ModuleCertificateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter, which ModuleCertificates to fetch.
     */
    where?: ModuleCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleCertificates to fetch.
     */
    orderBy?: ModuleCertificateOrderByWithRelationInput | ModuleCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModuleCertificates.
     */
    cursor?: ModuleCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleCertificates.
     */
    skip?: number
    distinct?: ModuleCertificateScalarFieldEnum | ModuleCertificateScalarFieldEnum[]
  }

  /**
   * ModuleCertificate create
   */
  export type ModuleCertificateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * The data needed to create a ModuleCertificate.
     */
    data: XOR<ModuleCertificateCreateInput, ModuleCertificateUncheckedCreateInput>
  }

  /**
   * ModuleCertificate createMany
   */
  export type ModuleCertificateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ModuleCertificates.
     */
    data: ModuleCertificateCreateManyInput | ModuleCertificateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModuleCertificate createManyAndReturn
   */
  export type ModuleCertificateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ModuleCertificates.
     */
    data: ModuleCertificateCreateManyInput | ModuleCertificateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ModuleCertificate update
   */
  export type ModuleCertificateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * The data needed to update a ModuleCertificate.
     */
    data: XOR<ModuleCertificateUpdateInput, ModuleCertificateUncheckedUpdateInput>
    /**
     * Choose, which ModuleCertificate to update.
     */
    where: ModuleCertificateWhereUniqueInput
  }

  /**
   * ModuleCertificate updateMany
   */
  export type ModuleCertificateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ModuleCertificates.
     */
    data: XOR<ModuleCertificateUpdateManyMutationInput, ModuleCertificateUncheckedUpdateManyInput>
    /**
     * Filter which ModuleCertificates to update
     */
    where?: ModuleCertificateWhereInput
  }

  /**
   * ModuleCertificate upsert
   */
  export type ModuleCertificateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * The filter to search for the ModuleCertificate to update in case it exists.
     */
    where: ModuleCertificateWhereUniqueInput
    /**
     * In case the ModuleCertificate found by the `where` argument doesn't exist, create a new ModuleCertificate with this data.
     */
    create: XOR<ModuleCertificateCreateInput, ModuleCertificateUncheckedCreateInput>
    /**
     * In case the ModuleCertificate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModuleCertificateUpdateInput, ModuleCertificateUncheckedUpdateInput>
  }

  /**
   * ModuleCertificate delete
   */
  export type ModuleCertificateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
    /**
     * Filter which ModuleCertificate to delete.
     */
    where: ModuleCertificateWhereUniqueInput
  }

  /**
   * ModuleCertificate deleteMany
   */
  export type ModuleCertificateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModuleCertificates to delete
     */
    where?: ModuleCertificateWhereInput
  }

  /**
   * ModuleCertificate without action
   */
  export type ModuleCertificateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModuleCertificate
     */
    select?: ModuleCertificateSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModuleCertificateInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    avatarUrl: 'avatarUrl',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    active: 'active',
    status: 'status',
    role: 'role',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    address: 'address',
    municipality: 'municipality',
    department: 'department',
    country: 'country',
    birthDate: 'birthDate',
    gender: 'gender',
    documentType: 'documentType',
    documentNumber: 'documentNumber',
    educationLevel: 'educationLevel',
    currentInstitution: 'currentInstitution',
    graduationYear: 'graduationYear',
    isStudying: 'isStudying',
    educationHistory: 'educationHistory',
    currentDegree: 'currentDegree',
    universityName: 'universityName',
    universityStartDate: 'universityStartDate',
    universityEndDate: 'universityEndDate',
    universityStatus: 'universityStatus',
    gpa: 'gpa',
    academicAchievements: 'academicAchievements',
    skills: 'skills',
    interests: 'interests',
    workExperience: 'workExperience',
    companyName: 'companyName',
    taxId: 'taxId',
    legalRepresentative: 'legalRepresentative',
    businessSector: 'businessSector',
    companySize: 'companySize',
    companyDescription: 'companyDescription',
    website: 'website',
    foundedYear: 'foundedYear',
    institutionName: 'institutionName',
    institutionType: 'institutionType',
    serviceArea: 'serviceArea',
    specialization: 'specialization',
    institutionDescription: 'institutionDescription',
    profileCompletion: 'profileCompletion',
    lastLoginAt: 'lastLoginAt',
    parentalConsent: 'parentalConsent',
    parentEmail: 'parentEmail',
    consentDate: 'consentDate',
    achievements: 'achievements',
    jobTitle: 'jobTitle',
    addressLine: 'addressLine',
    cityState: 'cityState',
    languages: 'languages',
    websites: 'websites',
    skillsWithLevel: 'skillsWithLevel',
    extracurricularActivities: 'extracurricularActivities',
    projects: 'projects',
    coverLetterRecipient: 'coverLetterRecipient',
    coverLetterSubject: 'coverLetterSubject',
    coverLetterContent: 'coverLetterContent',
    coverLetterTemplate: 'coverLetterTemplate',
    companyId: 'companyId'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const JobOfferScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    requirements: 'requirements',
    benefits: 'benefits',
    salaryMin: 'salaryMin',
    salaryMax: 'salaryMax',
    salaryCurrency: 'salaryCurrency',
    contractType: 'contractType',
    workSchedule: 'workSchedule',
    workModality: 'workModality',
    location: 'location',
    latitude: 'latitude',
    longitude: 'longitude',
    images: 'images',
    logo: 'logo',
    municipality: 'municipality',
    department: 'department',
    experienceLevel: 'experienceLevel',
    educationRequired: 'educationRequired',
    skillsRequired: 'skillsRequired',
    desiredSkills: 'desiredSkills',
    applicationDeadline: 'applicationDeadline',
    isActive: 'isActive',
    status: 'status',
    viewsCount: 'viewsCount',
    applicationsCount: 'applicationsCount',
    featured: 'featured',
    expiresAt: 'expiresAt',
    publishedAt: 'publishedAt',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type JobOfferScalarFieldEnum = (typeof JobOfferScalarFieldEnum)[keyof typeof JobOfferScalarFieldEnum]


  export const JobQuestionScalarFieldEnum: {
    id: 'id',
    jobOfferId: 'jobOfferId',
    question: 'question',
    type: 'type',
    required: 'required',
    options: 'options',
    orderIndex: 'orderIndex'
  };

  export type JobQuestionScalarFieldEnum = (typeof JobQuestionScalarFieldEnum)[keyof typeof JobQuestionScalarFieldEnum]


  export const JobApplicationScalarFieldEnum: {
    id: 'id',
    applicantId: 'applicantId',
    jobOfferId: 'jobOfferId',
    coverLetter: 'coverLetter',
    cvData: 'cvData',
    cvFile: 'cvFile',
    coverLetterFile: 'coverLetterFile',
    profileImage: 'profileImage',
    status: 'status',
    appliedAt: 'appliedAt',
    reviewedAt: 'reviewedAt',
    notes: 'notes',
    rating: 'rating',
    decisionReason: 'decisionReason'
  };

  export type JobApplicationScalarFieldEnum = (typeof JobApplicationScalarFieldEnum)[keyof typeof JobApplicationScalarFieldEnum]


  export const JobQuestionAnswerScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    questionId: 'questionId',
    answer: 'answer'
  };

  export type JobQuestionAnswerScalarFieldEnum = (typeof JobQuestionAnswerScalarFieldEnum)[keyof typeof JobQuestionAnswerScalarFieldEnum]


  export const JobApplicationMessageScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    senderId: 'senderId',
    senderType: 'senderType',
    content: 'content',
    messageType: 'messageType',
    status: 'status',
    createdAt: 'createdAt',
    readAt: 'readAt'
  };

  export type JobApplicationMessageScalarFieldEnum = (typeof JobApplicationMessageScalarFieldEnum)[keyof typeof JobApplicationMessageScalarFieldEnum]


  export const CourseScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    description: 'description',
    shortDescription: 'shortDescription',
    thumbnail: 'thumbnail',
    videoPreview: 'videoPreview',
    objectives: 'objectives',
    prerequisites: 'prerequisites',
    duration: 'duration',
    level: 'level',
    category: 'category',
    isMandatory: 'isMandatory',
    isActive: 'isActive',
    price: 'price',
    rating: 'rating',
    studentsCount: 'studentsCount',
    completionRate: 'completionRate',
    totalLessons: 'totalLessons',
    totalQuizzes: 'totalQuizzes',
    totalResources: 'totalResources',
    tags: 'tags',
    certification: 'certification',
    includedMaterials: 'includedMaterials',
    instructorId: 'instructorId',
    institutionName: 'institutionName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    publishedAt: 'publishedAt'
  };

  export type CourseScalarFieldEnum = (typeof CourseScalarFieldEnum)[keyof typeof CourseScalarFieldEnum]


  export const CourseModuleScalarFieldEnum: {
    id: 'id',
    courseId: 'courseId',
    title: 'title',
    description: 'description',
    orderIndex: 'orderIndex',
    estimatedDuration: 'estimatedDuration',
    isLocked: 'isLocked',
    prerequisites: 'prerequisites',
    hasCertificate: 'hasCertificate',
    certificateTemplate: 'certificateTemplate'
  };

  export type CourseModuleScalarFieldEnum = (typeof CourseModuleScalarFieldEnum)[keyof typeof CourseModuleScalarFieldEnum]


  export const LessonScalarFieldEnum: {
    id: 'id',
    moduleId: 'moduleId',
    title: 'title',
    description: 'description',
    content: 'content',
    contentType: 'contentType',
    videoUrl: 'videoUrl',
    duration: 'duration',
    orderIndex: 'orderIndex',
    isRequired: 'isRequired',
    isPreview: 'isPreview',
    attachments: 'attachments'
  };

  export type LessonScalarFieldEnum = (typeof LessonScalarFieldEnum)[keyof typeof LessonScalarFieldEnum]


  export const CourseEnrollmentScalarFieldEnum: {
    id: 'id',
    studentId: 'studentId',
    courseId: 'courseId',
    enrolledAt: 'enrolledAt',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    status: 'status',
    progress: 'progress',
    currentModuleId: 'currentModuleId',
    currentLessonId: 'currentLessonId',
    certificateUrl: 'certificateUrl',
    timeSpent: 'timeSpent',
    certificateIssued: 'certificateIssued',
    finalGrade: 'finalGrade',
    moduleProgress: 'moduleProgress',
    quizResults: 'quizResults'
  };

  export type CourseEnrollmentScalarFieldEnum = (typeof CourseEnrollmentScalarFieldEnum)[keyof typeof CourseEnrollmentScalarFieldEnum]


  export const LessonProgressScalarFieldEnum: {
    id: 'id',
    enrollmentId: 'enrollmentId',
    lessonId: 'lessonId',
    isCompleted: 'isCompleted',
    completedAt: 'completedAt',
    timeSpent: 'timeSpent',
    videoProgress: 'videoProgress',
    lastWatchedAt: 'lastWatchedAt'
  };

  export type LessonProgressScalarFieldEnum = (typeof LessonProgressScalarFieldEnum)[keyof typeof LessonProgressScalarFieldEnum]


  export const QuizScalarFieldEnum: {
    id: 'id',
    courseId: 'courseId',
    lessonId: 'lessonId',
    title: 'title',
    description: 'description',
    timeLimit: 'timeLimit',
    passingScore: 'passingScore',
    showCorrectAnswers: 'showCorrectAnswers',
    isActive: 'isActive'
  };

  export type QuizScalarFieldEnum = (typeof QuizScalarFieldEnum)[keyof typeof QuizScalarFieldEnum]


  export const QuizQuestionScalarFieldEnum: {
    id: 'id',
    quizId: 'quizId',
    question: 'question',
    type: 'type',
    options: 'options',
    correctAnswer: 'correctAnswer',
    explanation: 'explanation',
    points: 'points',
    orderIndex: 'orderIndex'
  };

  export type QuizQuestionScalarFieldEnum = (typeof QuizQuestionScalarFieldEnum)[keyof typeof QuizQuestionScalarFieldEnum]


  export const QuizAttemptScalarFieldEnum: {
    id: 'id',
    enrollmentId: 'enrollmentId',
    quizId: 'quizId',
    studentId: 'studentId',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    score: 'score',
    passed: 'passed',
    timeSpent: 'timeSpent'
  };

  export type QuizAttemptScalarFieldEnum = (typeof QuizAttemptScalarFieldEnum)[keyof typeof QuizAttemptScalarFieldEnum]


  export const QuizAnswerScalarFieldEnum: {
    id: 'id',
    attemptId: 'attemptId',
    questionId: 'questionId',
    answer: 'answer',
    isCorrect: 'isCorrect',
    timeSpent: 'timeSpent'
  };

  export type QuizAnswerScalarFieldEnum = (typeof QuizAnswerScalarFieldEnum)[keyof typeof QuizAnswerScalarFieldEnum]


  export const CertificateScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    courseId: 'courseId',
    template: 'template',
    issuedAt: 'issuedAt',
    verificationCode: 'verificationCode',
    digitalSignature: 'digitalSignature',
    isValid: 'isValid',
    url: 'url'
  };

  export type CertificateScalarFieldEnum = (typeof CertificateScalarFieldEnum)[keyof typeof CertificateScalarFieldEnum]


  export const StudentNoteScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    lessonId: 'lessonId',
    content: 'content',
    timestamp: 'timestamp',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StudentNoteScalarFieldEnum = (typeof StudentNoteScalarFieldEnum)[keyof typeof StudentNoteScalarFieldEnum]


  export const DiscussionScalarFieldEnum: {
    id: 'id',
    lessonId: 'lessonId',
    userId: 'userId',
    content: 'content',
    parentId: 'parentId',
    likes: 'likes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DiscussionScalarFieldEnum = (typeof DiscussionScalarFieldEnum)[keyof typeof DiscussionScalarFieldEnum]


  export const EntrepreneurshipScalarFieldEnum: {
    id: 'id',
    ownerId: 'ownerId',
    name: 'name',
    description: 'description',
    category: 'category',
    subcategory: 'subcategory',
    businessStage: 'businessStage',
    logo: 'logo',
    images: 'images',
    website: 'website',
    email: 'email',
    phone: 'phone',
    address: 'address',
    municipality: 'municipality',
    department: 'department',
    socialMedia: 'socialMedia',
    founded: 'founded',
    employees: 'employees',
    annualRevenue: 'annualRevenue',
    businessModel: 'businessModel',
    targetMarket: 'targetMarket',
    isPublic: 'isPublic',
    isActive: 'isActive',
    viewsCount: 'viewsCount',
    rating: 'rating',
    reviewsCount: 'reviewsCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EntrepreneurshipScalarFieldEnum = (typeof EntrepreneurshipScalarFieldEnum)[keyof typeof EntrepreneurshipScalarFieldEnum]


  export const BusinessPlanScalarFieldEnum: {
    id: 'id',
    entrepreneurshipId: 'entrepreneurshipId',
    executiveSummary: 'executiveSummary',
    missionStatement: 'missionStatement',
    visionStatement: 'visionStatement',
    marketAnalysis: 'marketAnalysis',
    targetMarket: 'targetMarket',
    competitiveAnalysis: 'competitiveAnalysis',
    businessModelCanvas: 'businessModelCanvas',
    revenueStreams: 'revenueStreams',
    costStructure: 'costStructure',
    marketingStrategy: 'marketingStrategy',
    pricingStrategy: 'pricingStrategy',
    salesStrategy: 'salesStrategy',
    initialInvestment: 'initialInvestment',
    monthlyExpenses: 'monthlyExpenses',
    revenueProjection: 'revenueProjection',
    breakEvenPoint: 'breakEvenPoint',
    roi: 'roi',
    riskAnalysis: 'riskAnalysis',
    mitigationStrategies: 'mitigationStrategies',
    operationalPlan: 'operationalPlan',
    managementTeam: 'managementTeam',
    tripleImpactAssessment: 'tripleImpactAssessment',
    isCompleted: 'isCompleted',
    lastSection: 'lastSection',
    completionPercentage: 'completionPercentage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessPlanScalarFieldEnum = (typeof BusinessPlanScalarFieldEnum)[keyof typeof BusinessPlanScalarFieldEnum]


  export const NewsArticleScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    summary: 'summary',
    imageUrl: 'imageUrl',
    videoUrl: 'videoUrl',
    authorId: 'authorId',
    authorName: 'authorName',
    authorType: 'authorType',
    authorLogo: 'authorLogo',
    status: 'status',
    priority: 'priority',
    featured: 'featured',
    tags: 'tags',
    category: 'category',
    publishedAt: 'publishedAt',
    expiresAt: 'expiresAt',
    viewCount: 'viewCount',
    likeCount: 'likeCount',
    commentCount: 'commentCount',
    targetAudience: 'targetAudience',
    region: 'region',
    relatedLinks: 'relatedLinks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NewsArticleScalarFieldEnum = (typeof NewsArticleScalarFieldEnum)[keyof typeof NewsArticleScalarFieldEnum]


  export const NewsCommentScalarFieldEnum: {
    id: 'id',
    newsId: 'newsId',
    userId: 'userId',
    userName: 'userName',
    userAvatar: 'userAvatar',
    content: 'content',
    parentId: 'parentId',
    likes: 'likes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NewsCommentScalarFieldEnum = (typeof NewsCommentScalarFieldEnum)[keyof typeof NewsCommentScalarFieldEnum]


  export const ResourceScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    type: 'type',
    category: 'category',
    format: 'format',
    downloadUrl: 'downloadUrl',
    externalUrl: 'externalUrl',
    thumbnail: 'thumbnail',
    author: 'author',
    publishedDate: 'publishedDate',
    downloads: 'downloads',
    rating: 'rating',
    tags: 'tags',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ResourceScalarFieldEnum = (typeof ResourceScalarFieldEnum)[keyof typeof ResourceScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    role: 'role',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    revoked: 'revoked',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const ExternalApiKeyScalarFieldEnum: {
    id: 'id',
    key: 'key',
    name: 'name',
    active: 'active',
    createdAt: 'createdAt',
    revokedAt: 'revokedAt'
  };

  export type ExternalApiKeyScalarFieldEnum = (typeof ExternalApiKeyScalarFieldEnum)[keyof typeof ExternalApiKeyScalarFieldEnum]


  export const InstitutionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    department: 'department',
    region: 'region',
    population: 'population',
    mayorName: 'mayorName',
    mayorEmail: 'mayorEmail',
    mayorPhone: 'mayorPhone',
    address: 'address',
    website: 'website',
    isActive: 'isActive',
    username: 'username',
    password: 'password',
    email: 'email',
    phone: 'phone',
    institutionType: 'institutionType',
    customType: 'customType',
    primaryColor: 'primaryColor',
    secondaryColor: 'secondaryColor',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InstitutionScalarFieldEnum = (typeof InstitutionScalarFieldEnum)[keyof typeof InstitutionScalarFieldEnum]


  export const MunicipalityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    department: 'department',
    region: 'region',
    population: 'population',
    mayorName: 'mayorName',
    mayorEmail: 'mayorEmail',
    mayorPhone: 'mayorPhone',
    address: 'address',
    website: 'website',
    isActive: 'isActive',
    username: 'username',
    password: 'password',
    email: 'email',
    phone: 'phone',
    institutionType: 'institutionType',
    customType: 'customType',
    primaryColor: 'primaryColor',
    secondaryColor: 'secondaryColor',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MunicipalityScalarFieldEnum = (typeof MunicipalityScalarFieldEnum)[keyof typeof MunicipalityScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    taxId: 'taxId',
    legalRepresentative: 'legalRepresentative',
    businessSector: 'businessSector',
    companySize: 'companySize',
    website: 'website',
    email: 'email',
    phone: 'phone',
    address: 'address',
    foundedYear: 'foundedYear',
    isActive: 'isActive',
    username: 'username',
    password: 'password',
    loginEmail: 'loginEmail',
    municipalityId: 'municipalityId',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    contactId: 'contactId',
    status: 'status',
    requestMessage: 'requestMessage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const ConversationScalarFieldEnum: {
    id: 'id',
    participants: 'participants',
    lastMessageContent: 'lastMessageContent',
    lastMessageTime: 'lastMessageTime',
    unreadCount: 'unreadCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    conversationId: 'conversationId',
    senderId: 'senderId',
    receiverId: 'receiverId',
    content: 'content',
    messageType: 'messageType',
    status: 'status',
    createdAt: 'createdAt',
    readAt: 'readAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const LessonResourceScalarFieldEnum: {
    id: 'id',
    lessonId: 'lessonId',
    title: 'title',
    description: 'description',
    type: 'type',
    url: 'url',
    filePath: 'filePath',
    fileSize: 'fileSize',
    orderIndex: 'orderIndex',
    isDownloadable: 'isDownloadable',
    createdAt: 'createdAt'
  };

  export type LessonResourceScalarFieldEnum = (typeof LessonResourceScalarFieldEnum)[keyof typeof LessonResourceScalarFieldEnum]


  export const ModuleCertificateScalarFieldEnum: {
    id: 'id',
    moduleId: 'moduleId',
    studentId: 'studentId',
    certificateUrl: 'certificateUrl',
    issuedAt: 'issuedAt',
    grade: 'grade',
    completedAt: 'completedAt'
  };

  export type ModuleCertificateScalarFieldEnum = (typeof ModuleCertificateScalarFieldEnum)[keyof typeof ModuleCertificateScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'EducationLevel'
   */
  export type EnumEducationLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EducationLevel'>
    


  /**
   * Reference to a field of type 'EducationLevel[]'
   */
  export type ListEnumEducationLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EducationLevel[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'CompanySize'
   */
  export type EnumCompanySizeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanySize'>
    


  /**
   * Reference to a field of type 'CompanySize[]'
   */
  export type ListEnumCompanySizeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanySize[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'ContractType'
   */
  export type EnumContractTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContractType'>
    


  /**
   * Reference to a field of type 'ContractType[]'
   */
  export type ListEnumContractTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContractType[]'>
    


  /**
   * Reference to a field of type 'WorkModality'
   */
  export type EnumWorkModalityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WorkModality'>
    


  /**
   * Reference to a field of type 'WorkModality[]'
   */
  export type ListEnumWorkModalityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WorkModality[]'>
    


  /**
   * Reference to a field of type 'ExperienceLevel'
   */
  export type EnumExperienceLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ExperienceLevel'>
    


  /**
   * Reference to a field of type 'ExperienceLevel[]'
   */
  export type ListEnumExperienceLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ExperienceLevel[]'>
    


  /**
   * Reference to a field of type 'JobStatus'
   */
  export type EnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus'>
    


  /**
   * Reference to a field of type 'JobStatus[]'
   */
  export type ListEnumJobStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JobStatus[]'>
    


  /**
   * Reference to a field of type 'ApplicationStatus'
   */
  export type EnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus'>
    


  /**
   * Reference to a field of type 'ApplicationStatus[]'
   */
  export type ListEnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus[]'>
    


  /**
   * Reference to a field of type 'SenderType'
   */
  export type EnumSenderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SenderType'>
    


  /**
   * Reference to a field of type 'SenderType[]'
   */
  export type ListEnumSenderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SenderType[]'>
    


  /**
   * Reference to a field of type 'MessageType'
   */
  export type EnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType'>
    


  /**
   * Reference to a field of type 'MessageType[]'
   */
  export type ListEnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType[]'>
    


  /**
   * Reference to a field of type 'MessageStatus'
   */
  export type EnumMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageStatus'>
    


  /**
   * Reference to a field of type 'MessageStatus[]'
   */
  export type ListEnumMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageStatus[]'>
    


  /**
   * Reference to a field of type 'CourseLevel'
   */
  export type EnumCourseLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CourseLevel'>
    


  /**
   * Reference to a field of type 'CourseLevel[]'
   */
  export type ListEnumCourseLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CourseLevel[]'>
    


  /**
   * Reference to a field of type 'CourseCategory'
   */
  export type EnumCourseCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CourseCategory'>
    


  /**
   * Reference to a field of type 'CourseCategory[]'
   */
  export type ListEnumCourseCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CourseCategory[]'>
    


  /**
   * Reference to a field of type 'LessonType'
   */
  export type EnumLessonTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LessonType'>
    


  /**
   * Reference to a field of type 'LessonType[]'
   */
  export type ListEnumLessonTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LessonType[]'>
    


  /**
   * Reference to a field of type 'EnrollmentStatus'
   */
  export type EnumEnrollmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EnrollmentStatus'>
    


  /**
   * Reference to a field of type 'EnrollmentStatus[]'
   */
  export type ListEnumEnrollmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EnrollmentStatus[]'>
    


  /**
   * Reference to a field of type 'QuestionType'
   */
  export type EnumQuestionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QuestionType'>
    


  /**
   * Reference to a field of type 'QuestionType[]'
   */
  export type ListEnumQuestionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QuestionType[]'>
    


  /**
   * Reference to a field of type 'BusinessStage'
   */
  export type EnumBusinessStageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessStage'>
    


  /**
   * Reference to a field of type 'BusinessStage[]'
   */
  export type ListEnumBusinessStageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessStage[]'>
    


  /**
   * Reference to a field of type 'NewsType'
   */
  export type EnumNewsTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsType'>
    


  /**
   * Reference to a field of type 'NewsType[]'
   */
  export type ListEnumNewsTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsType[]'>
    


  /**
   * Reference to a field of type 'NewsStatus'
   */
  export type EnumNewsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsStatus'>
    


  /**
   * Reference to a field of type 'NewsStatus[]'
   */
  export type ListEnumNewsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsStatus[]'>
    


  /**
   * Reference to a field of type 'NewsPriority'
   */
  export type EnumNewsPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsPriority'>
    


  /**
   * Reference to a field of type 'NewsPriority[]'
   */
  export type ListEnumNewsPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsPriority[]'>
    


  /**
   * Reference to a field of type 'InstitutionType'
   */
  export type EnumInstitutionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InstitutionType'>
    


  /**
   * Reference to a field of type 'InstitutionType[]'
   */
  export type ListEnumInstitutionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InstitutionType[]'>
    


  /**
   * Reference to a field of type 'ContactStatus'
   */
  export type EnumContactStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContactStatus'>
    


  /**
   * Reference to a field of type 'ContactStatus[]'
   */
  export type ListEnumContactStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContactStatus[]'>
    


  /**
   * Reference to a field of type 'ResourceType'
   */
  export type EnumResourceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ResourceType'>
    


  /**
   * Reference to a field of type 'ResourceType[]'
   */
  export type ListEnumResourceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ResourceType[]'>
    
  /**
   * Deep Input Types
   */


  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: StringFilter<"Profile"> | string
    userId?: StringFilter<"Profile"> | string
    avatarUrl?: StringNullableFilter<"Profile"> | string | null
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    active?: BoolFilter<"Profile"> | boolean
    status?: EnumUserStatusFilter<"Profile"> | $Enums.UserStatus
    role?: EnumUserRoleFilter<"Profile"> | $Enums.UserRole
    firstName?: StringNullableFilter<"Profile"> | string | null
    lastName?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    address?: StringNullableFilter<"Profile"> | string | null
    municipality?: StringNullableFilter<"Profile"> | string | null
    department?: StringNullableFilter<"Profile"> | string | null
    country?: StringNullableFilter<"Profile"> | string | null
    birthDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    gender?: StringNullableFilter<"Profile"> | string | null
    documentType?: StringNullableFilter<"Profile"> | string | null
    documentNumber?: StringNullableFilter<"Profile"> | string | null
    educationLevel?: EnumEducationLevelNullableFilter<"Profile"> | $Enums.EducationLevel | null
    currentInstitution?: StringNullableFilter<"Profile"> | string | null
    graduationYear?: IntNullableFilter<"Profile"> | number | null
    isStudying?: BoolNullableFilter<"Profile"> | boolean | null
    educationHistory?: JsonNullableFilter<"Profile">
    currentDegree?: StringNullableFilter<"Profile"> | string | null
    universityName?: StringNullableFilter<"Profile"> | string | null
    universityStartDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityEndDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityStatus?: StringNullableFilter<"Profile"> | string | null
    gpa?: FloatNullableFilter<"Profile"> | number | null
    academicAchievements?: JsonNullableFilter<"Profile">
    skills?: StringNullableListFilter<"Profile">
    interests?: StringNullableListFilter<"Profile">
    workExperience?: JsonNullableFilter<"Profile">
    companyName?: StringNullableFilter<"Profile"> | string | null
    taxId?: StringNullableFilter<"Profile"> | string | null
    legalRepresentative?: StringNullableFilter<"Profile"> | string | null
    businessSector?: StringNullableFilter<"Profile"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Profile"> | $Enums.CompanySize | null
    companyDescription?: StringNullableFilter<"Profile"> | string | null
    website?: StringNullableFilter<"Profile"> | string | null
    foundedYear?: IntNullableFilter<"Profile"> | number | null
    institutionName?: StringNullableFilter<"Profile"> | string | null
    institutionType?: StringNullableFilter<"Profile"> | string | null
    serviceArea?: StringNullableFilter<"Profile"> | string | null
    specialization?: StringNullableListFilter<"Profile">
    institutionDescription?: StringNullableFilter<"Profile"> | string | null
    profileCompletion?: IntFilter<"Profile"> | number
    lastLoginAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    parentalConsent?: BoolFilter<"Profile"> | boolean
    parentEmail?: StringNullableFilter<"Profile"> | string | null
    consentDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    achievements?: JsonNullableFilter<"Profile">
    jobTitle?: StringNullableFilter<"Profile"> | string | null
    addressLine?: StringNullableFilter<"Profile"> | string | null
    cityState?: StringNullableFilter<"Profile"> | string | null
    languages?: JsonNullableFilter<"Profile">
    websites?: JsonNullableFilter<"Profile">
    skillsWithLevel?: JsonNullableFilter<"Profile">
    extracurricularActivities?: JsonNullableFilter<"Profile">
    projects?: JsonNullableFilter<"Profile">
    coverLetterRecipient?: JsonNullableFilter<"Profile">
    coverLetterSubject?: StringNullableFilter<"Profile"> | string | null
    coverLetterContent?: StringNullableFilter<"Profile"> | string | null
    coverLetterTemplate?: StringNullableFilter<"Profile"> | string | null
    companyId?: StringNullableFilter<"Profile"> | string | null
    contacts?: ContactListRelationFilter
    contactOf?: ContactListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    certificates?: CertificateListRelationFilter
    courseEnrollments?: CourseEnrollmentListRelationFilter
    instructedCourses?: CourseListRelationFilter
    discussions?: DiscussionListRelationFilter
    entrepreneurships?: EntrepreneurshipListRelationFilter
    jobApplications?: JobApplicationListRelationFilter
    newsArticles?: NewsArticleListRelationFilter
    newsComments?: NewsCommentListRelationFilter
    company?: XOR<CompanyNullableRelationFilter, CompanyWhereInput> | null
    quizAttempts?: QuizAttemptListRelationFilter
    studentNotes?: StudentNoteListRelationFilter
    moduleCertificates?: ModuleCertificateListRelationFilter
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    active?: SortOrder
    status?: SortOrder
    role?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    municipality?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    birthDate?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    documentType?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    educationLevel?: SortOrderInput | SortOrder
    currentInstitution?: SortOrderInput | SortOrder
    graduationYear?: SortOrderInput | SortOrder
    isStudying?: SortOrderInput | SortOrder
    educationHistory?: SortOrderInput | SortOrder
    currentDegree?: SortOrderInput | SortOrder
    universityName?: SortOrderInput | SortOrder
    universityStartDate?: SortOrderInput | SortOrder
    universityEndDate?: SortOrderInput | SortOrder
    universityStatus?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    academicAchievements?: SortOrderInput | SortOrder
    skills?: SortOrder
    interests?: SortOrder
    workExperience?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    legalRepresentative?: SortOrderInput | SortOrder
    businessSector?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    companyDescription?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    foundedYear?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    institutionType?: SortOrderInput | SortOrder
    serviceArea?: SortOrderInput | SortOrder
    specialization?: SortOrder
    institutionDescription?: SortOrderInput | SortOrder
    profileCompletion?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    parentalConsent?: SortOrder
    parentEmail?: SortOrderInput | SortOrder
    consentDate?: SortOrderInput | SortOrder
    achievements?: SortOrderInput | SortOrder
    jobTitle?: SortOrderInput | SortOrder
    addressLine?: SortOrderInput | SortOrder
    cityState?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    websites?: SortOrderInput | SortOrder
    skillsWithLevel?: SortOrderInput | SortOrder
    extracurricularActivities?: SortOrderInput | SortOrder
    projects?: SortOrderInput | SortOrder
    coverLetterRecipient?: SortOrderInput | SortOrder
    coverLetterSubject?: SortOrderInput | SortOrder
    coverLetterContent?: SortOrderInput | SortOrder
    coverLetterTemplate?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    contacts?: ContactOrderByRelationAggregateInput
    contactOf?: ContactOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    certificates?: CertificateOrderByRelationAggregateInput
    courseEnrollments?: CourseEnrollmentOrderByRelationAggregateInput
    instructedCourses?: CourseOrderByRelationAggregateInput
    discussions?: DiscussionOrderByRelationAggregateInput
    entrepreneurships?: EntrepreneurshipOrderByRelationAggregateInput
    jobApplications?: JobApplicationOrderByRelationAggregateInput
    newsArticles?: NewsArticleOrderByRelationAggregateInput
    newsComments?: NewsCommentOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    quizAttempts?: QuizAttemptOrderByRelationAggregateInput
    studentNotes?: StudentNoteOrderByRelationAggregateInput
    moduleCertificates?: ModuleCertificateOrderByRelationAggregateInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    avatarUrl?: StringNullableFilter<"Profile"> | string | null
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    active?: BoolFilter<"Profile"> | boolean
    status?: EnumUserStatusFilter<"Profile"> | $Enums.UserStatus
    role?: EnumUserRoleFilter<"Profile"> | $Enums.UserRole
    firstName?: StringNullableFilter<"Profile"> | string | null
    lastName?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    address?: StringNullableFilter<"Profile"> | string | null
    municipality?: StringNullableFilter<"Profile"> | string | null
    department?: StringNullableFilter<"Profile"> | string | null
    country?: StringNullableFilter<"Profile"> | string | null
    birthDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    gender?: StringNullableFilter<"Profile"> | string | null
    documentType?: StringNullableFilter<"Profile"> | string | null
    documentNumber?: StringNullableFilter<"Profile"> | string | null
    educationLevel?: EnumEducationLevelNullableFilter<"Profile"> | $Enums.EducationLevel | null
    currentInstitution?: StringNullableFilter<"Profile"> | string | null
    graduationYear?: IntNullableFilter<"Profile"> | number | null
    isStudying?: BoolNullableFilter<"Profile"> | boolean | null
    educationHistory?: JsonNullableFilter<"Profile">
    currentDegree?: StringNullableFilter<"Profile"> | string | null
    universityName?: StringNullableFilter<"Profile"> | string | null
    universityStartDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityEndDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityStatus?: StringNullableFilter<"Profile"> | string | null
    gpa?: FloatNullableFilter<"Profile"> | number | null
    academicAchievements?: JsonNullableFilter<"Profile">
    skills?: StringNullableListFilter<"Profile">
    interests?: StringNullableListFilter<"Profile">
    workExperience?: JsonNullableFilter<"Profile">
    companyName?: StringNullableFilter<"Profile"> | string | null
    taxId?: StringNullableFilter<"Profile"> | string | null
    legalRepresentative?: StringNullableFilter<"Profile"> | string | null
    businessSector?: StringNullableFilter<"Profile"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Profile"> | $Enums.CompanySize | null
    companyDescription?: StringNullableFilter<"Profile"> | string | null
    website?: StringNullableFilter<"Profile"> | string | null
    foundedYear?: IntNullableFilter<"Profile"> | number | null
    institutionName?: StringNullableFilter<"Profile"> | string | null
    institutionType?: StringNullableFilter<"Profile"> | string | null
    serviceArea?: StringNullableFilter<"Profile"> | string | null
    specialization?: StringNullableListFilter<"Profile">
    institutionDescription?: StringNullableFilter<"Profile"> | string | null
    profileCompletion?: IntFilter<"Profile"> | number
    lastLoginAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    parentalConsent?: BoolFilter<"Profile"> | boolean
    parentEmail?: StringNullableFilter<"Profile"> | string | null
    consentDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    achievements?: JsonNullableFilter<"Profile">
    jobTitle?: StringNullableFilter<"Profile"> | string | null
    addressLine?: StringNullableFilter<"Profile"> | string | null
    cityState?: StringNullableFilter<"Profile"> | string | null
    languages?: JsonNullableFilter<"Profile">
    websites?: JsonNullableFilter<"Profile">
    skillsWithLevel?: JsonNullableFilter<"Profile">
    extracurricularActivities?: JsonNullableFilter<"Profile">
    projects?: JsonNullableFilter<"Profile">
    coverLetterRecipient?: JsonNullableFilter<"Profile">
    coverLetterSubject?: StringNullableFilter<"Profile"> | string | null
    coverLetterContent?: StringNullableFilter<"Profile"> | string | null
    coverLetterTemplate?: StringNullableFilter<"Profile"> | string | null
    companyId?: StringNullableFilter<"Profile"> | string | null
    contacts?: ContactListRelationFilter
    contactOf?: ContactListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    certificates?: CertificateListRelationFilter
    courseEnrollments?: CourseEnrollmentListRelationFilter
    instructedCourses?: CourseListRelationFilter
    discussions?: DiscussionListRelationFilter
    entrepreneurships?: EntrepreneurshipListRelationFilter
    jobApplications?: JobApplicationListRelationFilter
    newsArticles?: NewsArticleListRelationFilter
    newsComments?: NewsCommentListRelationFilter
    company?: XOR<CompanyNullableRelationFilter, CompanyWhereInput> | null
    quizAttempts?: QuizAttemptListRelationFilter
    studentNotes?: StudentNoteListRelationFilter
    moduleCertificates?: ModuleCertificateListRelationFilter
  }, "id" | "userId">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    active?: SortOrder
    status?: SortOrder
    role?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    municipality?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    birthDate?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    documentType?: SortOrderInput | SortOrder
    documentNumber?: SortOrderInput | SortOrder
    educationLevel?: SortOrderInput | SortOrder
    currentInstitution?: SortOrderInput | SortOrder
    graduationYear?: SortOrderInput | SortOrder
    isStudying?: SortOrderInput | SortOrder
    educationHistory?: SortOrderInput | SortOrder
    currentDegree?: SortOrderInput | SortOrder
    universityName?: SortOrderInput | SortOrder
    universityStartDate?: SortOrderInput | SortOrder
    universityEndDate?: SortOrderInput | SortOrder
    universityStatus?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    academicAchievements?: SortOrderInput | SortOrder
    skills?: SortOrder
    interests?: SortOrder
    workExperience?: SortOrderInput | SortOrder
    companyName?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    legalRepresentative?: SortOrderInput | SortOrder
    businessSector?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    companyDescription?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    foundedYear?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    institutionType?: SortOrderInput | SortOrder
    serviceArea?: SortOrderInput | SortOrder
    specialization?: SortOrder
    institutionDescription?: SortOrderInput | SortOrder
    profileCompletion?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    parentalConsent?: SortOrder
    parentEmail?: SortOrderInput | SortOrder
    consentDate?: SortOrderInput | SortOrder
    achievements?: SortOrderInput | SortOrder
    jobTitle?: SortOrderInput | SortOrder
    addressLine?: SortOrderInput | SortOrder
    cityState?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    websites?: SortOrderInput | SortOrder
    skillsWithLevel?: SortOrderInput | SortOrder
    extracurricularActivities?: SortOrderInput | SortOrder
    projects?: SortOrderInput | SortOrder
    coverLetterRecipient?: SortOrderInput | SortOrder
    coverLetterSubject?: SortOrderInput | SortOrder
    coverLetterContent?: SortOrderInput | SortOrder
    coverLetterTemplate?: SortOrderInput | SortOrder
    companyId?: SortOrderInput | SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _avg?: ProfileAvgOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
    _sum?: ProfileSumOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Profile"> | string
    userId?: StringWithAggregatesFilter<"Profile"> | string
    avatarUrl?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    active?: BoolWithAggregatesFilter<"Profile"> | boolean
    status?: EnumUserStatusWithAggregatesFilter<"Profile"> | $Enums.UserStatus
    role?: EnumUserRoleWithAggregatesFilter<"Profile"> | $Enums.UserRole
    firstName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    email?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    address?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    municipality?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    department?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    country?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    birthDate?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    gender?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    documentType?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    documentNumber?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    educationLevel?: EnumEducationLevelNullableWithAggregatesFilter<"Profile"> | $Enums.EducationLevel | null
    currentInstitution?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    graduationYear?: IntNullableWithAggregatesFilter<"Profile"> | number | null
    isStudying?: BoolNullableWithAggregatesFilter<"Profile"> | boolean | null
    educationHistory?: JsonNullableWithAggregatesFilter<"Profile">
    currentDegree?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    universityName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    universityStartDate?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    universityEndDate?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    universityStatus?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    gpa?: FloatNullableWithAggregatesFilter<"Profile"> | number | null
    academicAchievements?: JsonNullableWithAggregatesFilter<"Profile">
    skills?: StringNullableListFilter<"Profile">
    interests?: StringNullableListFilter<"Profile">
    workExperience?: JsonNullableWithAggregatesFilter<"Profile">
    companyName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    legalRepresentative?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    businessSector?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    companySize?: EnumCompanySizeNullableWithAggregatesFilter<"Profile"> | $Enums.CompanySize | null
    companyDescription?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    website?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    foundedYear?: IntNullableWithAggregatesFilter<"Profile"> | number | null
    institutionName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    institutionType?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    serviceArea?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    specialization?: StringNullableListFilter<"Profile">
    institutionDescription?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    profileCompletion?: IntWithAggregatesFilter<"Profile"> | number
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    parentalConsent?: BoolWithAggregatesFilter<"Profile"> | boolean
    parentEmail?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    consentDate?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    achievements?: JsonNullableWithAggregatesFilter<"Profile">
    jobTitle?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    addressLine?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    cityState?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    languages?: JsonNullableWithAggregatesFilter<"Profile">
    websites?: JsonNullableWithAggregatesFilter<"Profile">
    skillsWithLevel?: JsonNullableWithAggregatesFilter<"Profile">
    extracurricularActivities?: JsonNullableWithAggregatesFilter<"Profile">
    projects?: JsonNullableWithAggregatesFilter<"Profile">
    coverLetterRecipient?: JsonNullableWithAggregatesFilter<"Profile">
    coverLetterSubject?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    coverLetterContent?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    coverLetterTemplate?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    companyId?: StringNullableWithAggregatesFilter<"Profile"> | string | null
  }

  export type JobOfferWhereInput = {
    AND?: JobOfferWhereInput | JobOfferWhereInput[]
    OR?: JobOfferWhereInput[]
    NOT?: JobOfferWhereInput | JobOfferWhereInput[]
    id?: StringFilter<"JobOffer"> | string
    title?: StringFilter<"JobOffer"> | string
    description?: StringFilter<"JobOffer"> | string
    requirements?: StringFilter<"JobOffer"> | string
    benefits?: StringNullableFilter<"JobOffer"> | string | null
    salaryMin?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: StringNullableFilter<"JobOffer"> | string | null
    contractType?: EnumContractTypeFilter<"JobOffer"> | $Enums.ContractType
    workSchedule?: StringFilter<"JobOffer"> | string
    workModality?: EnumWorkModalityFilter<"JobOffer"> | $Enums.WorkModality
    location?: StringFilter<"JobOffer"> | string
    latitude?: FloatNullableFilter<"JobOffer"> | number | null
    longitude?: FloatNullableFilter<"JobOffer"> | number | null
    images?: StringNullableListFilter<"JobOffer">
    logo?: StringNullableFilter<"JobOffer"> | string | null
    municipality?: StringFilter<"JobOffer"> | string
    department?: StringFilter<"JobOffer"> | string
    experienceLevel?: EnumExperienceLevelFilter<"JobOffer"> | $Enums.ExperienceLevel
    educationRequired?: EnumEducationLevelNullableFilter<"JobOffer"> | $Enums.EducationLevel | null
    skillsRequired?: StringNullableListFilter<"JobOffer">
    desiredSkills?: StringNullableListFilter<"JobOffer">
    applicationDeadline?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    isActive?: BoolFilter<"JobOffer"> | boolean
    status?: EnumJobStatusFilter<"JobOffer"> | $Enums.JobStatus
    viewsCount?: IntFilter<"JobOffer"> | number
    applicationsCount?: IntFilter<"JobOffer"> | number
    featured?: BoolFilter<"JobOffer"> | boolean
    expiresAt?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    publishedAt?: DateTimeFilter<"JobOffer"> | Date | string
    companyId?: StringFilter<"JobOffer"> | string
    createdAt?: DateTimeFilter<"JobOffer"> | Date | string
    updatedAt?: DateTimeFilter<"JobOffer"> | Date | string
    applications?: JobApplicationListRelationFilter
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    jobQuestions?: JobQuestionListRelationFilter
  }

  export type JobOfferOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    requirements?: SortOrder
    benefits?: SortOrderInput | SortOrder
    salaryMin?: SortOrderInput | SortOrder
    salaryMax?: SortOrderInput | SortOrder
    salaryCurrency?: SortOrderInput | SortOrder
    contractType?: SortOrder
    workSchedule?: SortOrder
    workModality?: SortOrder
    location?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    images?: SortOrder
    logo?: SortOrderInput | SortOrder
    municipality?: SortOrder
    department?: SortOrder
    experienceLevel?: SortOrder
    educationRequired?: SortOrderInput | SortOrder
    skillsRequired?: SortOrder
    desiredSkills?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    isActive?: SortOrder
    status?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
    featured?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    publishedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    applications?: JobApplicationOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    jobQuestions?: JobQuestionOrderByRelationAggregateInput
  }

  export type JobOfferWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobOfferWhereInput | JobOfferWhereInput[]
    OR?: JobOfferWhereInput[]
    NOT?: JobOfferWhereInput | JobOfferWhereInput[]
    title?: StringFilter<"JobOffer"> | string
    description?: StringFilter<"JobOffer"> | string
    requirements?: StringFilter<"JobOffer"> | string
    benefits?: StringNullableFilter<"JobOffer"> | string | null
    salaryMin?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: StringNullableFilter<"JobOffer"> | string | null
    contractType?: EnumContractTypeFilter<"JobOffer"> | $Enums.ContractType
    workSchedule?: StringFilter<"JobOffer"> | string
    workModality?: EnumWorkModalityFilter<"JobOffer"> | $Enums.WorkModality
    location?: StringFilter<"JobOffer"> | string
    latitude?: FloatNullableFilter<"JobOffer"> | number | null
    longitude?: FloatNullableFilter<"JobOffer"> | number | null
    images?: StringNullableListFilter<"JobOffer">
    logo?: StringNullableFilter<"JobOffer"> | string | null
    municipality?: StringFilter<"JobOffer"> | string
    department?: StringFilter<"JobOffer"> | string
    experienceLevel?: EnumExperienceLevelFilter<"JobOffer"> | $Enums.ExperienceLevel
    educationRequired?: EnumEducationLevelNullableFilter<"JobOffer"> | $Enums.EducationLevel | null
    skillsRequired?: StringNullableListFilter<"JobOffer">
    desiredSkills?: StringNullableListFilter<"JobOffer">
    applicationDeadline?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    isActive?: BoolFilter<"JobOffer"> | boolean
    status?: EnumJobStatusFilter<"JobOffer"> | $Enums.JobStatus
    viewsCount?: IntFilter<"JobOffer"> | number
    applicationsCount?: IntFilter<"JobOffer"> | number
    featured?: BoolFilter<"JobOffer"> | boolean
    expiresAt?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    publishedAt?: DateTimeFilter<"JobOffer"> | Date | string
    companyId?: StringFilter<"JobOffer"> | string
    createdAt?: DateTimeFilter<"JobOffer"> | Date | string
    updatedAt?: DateTimeFilter<"JobOffer"> | Date | string
    applications?: JobApplicationListRelationFilter
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    jobQuestions?: JobQuestionListRelationFilter
  }, "id">

  export type JobOfferOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    requirements?: SortOrder
    benefits?: SortOrderInput | SortOrder
    salaryMin?: SortOrderInput | SortOrder
    salaryMax?: SortOrderInput | SortOrder
    salaryCurrency?: SortOrderInput | SortOrder
    contractType?: SortOrder
    workSchedule?: SortOrder
    workModality?: SortOrder
    location?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    images?: SortOrder
    logo?: SortOrderInput | SortOrder
    municipality?: SortOrder
    department?: SortOrder
    experienceLevel?: SortOrder
    educationRequired?: SortOrderInput | SortOrder
    skillsRequired?: SortOrder
    desiredSkills?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    isActive?: SortOrder
    status?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
    featured?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    publishedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: JobOfferCountOrderByAggregateInput
    _avg?: JobOfferAvgOrderByAggregateInput
    _max?: JobOfferMaxOrderByAggregateInput
    _min?: JobOfferMinOrderByAggregateInput
    _sum?: JobOfferSumOrderByAggregateInput
  }

  export type JobOfferScalarWhereWithAggregatesInput = {
    AND?: JobOfferScalarWhereWithAggregatesInput | JobOfferScalarWhereWithAggregatesInput[]
    OR?: JobOfferScalarWhereWithAggregatesInput[]
    NOT?: JobOfferScalarWhereWithAggregatesInput | JobOfferScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobOffer"> | string
    title?: StringWithAggregatesFilter<"JobOffer"> | string
    description?: StringWithAggregatesFilter<"JobOffer"> | string
    requirements?: StringWithAggregatesFilter<"JobOffer"> | string
    benefits?: StringNullableWithAggregatesFilter<"JobOffer"> | string | null
    salaryMin?: DecimalNullableWithAggregatesFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableWithAggregatesFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: StringNullableWithAggregatesFilter<"JobOffer"> | string | null
    contractType?: EnumContractTypeWithAggregatesFilter<"JobOffer"> | $Enums.ContractType
    workSchedule?: StringWithAggregatesFilter<"JobOffer"> | string
    workModality?: EnumWorkModalityWithAggregatesFilter<"JobOffer"> | $Enums.WorkModality
    location?: StringWithAggregatesFilter<"JobOffer"> | string
    latitude?: FloatNullableWithAggregatesFilter<"JobOffer"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"JobOffer"> | number | null
    images?: StringNullableListFilter<"JobOffer">
    logo?: StringNullableWithAggregatesFilter<"JobOffer"> | string | null
    municipality?: StringWithAggregatesFilter<"JobOffer"> | string
    department?: StringWithAggregatesFilter<"JobOffer"> | string
    experienceLevel?: EnumExperienceLevelWithAggregatesFilter<"JobOffer"> | $Enums.ExperienceLevel
    educationRequired?: EnumEducationLevelNullableWithAggregatesFilter<"JobOffer"> | $Enums.EducationLevel | null
    skillsRequired?: StringNullableListFilter<"JobOffer">
    desiredSkills?: StringNullableListFilter<"JobOffer">
    applicationDeadline?: DateTimeNullableWithAggregatesFilter<"JobOffer"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"JobOffer"> | boolean
    status?: EnumJobStatusWithAggregatesFilter<"JobOffer"> | $Enums.JobStatus
    viewsCount?: IntWithAggregatesFilter<"JobOffer"> | number
    applicationsCount?: IntWithAggregatesFilter<"JobOffer"> | number
    featured?: BoolWithAggregatesFilter<"JobOffer"> | boolean
    expiresAt?: DateTimeNullableWithAggregatesFilter<"JobOffer"> | Date | string | null
    publishedAt?: DateTimeWithAggregatesFilter<"JobOffer"> | Date | string
    companyId?: StringWithAggregatesFilter<"JobOffer"> | string
    createdAt?: DateTimeWithAggregatesFilter<"JobOffer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"JobOffer"> | Date | string
  }

  export type JobQuestionWhereInput = {
    AND?: JobQuestionWhereInput | JobQuestionWhereInput[]
    OR?: JobQuestionWhereInput[]
    NOT?: JobQuestionWhereInput | JobQuestionWhereInput[]
    id?: StringFilter<"JobQuestion"> | string
    jobOfferId?: StringFilter<"JobQuestion"> | string
    question?: StringFilter<"JobQuestion"> | string
    type?: StringFilter<"JobQuestion"> | string
    required?: BoolFilter<"JobQuestion"> | boolean
    options?: StringNullableListFilter<"JobQuestion">
    orderIndex?: IntFilter<"JobQuestion"> | number
    questionAnswers?: JobQuestionAnswerListRelationFilter
    jobOffer?: XOR<JobOfferRelationFilter, JobOfferWhereInput>
  }

  export type JobQuestionOrderByWithRelationInput = {
    id?: SortOrder
    jobOfferId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    required?: SortOrder
    options?: SortOrder
    orderIndex?: SortOrder
    questionAnswers?: JobQuestionAnswerOrderByRelationAggregateInput
    jobOffer?: JobOfferOrderByWithRelationInput
  }

  export type JobQuestionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobQuestionWhereInput | JobQuestionWhereInput[]
    OR?: JobQuestionWhereInput[]
    NOT?: JobQuestionWhereInput | JobQuestionWhereInput[]
    jobOfferId?: StringFilter<"JobQuestion"> | string
    question?: StringFilter<"JobQuestion"> | string
    type?: StringFilter<"JobQuestion"> | string
    required?: BoolFilter<"JobQuestion"> | boolean
    options?: StringNullableListFilter<"JobQuestion">
    orderIndex?: IntFilter<"JobQuestion"> | number
    questionAnswers?: JobQuestionAnswerListRelationFilter
    jobOffer?: XOR<JobOfferRelationFilter, JobOfferWhereInput>
  }, "id">

  export type JobQuestionOrderByWithAggregationInput = {
    id?: SortOrder
    jobOfferId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    required?: SortOrder
    options?: SortOrder
    orderIndex?: SortOrder
    _count?: JobQuestionCountOrderByAggregateInput
    _avg?: JobQuestionAvgOrderByAggregateInput
    _max?: JobQuestionMaxOrderByAggregateInput
    _min?: JobQuestionMinOrderByAggregateInput
    _sum?: JobQuestionSumOrderByAggregateInput
  }

  export type JobQuestionScalarWhereWithAggregatesInput = {
    AND?: JobQuestionScalarWhereWithAggregatesInput | JobQuestionScalarWhereWithAggregatesInput[]
    OR?: JobQuestionScalarWhereWithAggregatesInput[]
    NOT?: JobQuestionScalarWhereWithAggregatesInput | JobQuestionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobQuestion"> | string
    jobOfferId?: StringWithAggregatesFilter<"JobQuestion"> | string
    question?: StringWithAggregatesFilter<"JobQuestion"> | string
    type?: StringWithAggregatesFilter<"JobQuestion"> | string
    required?: BoolWithAggregatesFilter<"JobQuestion"> | boolean
    options?: StringNullableListFilter<"JobQuestion">
    orderIndex?: IntWithAggregatesFilter<"JobQuestion"> | number
  }

  export type JobApplicationWhereInput = {
    AND?: JobApplicationWhereInput | JobApplicationWhereInput[]
    OR?: JobApplicationWhereInput[]
    NOT?: JobApplicationWhereInput | JobApplicationWhereInput[]
    id?: StringFilter<"JobApplication"> | string
    applicantId?: StringFilter<"JobApplication"> | string
    jobOfferId?: StringFilter<"JobApplication"> | string
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    cvData?: JsonNullableFilter<"JobApplication">
    cvFile?: StringNullableFilter<"JobApplication"> | string | null
    coverLetterFile?: StringNullableFilter<"JobApplication"> | string | null
    profileImage?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    appliedAt?: DateTimeFilter<"JobApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
    notes?: StringNullableFilter<"JobApplication"> | string | null
    rating?: IntNullableFilter<"JobApplication"> | number | null
    decisionReason?: StringNullableFilter<"JobApplication"> | string | null
    applicant?: XOR<ProfileRelationFilter, ProfileWhereInput>
    jobOffer?: XOR<JobOfferRelationFilter, JobOfferWhereInput>
    questionAnswers?: JobQuestionAnswerListRelationFilter
    messages?: JobApplicationMessageListRelationFilter
  }

  export type JobApplicationOrderByWithRelationInput = {
    id?: SortOrder
    applicantId?: SortOrder
    jobOfferId?: SortOrder
    coverLetter?: SortOrderInput | SortOrder
    cvData?: SortOrderInput | SortOrder
    cvFile?: SortOrderInput | SortOrder
    coverLetterFile?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    decisionReason?: SortOrderInput | SortOrder
    applicant?: ProfileOrderByWithRelationInput
    jobOffer?: JobOfferOrderByWithRelationInput
    questionAnswers?: JobQuestionAnswerOrderByRelationAggregateInput
    messages?: JobApplicationMessageOrderByRelationAggregateInput
  }

  export type JobApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    applicantId_jobOfferId?: JobApplicationApplicantIdJobOfferIdCompoundUniqueInput
    AND?: JobApplicationWhereInput | JobApplicationWhereInput[]
    OR?: JobApplicationWhereInput[]
    NOT?: JobApplicationWhereInput | JobApplicationWhereInput[]
    applicantId?: StringFilter<"JobApplication"> | string
    jobOfferId?: StringFilter<"JobApplication"> | string
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    cvData?: JsonNullableFilter<"JobApplication">
    cvFile?: StringNullableFilter<"JobApplication"> | string | null
    coverLetterFile?: StringNullableFilter<"JobApplication"> | string | null
    profileImage?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    appliedAt?: DateTimeFilter<"JobApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
    notes?: StringNullableFilter<"JobApplication"> | string | null
    rating?: IntNullableFilter<"JobApplication"> | number | null
    decisionReason?: StringNullableFilter<"JobApplication"> | string | null
    applicant?: XOR<ProfileRelationFilter, ProfileWhereInput>
    jobOffer?: XOR<JobOfferRelationFilter, JobOfferWhereInput>
    questionAnswers?: JobQuestionAnswerListRelationFilter
    messages?: JobApplicationMessageListRelationFilter
  }, "id" | "applicantId_jobOfferId">

  export type JobApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    applicantId?: SortOrder
    jobOfferId?: SortOrder
    coverLetter?: SortOrderInput | SortOrder
    cvData?: SortOrderInput | SortOrder
    cvFile?: SortOrderInput | SortOrder
    coverLetterFile?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    decisionReason?: SortOrderInput | SortOrder
    _count?: JobApplicationCountOrderByAggregateInput
    _avg?: JobApplicationAvgOrderByAggregateInput
    _max?: JobApplicationMaxOrderByAggregateInput
    _min?: JobApplicationMinOrderByAggregateInput
    _sum?: JobApplicationSumOrderByAggregateInput
  }

  export type JobApplicationScalarWhereWithAggregatesInput = {
    AND?: JobApplicationScalarWhereWithAggregatesInput | JobApplicationScalarWhereWithAggregatesInput[]
    OR?: JobApplicationScalarWhereWithAggregatesInput[]
    NOT?: JobApplicationScalarWhereWithAggregatesInput | JobApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobApplication"> | string
    applicantId?: StringWithAggregatesFilter<"JobApplication"> | string
    jobOfferId?: StringWithAggregatesFilter<"JobApplication"> | string
    coverLetter?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    cvData?: JsonNullableWithAggregatesFilter<"JobApplication">
    cvFile?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    coverLetterFile?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    profileImage?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusWithAggregatesFilter<"JobApplication"> | $Enums.ApplicationStatus
    appliedAt?: DateTimeWithAggregatesFilter<"JobApplication"> | Date | string
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"JobApplication"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    rating?: IntNullableWithAggregatesFilter<"JobApplication"> | number | null
    decisionReason?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
  }

  export type JobQuestionAnswerWhereInput = {
    AND?: JobQuestionAnswerWhereInput | JobQuestionAnswerWhereInput[]
    OR?: JobQuestionAnswerWhereInput[]
    NOT?: JobQuestionAnswerWhereInput | JobQuestionAnswerWhereInput[]
    id?: StringFilter<"JobQuestionAnswer"> | string
    applicationId?: StringFilter<"JobQuestionAnswer"> | string
    questionId?: StringFilter<"JobQuestionAnswer"> | string
    answer?: StringFilter<"JobQuestionAnswer"> | string
    application?: XOR<JobApplicationRelationFilter, JobApplicationWhereInput>
    question?: XOR<JobQuestionRelationFilter, JobQuestionWhereInput>
  }

  export type JobQuestionAnswerOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    application?: JobApplicationOrderByWithRelationInput
    question?: JobQuestionOrderByWithRelationInput
  }

  export type JobQuestionAnswerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    applicationId_questionId?: JobQuestionAnswerApplicationIdQuestionIdCompoundUniqueInput
    AND?: JobQuestionAnswerWhereInput | JobQuestionAnswerWhereInput[]
    OR?: JobQuestionAnswerWhereInput[]
    NOT?: JobQuestionAnswerWhereInput | JobQuestionAnswerWhereInput[]
    applicationId?: StringFilter<"JobQuestionAnswer"> | string
    questionId?: StringFilter<"JobQuestionAnswer"> | string
    answer?: StringFilter<"JobQuestionAnswer"> | string
    application?: XOR<JobApplicationRelationFilter, JobApplicationWhereInput>
    question?: XOR<JobQuestionRelationFilter, JobQuestionWhereInput>
  }, "id" | "applicationId_questionId">

  export type JobQuestionAnswerOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    _count?: JobQuestionAnswerCountOrderByAggregateInput
    _max?: JobQuestionAnswerMaxOrderByAggregateInput
    _min?: JobQuestionAnswerMinOrderByAggregateInput
  }

  export type JobQuestionAnswerScalarWhereWithAggregatesInput = {
    AND?: JobQuestionAnswerScalarWhereWithAggregatesInput | JobQuestionAnswerScalarWhereWithAggregatesInput[]
    OR?: JobQuestionAnswerScalarWhereWithAggregatesInput[]
    NOT?: JobQuestionAnswerScalarWhereWithAggregatesInput | JobQuestionAnswerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobQuestionAnswer"> | string
    applicationId?: StringWithAggregatesFilter<"JobQuestionAnswer"> | string
    questionId?: StringWithAggregatesFilter<"JobQuestionAnswer"> | string
    answer?: StringWithAggregatesFilter<"JobQuestionAnswer"> | string
  }

  export type JobApplicationMessageWhereInput = {
    AND?: JobApplicationMessageWhereInput | JobApplicationMessageWhereInput[]
    OR?: JobApplicationMessageWhereInput[]
    NOT?: JobApplicationMessageWhereInput | JobApplicationMessageWhereInput[]
    id?: StringFilter<"JobApplicationMessage"> | string
    applicationId?: StringFilter<"JobApplicationMessage"> | string
    senderId?: StringFilter<"JobApplicationMessage"> | string
    senderType?: EnumSenderTypeFilter<"JobApplicationMessage"> | $Enums.SenderType
    content?: StringFilter<"JobApplicationMessage"> | string
    messageType?: EnumMessageTypeFilter<"JobApplicationMessage"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"JobApplicationMessage"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"JobApplicationMessage"> | Date | string
    readAt?: DateTimeNullableFilter<"JobApplicationMessage"> | Date | string | null
    application?: XOR<JobApplicationRelationFilter, JobApplicationWhereInput>
  }

  export type JobApplicationMessageOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    senderId?: SortOrder
    senderType?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    application?: JobApplicationOrderByWithRelationInput
  }

  export type JobApplicationMessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobApplicationMessageWhereInput | JobApplicationMessageWhereInput[]
    OR?: JobApplicationMessageWhereInput[]
    NOT?: JobApplicationMessageWhereInput | JobApplicationMessageWhereInput[]
    applicationId?: StringFilter<"JobApplicationMessage"> | string
    senderId?: StringFilter<"JobApplicationMessage"> | string
    senderType?: EnumSenderTypeFilter<"JobApplicationMessage"> | $Enums.SenderType
    content?: StringFilter<"JobApplicationMessage"> | string
    messageType?: EnumMessageTypeFilter<"JobApplicationMessage"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"JobApplicationMessage"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"JobApplicationMessage"> | Date | string
    readAt?: DateTimeNullableFilter<"JobApplicationMessage"> | Date | string | null
    application?: XOR<JobApplicationRelationFilter, JobApplicationWhereInput>
  }, "id">

  export type JobApplicationMessageOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    senderId?: SortOrder
    senderType?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    _count?: JobApplicationMessageCountOrderByAggregateInput
    _max?: JobApplicationMessageMaxOrderByAggregateInput
    _min?: JobApplicationMessageMinOrderByAggregateInput
  }

  export type JobApplicationMessageScalarWhereWithAggregatesInput = {
    AND?: JobApplicationMessageScalarWhereWithAggregatesInput | JobApplicationMessageScalarWhereWithAggregatesInput[]
    OR?: JobApplicationMessageScalarWhereWithAggregatesInput[]
    NOT?: JobApplicationMessageScalarWhereWithAggregatesInput | JobApplicationMessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobApplicationMessage"> | string
    applicationId?: StringWithAggregatesFilter<"JobApplicationMessage"> | string
    senderId?: StringWithAggregatesFilter<"JobApplicationMessage"> | string
    senderType?: EnumSenderTypeWithAggregatesFilter<"JobApplicationMessage"> | $Enums.SenderType
    content?: StringWithAggregatesFilter<"JobApplicationMessage"> | string
    messageType?: EnumMessageTypeWithAggregatesFilter<"JobApplicationMessage"> | $Enums.MessageType
    status?: EnumMessageStatusWithAggregatesFilter<"JobApplicationMessage"> | $Enums.MessageStatus
    createdAt?: DateTimeWithAggregatesFilter<"JobApplicationMessage"> | Date | string
    readAt?: DateTimeNullableWithAggregatesFilter<"JobApplicationMessage"> | Date | string | null
  }

  export type CourseWhereInput = {
    AND?: CourseWhereInput | CourseWhereInput[]
    OR?: CourseWhereInput[]
    NOT?: CourseWhereInput | CourseWhereInput[]
    id?: StringFilter<"Course"> | string
    title?: StringFilter<"Course"> | string
    slug?: StringFilter<"Course"> | string
    description?: StringFilter<"Course"> | string
    shortDescription?: StringNullableFilter<"Course"> | string | null
    thumbnail?: StringNullableFilter<"Course"> | string | null
    videoPreview?: StringNullableFilter<"Course"> | string | null
    objectives?: StringNullableListFilter<"Course">
    prerequisites?: StringNullableListFilter<"Course">
    duration?: IntFilter<"Course"> | number
    level?: EnumCourseLevelFilter<"Course"> | $Enums.CourseLevel
    category?: EnumCourseCategoryFilter<"Course"> | $Enums.CourseCategory
    isMandatory?: BoolFilter<"Course"> | boolean
    isActive?: BoolFilter<"Course"> | boolean
    price?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFilter<"Course"> | number
    completionRate?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFilter<"Course"> | number
    totalQuizzes?: IntFilter<"Course"> | number
    totalResources?: IntFilter<"Course"> | number
    tags?: StringNullableListFilter<"Course">
    certification?: BoolFilter<"Course"> | boolean
    includedMaterials?: StringNullableListFilter<"Course">
    instructorId?: StringNullableFilter<"Course"> | string | null
    institutionName?: StringNullableFilter<"Course"> | string | null
    createdAt?: DateTimeFilter<"Course"> | Date | string
    updatedAt?: DateTimeFilter<"Course"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Course"> | Date | string | null
    certificates?: CertificateListRelationFilter
    enrollments?: CourseEnrollmentListRelationFilter
    modules?: CourseModuleListRelationFilter
    instructor?: XOR<ProfileNullableRelationFilter, ProfileWhereInput> | null
    quizzes?: QuizListRelationFilter
  }

  export type CourseOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrderInput | SortOrder
    thumbnail?: SortOrderInput | SortOrder
    videoPreview?: SortOrderInput | SortOrder
    objectives?: SortOrder
    prerequisites?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    category?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    price?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrderInput | SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
    tags?: SortOrder
    certification?: SortOrder
    includedMaterials?: SortOrder
    instructorId?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    certificates?: CertificateOrderByRelationAggregateInput
    enrollments?: CourseEnrollmentOrderByRelationAggregateInput
    modules?: CourseModuleOrderByRelationAggregateInput
    instructor?: ProfileOrderByWithRelationInput
    quizzes?: QuizOrderByRelationAggregateInput
  }

  export type CourseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CourseWhereInput | CourseWhereInput[]
    OR?: CourseWhereInput[]
    NOT?: CourseWhereInput | CourseWhereInput[]
    title?: StringFilter<"Course"> | string
    description?: StringFilter<"Course"> | string
    shortDescription?: StringNullableFilter<"Course"> | string | null
    thumbnail?: StringNullableFilter<"Course"> | string | null
    videoPreview?: StringNullableFilter<"Course"> | string | null
    objectives?: StringNullableListFilter<"Course">
    prerequisites?: StringNullableListFilter<"Course">
    duration?: IntFilter<"Course"> | number
    level?: EnumCourseLevelFilter<"Course"> | $Enums.CourseLevel
    category?: EnumCourseCategoryFilter<"Course"> | $Enums.CourseCategory
    isMandatory?: BoolFilter<"Course"> | boolean
    isActive?: BoolFilter<"Course"> | boolean
    price?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFilter<"Course"> | number
    completionRate?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFilter<"Course"> | number
    totalQuizzes?: IntFilter<"Course"> | number
    totalResources?: IntFilter<"Course"> | number
    tags?: StringNullableListFilter<"Course">
    certification?: BoolFilter<"Course"> | boolean
    includedMaterials?: StringNullableListFilter<"Course">
    instructorId?: StringNullableFilter<"Course"> | string | null
    institutionName?: StringNullableFilter<"Course"> | string | null
    createdAt?: DateTimeFilter<"Course"> | Date | string
    updatedAt?: DateTimeFilter<"Course"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Course"> | Date | string | null
    certificates?: CertificateListRelationFilter
    enrollments?: CourseEnrollmentListRelationFilter
    modules?: CourseModuleListRelationFilter
    instructor?: XOR<ProfileNullableRelationFilter, ProfileWhereInput> | null
    quizzes?: QuizListRelationFilter
  }, "id" | "slug">

  export type CourseOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrderInput | SortOrder
    thumbnail?: SortOrderInput | SortOrder
    videoPreview?: SortOrderInput | SortOrder
    objectives?: SortOrder
    prerequisites?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    category?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    price?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrderInput | SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
    tags?: SortOrder
    certification?: SortOrder
    includedMaterials?: SortOrder
    instructorId?: SortOrderInput | SortOrder
    institutionName?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    _count?: CourseCountOrderByAggregateInput
    _avg?: CourseAvgOrderByAggregateInput
    _max?: CourseMaxOrderByAggregateInput
    _min?: CourseMinOrderByAggregateInput
    _sum?: CourseSumOrderByAggregateInput
  }

  export type CourseScalarWhereWithAggregatesInput = {
    AND?: CourseScalarWhereWithAggregatesInput | CourseScalarWhereWithAggregatesInput[]
    OR?: CourseScalarWhereWithAggregatesInput[]
    NOT?: CourseScalarWhereWithAggregatesInput | CourseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Course"> | string
    title?: StringWithAggregatesFilter<"Course"> | string
    slug?: StringWithAggregatesFilter<"Course"> | string
    description?: StringWithAggregatesFilter<"Course"> | string
    shortDescription?: StringNullableWithAggregatesFilter<"Course"> | string | null
    thumbnail?: StringNullableWithAggregatesFilter<"Course"> | string | null
    videoPreview?: StringNullableWithAggregatesFilter<"Course"> | string | null
    objectives?: StringNullableListFilter<"Course">
    prerequisites?: StringNullableListFilter<"Course">
    duration?: IntWithAggregatesFilter<"Course"> | number
    level?: EnumCourseLevelWithAggregatesFilter<"Course"> | $Enums.CourseLevel
    category?: EnumCourseCategoryWithAggregatesFilter<"Course"> | $Enums.CourseCategory
    isMandatory?: BoolWithAggregatesFilter<"Course"> | boolean
    isActive?: BoolWithAggregatesFilter<"Course"> | boolean
    price?: DecimalNullableWithAggregatesFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableWithAggregatesFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntWithAggregatesFilter<"Course"> | number
    completionRate?: DecimalNullableWithAggregatesFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntWithAggregatesFilter<"Course"> | number
    totalQuizzes?: IntWithAggregatesFilter<"Course"> | number
    totalResources?: IntWithAggregatesFilter<"Course"> | number
    tags?: StringNullableListFilter<"Course">
    certification?: BoolWithAggregatesFilter<"Course"> | boolean
    includedMaterials?: StringNullableListFilter<"Course">
    instructorId?: StringNullableWithAggregatesFilter<"Course"> | string | null
    institutionName?: StringNullableWithAggregatesFilter<"Course"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Course"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Course"> | Date | string
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Course"> | Date | string | null
  }

  export type CourseModuleWhereInput = {
    AND?: CourseModuleWhereInput | CourseModuleWhereInput[]
    OR?: CourseModuleWhereInput[]
    NOT?: CourseModuleWhereInput | CourseModuleWhereInput[]
    id?: StringFilter<"CourseModule"> | string
    courseId?: StringFilter<"CourseModule"> | string
    title?: StringFilter<"CourseModule"> | string
    description?: StringNullableFilter<"CourseModule"> | string | null
    orderIndex?: IntFilter<"CourseModule"> | number
    estimatedDuration?: IntFilter<"CourseModule"> | number
    isLocked?: BoolFilter<"CourseModule"> | boolean
    prerequisites?: StringNullableListFilter<"CourseModule">
    hasCertificate?: BoolFilter<"CourseModule"> | boolean
    certificateTemplate?: StringNullableFilter<"CourseModule"> | string | null
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    lessons?: LessonListRelationFilter
    moduleCertificates?: ModuleCertificateListRelationFilter
  }

  export type CourseModuleOrderByWithRelationInput = {
    id?: SortOrder
    courseId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
    isLocked?: SortOrder
    prerequisites?: SortOrder
    hasCertificate?: SortOrder
    certificateTemplate?: SortOrderInput | SortOrder
    course?: CourseOrderByWithRelationInput
    lessons?: LessonOrderByRelationAggregateInput
    moduleCertificates?: ModuleCertificateOrderByRelationAggregateInput
  }

  export type CourseModuleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CourseModuleWhereInput | CourseModuleWhereInput[]
    OR?: CourseModuleWhereInput[]
    NOT?: CourseModuleWhereInput | CourseModuleWhereInput[]
    courseId?: StringFilter<"CourseModule"> | string
    title?: StringFilter<"CourseModule"> | string
    description?: StringNullableFilter<"CourseModule"> | string | null
    orderIndex?: IntFilter<"CourseModule"> | number
    estimatedDuration?: IntFilter<"CourseModule"> | number
    isLocked?: BoolFilter<"CourseModule"> | boolean
    prerequisites?: StringNullableListFilter<"CourseModule">
    hasCertificate?: BoolFilter<"CourseModule"> | boolean
    certificateTemplate?: StringNullableFilter<"CourseModule"> | string | null
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    lessons?: LessonListRelationFilter
    moduleCertificates?: ModuleCertificateListRelationFilter
  }, "id">

  export type CourseModuleOrderByWithAggregationInput = {
    id?: SortOrder
    courseId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
    isLocked?: SortOrder
    prerequisites?: SortOrder
    hasCertificate?: SortOrder
    certificateTemplate?: SortOrderInput | SortOrder
    _count?: CourseModuleCountOrderByAggregateInput
    _avg?: CourseModuleAvgOrderByAggregateInput
    _max?: CourseModuleMaxOrderByAggregateInput
    _min?: CourseModuleMinOrderByAggregateInput
    _sum?: CourseModuleSumOrderByAggregateInput
  }

  export type CourseModuleScalarWhereWithAggregatesInput = {
    AND?: CourseModuleScalarWhereWithAggregatesInput | CourseModuleScalarWhereWithAggregatesInput[]
    OR?: CourseModuleScalarWhereWithAggregatesInput[]
    NOT?: CourseModuleScalarWhereWithAggregatesInput | CourseModuleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CourseModule"> | string
    courseId?: StringWithAggregatesFilter<"CourseModule"> | string
    title?: StringWithAggregatesFilter<"CourseModule"> | string
    description?: StringNullableWithAggregatesFilter<"CourseModule"> | string | null
    orderIndex?: IntWithAggregatesFilter<"CourseModule"> | number
    estimatedDuration?: IntWithAggregatesFilter<"CourseModule"> | number
    isLocked?: BoolWithAggregatesFilter<"CourseModule"> | boolean
    prerequisites?: StringNullableListFilter<"CourseModule">
    hasCertificate?: BoolWithAggregatesFilter<"CourseModule"> | boolean
    certificateTemplate?: StringNullableWithAggregatesFilter<"CourseModule"> | string | null
  }

  export type LessonWhereInput = {
    AND?: LessonWhereInput | LessonWhereInput[]
    OR?: LessonWhereInput[]
    NOT?: LessonWhereInput | LessonWhereInput[]
    id?: StringFilter<"Lesson"> | string
    moduleId?: StringFilter<"Lesson"> | string
    title?: StringFilter<"Lesson"> | string
    description?: StringNullableFilter<"Lesson"> | string | null
    content?: StringFilter<"Lesson"> | string
    contentType?: EnumLessonTypeFilter<"Lesson"> | $Enums.LessonType
    videoUrl?: StringNullableFilter<"Lesson"> | string | null
    duration?: IntNullableFilter<"Lesson"> | number | null
    orderIndex?: IntFilter<"Lesson"> | number
    isRequired?: BoolFilter<"Lesson"> | boolean
    isPreview?: BoolFilter<"Lesson"> | boolean
    attachments?: JsonNullableFilter<"Lesson">
    resources?: LessonResourceListRelationFilter
    discussions?: DiscussionListRelationFilter
    progress?: LessonProgressListRelationFilter
    module?: XOR<CourseModuleRelationFilter, CourseModuleWhereInput>
    quizzes?: QuizListRelationFilter
    notes?: StudentNoteListRelationFilter
  }

  export type LessonOrderByWithRelationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    content?: SortOrder
    contentType?: SortOrder
    videoUrl?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    isRequired?: SortOrder
    isPreview?: SortOrder
    attachments?: SortOrderInput | SortOrder
    resources?: LessonResourceOrderByRelationAggregateInput
    discussions?: DiscussionOrderByRelationAggregateInput
    progress?: LessonProgressOrderByRelationAggregateInput
    module?: CourseModuleOrderByWithRelationInput
    quizzes?: QuizOrderByRelationAggregateInput
    notes?: StudentNoteOrderByRelationAggregateInput
  }

  export type LessonWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LessonWhereInput | LessonWhereInput[]
    OR?: LessonWhereInput[]
    NOT?: LessonWhereInput | LessonWhereInput[]
    moduleId?: StringFilter<"Lesson"> | string
    title?: StringFilter<"Lesson"> | string
    description?: StringNullableFilter<"Lesson"> | string | null
    content?: StringFilter<"Lesson"> | string
    contentType?: EnumLessonTypeFilter<"Lesson"> | $Enums.LessonType
    videoUrl?: StringNullableFilter<"Lesson"> | string | null
    duration?: IntNullableFilter<"Lesson"> | number | null
    orderIndex?: IntFilter<"Lesson"> | number
    isRequired?: BoolFilter<"Lesson"> | boolean
    isPreview?: BoolFilter<"Lesson"> | boolean
    attachments?: JsonNullableFilter<"Lesson">
    resources?: LessonResourceListRelationFilter
    discussions?: DiscussionListRelationFilter
    progress?: LessonProgressListRelationFilter
    module?: XOR<CourseModuleRelationFilter, CourseModuleWhereInput>
    quizzes?: QuizListRelationFilter
    notes?: StudentNoteListRelationFilter
  }, "id">

  export type LessonOrderByWithAggregationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    content?: SortOrder
    contentType?: SortOrder
    videoUrl?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    isRequired?: SortOrder
    isPreview?: SortOrder
    attachments?: SortOrderInput | SortOrder
    _count?: LessonCountOrderByAggregateInput
    _avg?: LessonAvgOrderByAggregateInput
    _max?: LessonMaxOrderByAggregateInput
    _min?: LessonMinOrderByAggregateInput
    _sum?: LessonSumOrderByAggregateInput
  }

  export type LessonScalarWhereWithAggregatesInput = {
    AND?: LessonScalarWhereWithAggregatesInput | LessonScalarWhereWithAggregatesInput[]
    OR?: LessonScalarWhereWithAggregatesInput[]
    NOT?: LessonScalarWhereWithAggregatesInput | LessonScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Lesson"> | string
    moduleId?: StringWithAggregatesFilter<"Lesson"> | string
    title?: StringWithAggregatesFilter<"Lesson"> | string
    description?: StringNullableWithAggregatesFilter<"Lesson"> | string | null
    content?: StringWithAggregatesFilter<"Lesson"> | string
    contentType?: EnumLessonTypeWithAggregatesFilter<"Lesson"> | $Enums.LessonType
    videoUrl?: StringNullableWithAggregatesFilter<"Lesson"> | string | null
    duration?: IntNullableWithAggregatesFilter<"Lesson"> | number | null
    orderIndex?: IntWithAggregatesFilter<"Lesson"> | number
    isRequired?: BoolWithAggregatesFilter<"Lesson"> | boolean
    isPreview?: BoolWithAggregatesFilter<"Lesson"> | boolean
    attachments?: JsonNullableWithAggregatesFilter<"Lesson">
  }

  export type CourseEnrollmentWhereInput = {
    AND?: CourseEnrollmentWhereInput | CourseEnrollmentWhereInput[]
    OR?: CourseEnrollmentWhereInput[]
    NOT?: CourseEnrollmentWhereInput | CourseEnrollmentWhereInput[]
    id?: StringFilter<"CourseEnrollment"> | string
    studentId?: StringFilter<"CourseEnrollment"> | string
    courseId?: StringFilter<"CourseEnrollment"> | string
    enrolledAt?: DateTimeFilter<"CourseEnrollment"> | Date | string
    startedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    status?: EnumEnrollmentStatusFilter<"CourseEnrollment"> | $Enums.EnrollmentStatus
    progress?: DecimalFilter<"CourseEnrollment"> | Decimal | DecimalJsLike | number | string
    currentModuleId?: StringNullableFilter<"CourseEnrollment"> | string | null
    currentLessonId?: StringNullableFilter<"CourseEnrollment"> | string | null
    certificateUrl?: StringNullableFilter<"CourseEnrollment"> | string | null
    timeSpent?: IntFilter<"CourseEnrollment"> | number
    certificateIssued?: BoolFilter<"CourseEnrollment"> | boolean
    finalGrade?: IntNullableFilter<"CourseEnrollment"> | number | null
    moduleProgress?: JsonNullableFilter<"CourseEnrollment">
    quizResults?: JsonNullableFilter<"CourseEnrollment">
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
    lessonProgress?: LessonProgressListRelationFilter
    quizAttempts?: QuizAttemptListRelationFilter
  }

  export type CourseEnrollmentOrderByWithRelationInput = {
    id?: SortOrder
    studentId?: SortOrder
    courseId?: SortOrder
    enrolledAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    progress?: SortOrder
    currentModuleId?: SortOrderInput | SortOrder
    currentLessonId?: SortOrderInput | SortOrder
    certificateUrl?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    certificateIssued?: SortOrder
    finalGrade?: SortOrderInput | SortOrder
    moduleProgress?: SortOrderInput | SortOrder
    quizResults?: SortOrderInput | SortOrder
    course?: CourseOrderByWithRelationInput
    student?: ProfileOrderByWithRelationInput
    lessonProgress?: LessonProgressOrderByRelationAggregateInput
    quizAttempts?: QuizAttemptOrderByRelationAggregateInput
  }

  export type CourseEnrollmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    studentId_courseId?: CourseEnrollmentStudentIdCourseIdCompoundUniqueInput
    AND?: CourseEnrollmentWhereInput | CourseEnrollmentWhereInput[]
    OR?: CourseEnrollmentWhereInput[]
    NOT?: CourseEnrollmentWhereInput | CourseEnrollmentWhereInput[]
    studentId?: StringFilter<"CourseEnrollment"> | string
    courseId?: StringFilter<"CourseEnrollment"> | string
    enrolledAt?: DateTimeFilter<"CourseEnrollment"> | Date | string
    startedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    status?: EnumEnrollmentStatusFilter<"CourseEnrollment"> | $Enums.EnrollmentStatus
    progress?: DecimalFilter<"CourseEnrollment"> | Decimal | DecimalJsLike | number | string
    currentModuleId?: StringNullableFilter<"CourseEnrollment"> | string | null
    currentLessonId?: StringNullableFilter<"CourseEnrollment"> | string | null
    certificateUrl?: StringNullableFilter<"CourseEnrollment"> | string | null
    timeSpent?: IntFilter<"CourseEnrollment"> | number
    certificateIssued?: BoolFilter<"CourseEnrollment"> | boolean
    finalGrade?: IntNullableFilter<"CourseEnrollment"> | number | null
    moduleProgress?: JsonNullableFilter<"CourseEnrollment">
    quizResults?: JsonNullableFilter<"CourseEnrollment">
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
    lessonProgress?: LessonProgressListRelationFilter
    quizAttempts?: QuizAttemptListRelationFilter
  }, "id" | "studentId_courseId">

  export type CourseEnrollmentOrderByWithAggregationInput = {
    id?: SortOrder
    studentId?: SortOrder
    courseId?: SortOrder
    enrolledAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    progress?: SortOrder
    currentModuleId?: SortOrderInput | SortOrder
    currentLessonId?: SortOrderInput | SortOrder
    certificateUrl?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    certificateIssued?: SortOrder
    finalGrade?: SortOrderInput | SortOrder
    moduleProgress?: SortOrderInput | SortOrder
    quizResults?: SortOrderInput | SortOrder
    _count?: CourseEnrollmentCountOrderByAggregateInput
    _avg?: CourseEnrollmentAvgOrderByAggregateInput
    _max?: CourseEnrollmentMaxOrderByAggregateInput
    _min?: CourseEnrollmentMinOrderByAggregateInput
    _sum?: CourseEnrollmentSumOrderByAggregateInput
  }

  export type CourseEnrollmentScalarWhereWithAggregatesInput = {
    AND?: CourseEnrollmentScalarWhereWithAggregatesInput | CourseEnrollmentScalarWhereWithAggregatesInput[]
    OR?: CourseEnrollmentScalarWhereWithAggregatesInput[]
    NOT?: CourseEnrollmentScalarWhereWithAggregatesInput | CourseEnrollmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CourseEnrollment"> | string
    studentId?: StringWithAggregatesFilter<"CourseEnrollment"> | string
    courseId?: StringWithAggregatesFilter<"CourseEnrollment"> | string
    enrolledAt?: DateTimeWithAggregatesFilter<"CourseEnrollment"> | Date | string
    startedAt?: DateTimeNullableWithAggregatesFilter<"CourseEnrollment"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"CourseEnrollment"> | Date | string | null
    status?: EnumEnrollmentStatusWithAggregatesFilter<"CourseEnrollment"> | $Enums.EnrollmentStatus
    progress?: DecimalWithAggregatesFilter<"CourseEnrollment"> | Decimal | DecimalJsLike | number | string
    currentModuleId?: StringNullableWithAggregatesFilter<"CourseEnrollment"> | string | null
    currentLessonId?: StringNullableWithAggregatesFilter<"CourseEnrollment"> | string | null
    certificateUrl?: StringNullableWithAggregatesFilter<"CourseEnrollment"> | string | null
    timeSpent?: IntWithAggregatesFilter<"CourseEnrollment"> | number
    certificateIssued?: BoolWithAggregatesFilter<"CourseEnrollment"> | boolean
    finalGrade?: IntNullableWithAggregatesFilter<"CourseEnrollment"> | number | null
    moduleProgress?: JsonNullableWithAggregatesFilter<"CourseEnrollment">
    quizResults?: JsonNullableWithAggregatesFilter<"CourseEnrollment">
  }

  export type LessonProgressWhereInput = {
    AND?: LessonProgressWhereInput | LessonProgressWhereInput[]
    OR?: LessonProgressWhereInput[]
    NOT?: LessonProgressWhereInput | LessonProgressWhereInput[]
    id?: StringFilter<"LessonProgress"> | string
    enrollmentId?: StringFilter<"LessonProgress"> | string
    lessonId?: StringFilter<"LessonProgress"> | string
    isCompleted?: BoolFilter<"LessonProgress"> | boolean
    completedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
    timeSpent?: IntFilter<"LessonProgress"> | number
    videoProgress?: FloatFilter<"LessonProgress"> | number
    lastWatchedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
    enrollment?: XOR<CourseEnrollmentRelationFilter, CourseEnrollmentWhereInput>
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
  }

  export type LessonProgressOrderByWithRelationInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    lessonId?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    videoProgress?: SortOrder
    lastWatchedAt?: SortOrderInput | SortOrder
    enrollment?: CourseEnrollmentOrderByWithRelationInput
    lesson?: LessonOrderByWithRelationInput
  }

  export type LessonProgressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    enrollmentId_lessonId?: LessonProgressEnrollmentIdLessonIdCompoundUniqueInput
    AND?: LessonProgressWhereInput | LessonProgressWhereInput[]
    OR?: LessonProgressWhereInput[]
    NOT?: LessonProgressWhereInput | LessonProgressWhereInput[]
    enrollmentId?: StringFilter<"LessonProgress"> | string
    lessonId?: StringFilter<"LessonProgress"> | string
    isCompleted?: BoolFilter<"LessonProgress"> | boolean
    completedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
    timeSpent?: IntFilter<"LessonProgress"> | number
    videoProgress?: FloatFilter<"LessonProgress"> | number
    lastWatchedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
    enrollment?: XOR<CourseEnrollmentRelationFilter, CourseEnrollmentWhereInput>
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
  }, "id" | "enrollmentId_lessonId">

  export type LessonProgressOrderByWithAggregationInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    lessonId?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    videoProgress?: SortOrder
    lastWatchedAt?: SortOrderInput | SortOrder
    _count?: LessonProgressCountOrderByAggregateInput
    _avg?: LessonProgressAvgOrderByAggregateInput
    _max?: LessonProgressMaxOrderByAggregateInput
    _min?: LessonProgressMinOrderByAggregateInput
    _sum?: LessonProgressSumOrderByAggregateInput
  }

  export type LessonProgressScalarWhereWithAggregatesInput = {
    AND?: LessonProgressScalarWhereWithAggregatesInput | LessonProgressScalarWhereWithAggregatesInput[]
    OR?: LessonProgressScalarWhereWithAggregatesInput[]
    NOT?: LessonProgressScalarWhereWithAggregatesInput | LessonProgressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LessonProgress"> | string
    enrollmentId?: StringWithAggregatesFilter<"LessonProgress"> | string
    lessonId?: StringWithAggregatesFilter<"LessonProgress"> | string
    isCompleted?: BoolWithAggregatesFilter<"LessonProgress"> | boolean
    completedAt?: DateTimeNullableWithAggregatesFilter<"LessonProgress"> | Date | string | null
    timeSpent?: IntWithAggregatesFilter<"LessonProgress"> | number
    videoProgress?: FloatWithAggregatesFilter<"LessonProgress"> | number
    lastWatchedAt?: DateTimeNullableWithAggregatesFilter<"LessonProgress"> | Date | string | null
  }

  export type QuizWhereInput = {
    AND?: QuizWhereInput | QuizWhereInput[]
    OR?: QuizWhereInput[]
    NOT?: QuizWhereInput | QuizWhereInput[]
    id?: StringFilter<"Quiz"> | string
    courseId?: StringNullableFilter<"Quiz"> | string | null
    lessonId?: StringNullableFilter<"Quiz"> | string | null
    title?: StringFilter<"Quiz"> | string
    description?: StringNullableFilter<"Quiz"> | string | null
    timeLimit?: IntNullableFilter<"Quiz"> | number | null
    passingScore?: IntFilter<"Quiz"> | number
    showCorrectAnswers?: BoolFilter<"Quiz"> | boolean
    isActive?: BoolFilter<"Quiz"> | boolean
    attempts?: QuizAttemptListRelationFilter
    questions?: QuizQuestionListRelationFilter
    course?: XOR<CourseNullableRelationFilter, CourseWhereInput> | null
    lesson?: XOR<LessonNullableRelationFilter, LessonWhereInput> | null
  }

  export type QuizOrderByWithRelationInput = {
    id?: SortOrder
    courseId?: SortOrderInput | SortOrder
    lessonId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    timeLimit?: SortOrderInput | SortOrder
    passingScore?: SortOrder
    showCorrectAnswers?: SortOrder
    isActive?: SortOrder
    attempts?: QuizAttemptOrderByRelationAggregateInput
    questions?: QuizQuestionOrderByRelationAggregateInput
    course?: CourseOrderByWithRelationInput
    lesson?: LessonOrderByWithRelationInput
  }

  export type QuizWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: QuizWhereInput | QuizWhereInput[]
    OR?: QuizWhereInput[]
    NOT?: QuizWhereInput | QuizWhereInput[]
    courseId?: StringNullableFilter<"Quiz"> | string | null
    lessonId?: StringNullableFilter<"Quiz"> | string | null
    title?: StringFilter<"Quiz"> | string
    description?: StringNullableFilter<"Quiz"> | string | null
    timeLimit?: IntNullableFilter<"Quiz"> | number | null
    passingScore?: IntFilter<"Quiz"> | number
    showCorrectAnswers?: BoolFilter<"Quiz"> | boolean
    isActive?: BoolFilter<"Quiz"> | boolean
    attempts?: QuizAttemptListRelationFilter
    questions?: QuizQuestionListRelationFilter
    course?: XOR<CourseNullableRelationFilter, CourseWhereInput> | null
    lesson?: XOR<LessonNullableRelationFilter, LessonWhereInput> | null
  }, "id">

  export type QuizOrderByWithAggregationInput = {
    id?: SortOrder
    courseId?: SortOrderInput | SortOrder
    lessonId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    timeLimit?: SortOrderInput | SortOrder
    passingScore?: SortOrder
    showCorrectAnswers?: SortOrder
    isActive?: SortOrder
    _count?: QuizCountOrderByAggregateInput
    _avg?: QuizAvgOrderByAggregateInput
    _max?: QuizMaxOrderByAggregateInput
    _min?: QuizMinOrderByAggregateInput
    _sum?: QuizSumOrderByAggregateInput
  }

  export type QuizScalarWhereWithAggregatesInput = {
    AND?: QuizScalarWhereWithAggregatesInput | QuizScalarWhereWithAggregatesInput[]
    OR?: QuizScalarWhereWithAggregatesInput[]
    NOT?: QuizScalarWhereWithAggregatesInput | QuizScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Quiz"> | string
    courseId?: StringNullableWithAggregatesFilter<"Quiz"> | string | null
    lessonId?: StringNullableWithAggregatesFilter<"Quiz"> | string | null
    title?: StringWithAggregatesFilter<"Quiz"> | string
    description?: StringNullableWithAggregatesFilter<"Quiz"> | string | null
    timeLimit?: IntNullableWithAggregatesFilter<"Quiz"> | number | null
    passingScore?: IntWithAggregatesFilter<"Quiz"> | number
    showCorrectAnswers?: BoolWithAggregatesFilter<"Quiz"> | boolean
    isActive?: BoolWithAggregatesFilter<"Quiz"> | boolean
  }

  export type QuizQuestionWhereInput = {
    AND?: QuizQuestionWhereInput | QuizQuestionWhereInput[]
    OR?: QuizQuestionWhereInput[]
    NOT?: QuizQuestionWhereInput | QuizQuestionWhereInput[]
    id?: StringFilter<"QuizQuestion"> | string
    quizId?: StringFilter<"QuizQuestion"> | string
    question?: StringFilter<"QuizQuestion"> | string
    type?: EnumQuestionTypeFilter<"QuizQuestion"> | $Enums.QuestionType
    options?: StringNullableListFilter<"QuizQuestion">
    correctAnswer?: StringFilter<"QuizQuestion"> | string
    explanation?: StringNullableFilter<"QuizQuestion"> | string | null
    points?: IntFilter<"QuizQuestion"> | number
    orderIndex?: IntFilter<"QuizQuestion"> | number
    answers?: QuizAnswerListRelationFilter
    quiz?: XOR<QuizRelationFilter, QuizWhereInput>
  }

  export type QuizQuestionOrderByWithRelationInput = {
    id?: SortOrder
    quizId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    options?: SortOrder
    correctAnswer?: SortOrder
    explanation?: SortOrderInput | SortOrder
    points?: SortOrder
    orderIndex?: SortOrder
    answers?: QuizAnswerOrderByRelationAggregateInput
    quiz?: QuizOrderByWithRelationInput
  }

  export type QuizQuestionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: QuizQuestionWhereInput | QuizQuestionWhereInput[]
    OR?: QuizQuestionWhereInput[]
    NOT?: QuizQuestionWhereInput | QuizQuestionWhereInput[]
    quizId?: StringFilter<"QuizQuestion"> | string
    question?: StringFilter<"QuizQuestion"> | string
    type?: EnumQuestionTypeFilter<"QuizQuestion"> | $Enums.QuestionType
    options?: StringNullableListFilter<"QuizQuestion">
    correctAnswer?: StringFilter<"QuizQuestion"> | string
    explanation?: StringNullableFilter<"QuizQuestion"> | string | null
    points?: IntFilter<"QuizQuestion"> | number
    orderIndex?: IntFilter<"QuizQuestion"> | number
    answers?: QuizAnswerListRelationFilter
    quiz?: XOR<QuizRelationFilter, QuizWhereInput>
  }, "id">

  export type QuizQuestionOrderByWithAggregationInput = {
    id?: SortOrder
    quizId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    options?: SortOrder
    correctAnswer?: SortOrder
    explanation?: SortOrderInput | SortOrder
    points?: SortOrder
    orderIndex?: SortOrder
    _count?: QuizQuestionCountOrderByAggregateInput
    _avg?: QuizQuestionAvgOrderByAggregateInput
    _max?: QuizQuestionMaxOrderByAggregateInput
    _min?: QuizQuestionMinOrderByAggregateInput
    _sum?: QuizQuestionSumOrderByAggregateInput
  }

  export type QuizQuestionScalarWhereWithAggregatesInput = {
    AND?: QuizQuestionScalarWhereWithAggregatesInput | QuizQuestionScalarWhereWithAggregatesInput[]
    OR?: QuizQuestionScalarWhereWithAggregatesInput[]
    NOT?: QuizQuestionScalarWhereWithAggregatesInput | QuizQuestionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"QuizQuestion"> | string
    quizId?: StringWithAggregatesFilter<"QuizQuestion"> | string
    question?: StringWithAggregatesFilter<"QuizQuestion"> | string
    type?: EnumQuestionTypeWithAggregatesFilter<"QuizQuestion"> | $Enums.QuestionType
    options?: StringNullableListFilter<"QuizQuestion">
    correctAnswer?: StringWithAggregatesFilter<"QuizQuestion"> | string
    explanation?: StringNullableWithAggregatesFilter<"QuizQuestion"> | string | null
    points?: IntWithAggregatesFilter<"QuizQuestion"> | number
    orderIndex?: IntWithAggregatesFilter<"QuizQuestion"> | number
  }

  export type QuizAttemptWhereInput = {
    AND?: QuizAttemptWhereInput | QuizAttemptWhereInput[]
    OR?: QuizAttemptWhereInput[]
    NOT?: QuizAttemptWhereInput | QuizAttemptWhereInput[]
    id?: StringFilter<"QuizAttempt"> | string
    enrollmentId?: StringNullableFilter<"QuizAttempt"> | string | null
    quizId?: StringFilter<"QuizAttempt"> | string
    studentId?: StringFilter<"QuizAttempt"> | string
    startedAt?: DateTimeFilter<"QuizAttempt"> | Date | string
    completedAt?: DateTimeNullableFilter<"QuizAttempt"> | Date | string | null
    score?: IntNullableFilter<"QuizAttempt"> | number | null
    passed?: BoolNullableFilter<"QuizAttempt"> | boolean | null
    timeSpent?: IntFilter<"QuizAttempt"> | number
    answers?: QuizAnswerListRelationFilter
    enrollment?: XOR<CourseEnrollmentNullableRelationFilter, CourseEnrollmentWhereInput> | null
    quiz?: XOR<QuizRelationFilter, QuizWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type QuizAttemptOrderByWithRelationInput = {
    id?: SortOrder
    enrollmentId?: SortOrderInput | SortOrder
    quizId?: SortOrder
    studentId?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    passed?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    answers?: QuizAnswerOrderByRelationAggregateInput
    enrollment?: CourseEnrollmentOrderByWithRelationInput
    quiz?: QuizOrderByWithRelationInput
    student?: ProfileOrderByWithRelationInput
  }

  export type QuizAttemptWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: QuizAttemptWhereInput | QuizAttemptWhereInput[]
    OR?: QuizAttemptWhereInput[]
    NOT?: QuizAttemptWhereInput | QuizAttemptWhereInput[]
    enrollmentId?: StringNullableFilter<"QuizAttempt"> | string | null
    quizId?: StringFilter<"QuizAttempt"> | string
    studentId?: StringFilter<"QuizAttempt"> | string
    startedAt?: DateTimeFilter<"QuizAttempt"> | Date | string
    completedAt?: DateTimeNullableFilter<"QuizAttempt"> | Date | string | null
    score?: IntNullableFilter<"QuizAttempt"> | number | null
    passed?: BoolNullableFilter<"QuizAttempt"> | boolean | null
    timeSpent?: IntFilter<"QuizAttempt"> | number
    answers?: QuizAnswerListRelationFilter
    enrollment?: XOR<CourseEnrollmentNullableRelationFilter, CourseEnrollmentWhereInput> | null
    quiz?: XOR<QuizRelationFilter, QuizWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type QuizAttemptOrderByWithAggregationInput = {
    id?: SortOrder
    enrollmentId?: SortOrderInput | SortOrder
    quizId?: SortOrder
    studentId?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    passed?: SortOrderInput | SortOrder
    timeSpent?: SortOrder
    _count?: QuizAttemptCountOrderByAggregateInput
    _avg?: QuizAttemptAvgOrderByAggregateInput
    _max?: QuizAttemptMaxOrderByAggregateInput
    _min?: QuizAttemptMinOrderByAggregateInput
    _sum?: QuizAttemptSumOrderByAggregateInput
  }

  export type QuizAttemptScalarWhereWithAggregatesInput = {
    AND?: QuizAttemptScalarWhereWithAggregatesInput | QuizAttemptScalarWhereWithAggregatesInput[]
    OR?: QuizAttemptScalarWhereWithAggregatesInput[]
    NOT?: QuizAttemptScalarWhereWithAggregatesInput | QuizAttemptScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"QuizAttempt"> | string
    enrollmentId?: StringNullableWithAggregatesFilter<"QuizAttempt"> | string | null
    quizId?: StringWithAggregatesFilter<"QuizAttempt"> | string
    studentId?: StringWithAggregatesFilter<"QuizAttempt"> | string
    startedAt?: DateTimeWithAggregatesFilter<"QuizAttempt"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"QuizAttempt"> | Date | string | null
    score?: IntNullableWithAggregatesFilter<"QuizAttempt"> | number | null
    passed?: BoolNullableWithAggregatesFilter<"QuizAttempt"> | boolean | null
    timeSpent?: IntWithAggregatesFilter<"QuizAttempt"> | number
  }

  export type QuizAnswerWhereInput = {
    AND?: QuizAnswerWhereInput | QuizAnswerWhereInput[]
    OR?: QuizAnswerWhereInput[]
    NOT?: QuizAnswerWhereInput | QuizAnswerWhereInput[]
    id?: StringFilter<"QuizAnswer"> | string
    attemptId?: StringFilter<"QuizAnswer"> | string
    questionId?: StringFilter<"QuizAnswer"> | string
    answer?: StringFilter<"QuizAnswer"> | string
    isCorrect?: BoolFilter<"QuizAnswer"> | boolean
    timeSpent?: IntFilter<"QuizAnswer"> | number
    attempt?: XOR<QuizAttemptRelationFilter, QuizAttemptWhereInput>
    question?: XOR<QuizQuestionRelationFilter, QuizQuestionWhereInput>
  }

  export type QuizAnswerOrderByWithRelationInput = {
    id?: SortOrder
    attemptId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    isCorrect?: SortOrder
    timeSpent?: SortOrder
    attempt?: QuizAttemptOrderByWithRelationInput
    question?: QuizQuestionOrderByWithRelationInput
  }

  export type QuizAnswerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    attemptId_questionId?: QuizAnswerAttemptIdQuestionIdCompoundUniqueInput
    AND?: QuizAnswerWhereInput | QuizAnswerWhereInput[]
    OR?: QuizAnswerWhereInput[]
    NOT?: QuizAnswerWhereInput | QuizAnswerWhereInput[]
    attemptId?: StringFilter<"QuizAnswer"> | string
    questionId?: StringFilter<"QuizAnswer"> | string
    answer?: StringFilter<"QuizAnswer"> | string
    isCorrect?: BoolFilter<"QuizAnswer"> | boolean
    timeSpent?: IntFilter<"QuizAnswer"> | number
    attempt?: XOR<QuizAttemptRelationFilter, QuizAttemptWhereInput>
    question?: XOR<QuizQuestionRelationFilter, QuizQuestionWhereInput>
  }, "id" | "attemptId_questionId">

  export type QuizAnswerOrderByWithAggregationInput = {
    id?: SortOrder
    attemptId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    isCorrect?: SortOrder
    timeSpent?: SortOrder
    _count?: QuizAnswerCountOrderByAggregateInput
    _avg?: QuizAnswerAvgOrderByAggregateInput
    _max?: QuizAnswerMaxOrderByAggregateInput
    _min?: QuizAnswerMinOrderByAggregateInput
    _sum?: QuizAnswerSumOrderByAggregateInput
  }

  export type QuizAnswerScalarWhereWithAggregatesInput = {
    AND?: QuizAnswerScalarWhereWithAggregatesInput | QuizAnswerScalarWhereWithAggregatesInput[]
    OR?: QuizAnswerScalarWhereWithAggregatesInput[]
    NOT?: QuizAnswerScalarWhereWithAggregatesInput | QuizAnswerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"QuizAnswer"> | string
    attemptId?: StringWithAggregatesFilter<"QuizAnswer"> | string
    questionId?: StringWithAggregatesFilter<"QuizAnswer"> | string
    answer?: StringWithAggregatesFilter<"QuizAnswer"> | string
    isCorrect?: BoolWithAggregatesFilter<"QuizAnswer"> | boolean
    timeSpent?: IntWithAggregatesFilter<"QuizAnswer"> | number
  }

  export type CertificateWhereInput = {
    AND?: CertificateWhereInput | CertificateWhereInput[]
    OR?: CertificateWhereInput[]
    NOT?: CertificateWhereInput | CertificateWhereInput[]
    id?: StringFilter<"Certificate"> | string
    userId?: StringFilter<"Certificate"> | string
    courseId?: StringFilter<"Certificate"> | string
    template?: StringFilter<"Certificate"> | string
    issuedAt?: DateTimeFilter<"Certificate"> | Date | string
    verificationCode?: StringFilter<"Certificate"> | string
    digitalSignature?: StringFilter<"Certificate"> | string
    isValid?: BoolFilter<"Certificate"> | boolean
    url?: StringNullableFilter<"Certificate"> | string | null
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type CertificateOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    courseId?: SortOrder
    template?: SortOrder
    issuedAt?: SortOrder
    verificationCode?: SortOrder
    digitalSignature?: SortOrder
    isValid?: SortOrder
    url?: SortOrderInput | SortOrder
    course?: CourseOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type CertificateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    verificationCode?: string
    AND?: CertificateWhereInput | CertificateWhereInput[]
    OR?: CertificateWhereInput[]
    NOT?: CertificateWhereInput | CertificateWhereInput[]
    userId?: StringFilter<"Certificate"> | string
    courseId?: StringFilter<"Certificate"> | string
    template?: StringFilter<"Certificate"> | string
    issuedAt?: DateTimeFilter<"Certificate"> | Date | string
    digitalSignature?: StringFilter<"Certificate"> | string
    isValid?: BoolFilter<"Certificate"> | boolean
    url?: StringNullableFilter<"Certificate"> | string | null
    course?: XOR<CourseRelationFilter, CourseWhereInput>
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id" | "verificationCode">

  export type CertificateOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    courseId?: SortOrder
    template?: SortOrder
    issuedAt?: SortOrder
    verificationCode?: SortOrder
    digitalSignature?: SortOrder
    isValid?: SortOrder
    url?: SortOrderInput | SortOrder
    _count?: CertificateCountOrderByAggregateInput
    _max?: CertificateMaxOrderByAggregateInput
    _min?: CertificateMinOrderByAggregateInput
  }

  export type CertificateScalarWhereWithAggregatesInput = {
    AND?: CertificateScalarWhereWithAggregatesInput | CertificateScalarWhereWithAggregatesInput[]
    OR?: CertificateScalarWhereWithAggregatesInput[]
    NOT?: CertificateScalarWhereWithAggregatesInput | CertificateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Certificate"> | string
    userId?: StringWithAggregatesFilter<"Certificate"> | string
    courseId?: StringWithAggregatesFilter<"Certificate"> | string
    template?: StringWithAggregatesFilter<"Certificate"> | string
    issuedAt?: DateTimeWithAggregatesFilter<"Certificate"> | Date | string
    verificationCode?: StringWithAggregatesFilter<"Certificate"> | string
    digitalSignature?: StringWithAggregatesFilter<"Certificate"> | string
    isValid?: BoolWithAggregatesFilter<"Certificate"> | boolean
    url?: StringNullableWithAggregatesFilter<"Certificate"> | string | null
  }

  export type StudentNoteWhereInput = {
    AND?: StudentNoteWhereInput | StudentNoteWhereInput[]
    OR?: StudentNoteWhereInput[]
    NOT?: StudentNoteWhereInput | StudentNoteWhereInput[]
    id?: StringFilter<"StudentNote"> | string
    userId?: StringFilter<"StudentNote"> | string
    lessonId?: StringFilter<"StudentNote"> | string
    content?: StringFilter<"StudentNote"> | string
    timestamp?: IntNullableFilter<"StudentNote"> | number | null
    createdAt?: DateTimeFilter<"StudentNote"> | Date | string
    updatedAt?: DateTimeFilter<"StudentNote"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type StudentNoteOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    lessonId?: SortOrder
    content?: SortOrder
    timestamp?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lesson?: LessonOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type StudentNoteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StudentNoteWhereInput | StudentNoteWhereInput[]
    OR?: StudentNoteWhereInput[]
    NOT?: StudentNoteWhereInput | StudentNoteWhereInput[]
    userId?: StringFilter<"StudentNote"> | string
    lessonId?: StringFilter<"StudentNote"> | string
    content?: StringFilter<"StudentNote"> | string
    timestamp?: IntNullableFilter<"StudentNote"> | number | null
    createdAt?: DateTimeFilter<"StudentNote"> | Date | string
    updatedAt?: DateTimeFilter<"StudentNote"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type StudentNoteOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    lessonId?: SortOrder
    content?: SortOrder
    timestamp?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StudentNoteCountOrderByAggregateInput
    _avg?: StudentNoteAvgOrderByAggregateInput
    _max?: StudentNoteMaxOrderByAggregateInput
    _min?: StudentNoteMinOrderByAggregateInput
    _sum?: StudentNoteSumOrderByAggregateInput
  }

  export type StudentNoteScalarWhereWithAggregatesInput = {
    AND?: StudentNoteScalarWhereWithAggregatesInput | StudentNoteScalarWhereWithAggregatesInput[]
    OR?: StudentNoteScalarWhereWithAggregatesInput[]
    NOT?: StudentNoteScalarWhereWithAggregatesInput | StudentNoteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StudentNote"> | string
    userId?: StringWithAggregatesFilter<"StudentNote"> | string
    lessonId?: StringWithAggregatesFilter<"StudentNote"> | string
    content?: StringWithAggregatesFilter<"StudentNote"> | string
    timestamp?: IntNullableWithAggregatesFilter<"StudentNote"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"StudentNote"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StudentNote"> | Date | string
  }

  export type DiscussionWhereInput = {
    AND?: DiscussionWhereInput | DiscussionWhereInput[]
    OR?: DiscussionWhereInput[]
    NOT?: DiscussionWhereInput | DiscussionWhereInput[]
    id?: StringFilter<"Discussion"> | string
    lessonId?: StringFilter<"Discussion"> | string
    userId?: StringFilter<"Discussion"> | string
    content?: StringFilter<"Discussion"> | string
    parentId?: StringNullableFilter<"Discussion"> | string | null
    likes?: IntFilter<"Discussion"> | number
    createdAt?: DateTimeFilter<"Discussion"> | Date | string
    updatedAt?: DateTimeFilter<"Discussion"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
    parent?: XOR<DiscussionNullableRelationFilter, DiscussionWhereInput> | null
    replies?: DiscussionListRelationFilter
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type DiscussionOrderByWithRelationInput = {
    id?: SortOrder
    lessonId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    parentId?: SortOrderInput | SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lesson?: LessonOrderByWithRelationInput
    parent?: DiscussionOrderByWithRelationInput
    replies?: DiscussionOrderByRelationAggregateInput
    user?: ProfileOrderByWithRelationInput
  }

  export type DiscussionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DiscussionWhereInput | DiscussionWhereInput[]
    OR?: DiscussionWhereInput[]
    NOT?: DiscussionWhereInput | DiscussionWhereInput[]
    lessonId?: StringFilter<"Discussion"> | string
    userId?: StringFilter<"Discussion"> | string
    content?: StringFilter<"Discussion"> | string
    parentId?: StringNullableFilter<"Discussion"> | string | null
    likes?: IntFilter<"Discussion"> | number
    createdAt?: DateTimeFilter<"Discussion"> | Date | string
    updatedAt?: DateTimeFilter<"Discussion"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
    parent?: XOR<DiscussionNullableRelationFilter, DiscussionWhereInput> | null
    replies?: DiscussionListRelationFilter
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type DiscussionOrderByWithAggregationInput = {
    id?: SortOrder
    lessonId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    parentId?: SortOrderInput | SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DiscussionCountOrderByAggregateInput
    _avg?: DiscussionAvgOrderByAggregateInput
    _max?: DiscussionMaxOrderByAggregateInput
    _min?: DiscussionMinOrderByAggregateInput
    _sum?: DiscussionSumOrderByAggregateInput
  }

  export type DiscussionScalarWhereWithAggregatesInput = {
    AND?: DiscussionScalarWhereWithAggregatesInput | DiscussionScalarWhereWithAggregatesInput[]
    OR?: DiscussionScalarWhereWithAggregatesInput[]
    NOT?: DiscussionScalarWhereWithAggregatesInput | DiscussionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Discussion"> | string
    lessonId?: StringWithAggregatesFilter<"Discussion"> | string
    userId?: StringWithAggregatesFilter<"Discussion"> | string
    content?: StringWithAggregatesFilter<"Discussion"> | string
    parentId?: StringNullableWithAggregatesFilter<"Discussion"> | string | null
    likes?: IntWithAggregatesFilter<"Discussion"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Discussion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Discussion"> | Date | string
  }

  export type EntrepreneurshipWhereInput = {
    AND?: EntrepreneurshipWhereInput | EntrepreneurshipWhereInput[]
    OR?: EntrepreneurshipWhereInput[]
    NOT?: EntrepreneurshipWhereInput | EntrepreneurshipWhereInput[]
    id?: StringFilter<"Entrepreneurship"> | string
    ownerId?: StringFilter<"Entrepreneurship"> | string
    name?: StringFilter<"Entrepreneurship"> | string
    description?: StringFilter<"Entrepreneurship"> | string
    category?: StringFilter<"Entrepreneurship"> | string
    subcategory?: StringNullableFilter<"Entrepreneurship"> | string | null
    businessStage?: EnumBusinessStageFilter<"Entrepreneurship"> | $Enums.BusinessStage
    logo?: StringNullableFilter<"Entrepreneurship"> | string | null
    images?: StringNullableListFilter<"Entrepreneurship">
    website?: StringNullableFilter<"Entrepreneurship"> | string | null
    email?: StringNullableFilter<"Entrepreneurship"> | string | null
    phone?: StringNullableFilter<"Entrepreneurship"> | string | null
    address?: StringNullableFilter<"Entrepreneurship"> | string | null
    municipality?: StringFilter<"Entrepreneurship"> | string
    department?: StringFilter<"Entrepreneurship"> | string
    socialMedia?: JsonNullableFilter<"Entrepreneurship">
    founded?: DateTimeNullableFilter<"Entrepreneurship"> | Date | string | null
    employees?: IntNullableFilter<"Entrepreneurship"> | number | null
    annualRevenue?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    businessModel?: StringNullableFilter<"Entrepreneurship"> | string | null
    targetMarket?: StringNullableFilter<"Entrepreneurship"> | string | null
    isPublic?: BoolFilter<"Entrepreneurship"> | boolean
    isActive?: BoolFilter<"Entrepreneurship"> | boolean
    viewsCount?: IntFilter<"Entrepreneurship"> | number
    rating?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFilter<"Entrepreneurship"> | number
    createdAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
    updatedAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
    businessPlan?: XOR<BusinessPlanNullableRelationFilter, BusinessPlanWhereInput> | null
    owner?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type EntrepreneurshipOrderByWithRelationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    businessStage?: SortOrder
    logo?: SortOrderInput | SortOrder
    images?: SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    municipality?: SortOrder
    department?: SortOrder
    socialMedia?: SortOrderInput | SortOrder
    founded?: SortOrderInput | SortOrder
    employees?: SortOrderInput | SortOrder
    annualRevenue?: SortOrderInput | SortOrder
    businessModel?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isActive?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrderInput | SortOrder
    reviewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessPlan?: BusinessPlanOrderByWithRelationInput
    owner?: ProfileOrderByWithRelationInput
  }

  export type EntrepreneurshipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EntrepreneurshipWhereInput | EntrepreneurshipWhereInput[]
    OR?: EntrepreneurshipWhereInput[]
    NOT?: EntrepreneurshipWhereInput | EntrepreneurshipWhereInput[]
    ownerId?: StringFilter<"Entrepreneurship"> | string
    name?: StringFilter<"Entrepreneurship"> | string
    description?: StringFilter<"Entrepreneurship"> | string
    category?: StringFilter<"Entrepreneurship"> | string
    subcategory?: StringNullableFilter<"Entrepreneurship"> | string | null
    businessStage?: EnumBusinessStageFilter<"Entrepreneurship"> | $Enums.BusinessStage
    logo?: StringNullableFilter<"Entrepreneurship"> | string | null
    images?: StringNullableListFilter<"Entrepreneurship">
    website?: StringNullableFilter<"Entrepreneurship"> | string | null
    email?: StringNullableFilter<"Entrepreneurship"> | string | null
    phone?: StringNullableFilter<"Entrepreneurship"> | string | null
    address?: StringNullableFilter<"Entrepreneurship"> | string | null
    municipality?: StringFilter<"Entrepreneurship"> | string
    department?: StringFilter<"Entrepreneurship"> | string
    socialMedia?: JsonNullableFilter<"Entrepreneurship">
    founded?: DateTimeNullableFilter<"Entrepreneurship"> | Date | string | null
    employees?: IntNullableFilter<"Entrepreneurship"> | number | null
    annualRevenue?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    businessModel?: StringNullableFilter<"Entrepreneurship"> | string | null
    targetMarket?: StringNullableFilter<"Entrepreneurship"> | string | null
    isPublic?: BoolFilter<"Entrepreneurship"> | boolean
    isActive?: BoolFilter<"Entrepreneurship"> | boolean
    viewsCount?: IntFilter<"Entrepreneurship"> | number
    rating?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFilter<"Entrepreneurship"> | number
    createdAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
    updatedAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
    businessPlan?: XOR<BusinessPlanNullableRelationFilter, BusinessPlanWhereInput> | null
    owner?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type EntrepreneurshipOrderByWithAggregationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    businessStage?: SortOrder
    logo?: SortOrderInput | SortOrder
    images?: SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    municipality?: SortOrder
    department?: SortOrder
    socialMedia?: SortOrderInput | SortOrder
    founded?: SortOrderInput | SortOrder
    employees?: SortOrderInput | SortOrder
    annualRevenue?: SortOrderInput | SortOrder
    businessModel?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isActive?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrderInput | SortOrder
    reviewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EntrepreneurshipCountOrderByAggregateInput
    _avg?: EntrepreneurshipAvgOrderByAggregateInput
    _max?: EntrepreneurshipMaxOrderByAggregateInput
    _min?: EntrepreneurshipMinOrderByAggregateInput
    _sum?: EntrepreneurshipSumOrderByAggregateInput
  }

  export type EntrepreneurshipScalarWhereWithAggregatesInput = {
    AND?: EntrepreneurshipScalarWhereWithAggregatesInput | EntrepreneurshipScalarWhereWithAggregatesInput[]
    OR?: EntrepreneurshipScalarWhereWithAggregatesInput[]
    NOT?: EntrepreneurshipScalarWhereWithAggregatesInput | EntrepreneurshipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    ownerId?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    name?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    description?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    category?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    subcategory?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    businessStage?: EnumBusinessStageWithAggregatesFilter<"Entrepreneurship"> | $Enums.BusinessStage
    logo?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    images?: StringNullableListFilter<"Entrepreneurship">
    website?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    email?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    address?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    municipality?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    department?: StringWithAggregatesFilter<"Entrepreneurship"> | string
    socialMedia?: JsonNullableWithAggregatesFilter<"Entrepreneurship">
    founded?: DateTimeNullableWithAggregatesFilter<"Entrepreneurship"> | Date | string | null
    employees?: IntNullableWithAggregatesFilter<"Entrepreneurship"> | number | null
    annualRevenue?: DecimalNullableWithAggregatesFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    businessModel?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    targetMarket?: StringNullableWithAggregatesFilter<"Entrepreneurship"> | string | null
    isPublic?: BoolWithAggregatesFilter<"Entrepreneurship"> | boolean
    isActive?: BoolWithAggregatesFilter<"Entrepreneurship"> | boolean
    viewsCount?: IntWithAggregatesFilter<"Entrepreneurship"> | number
    rating?: DecimalNullableWithAggregatesFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntWithAggregatesFilter<"Entrepreneurship"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Entrepreneurship"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Entrepreneurship"> | Date | string
  }

  export type BusinessPlanWhereInput = {
    AND?: BusinessPlanWhereInput | BusinessPlanWhereInput[]
    OR?: BusinessPlanWhereInput[]
    NOT?: BusinessPlanWhereInput | BusinessPlanWhereInput[]
    id?: StringFilter<"BusinessPlan"> | string
    entrepreneurshipId?: StringFilter<"BusinessPlan"> | string
    executiveSummary?: StringNullableFilter<"BusinessPlan"> | string | null
    missionStatement?: StringNullableFilter<"BusinessPlan"> | string | null
    visionStatement?: StringNullableFilter<"BusinessPlan"> | string | null
    marketAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    targetMarket?: StringNullableFilter<"BusinessPlan"> | string | null
    competitiveAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    businessModelCanvas?: JsonNullableFilter<"BusinessPlan">
    revenueStreams?: StringNullableListFilter<"BusinessPlan">
    costStructure?: JsonNullableFilter<"BusinessPlan">
    marketingStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    pricingStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    salesStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    initialInvestment?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: JsonNullableFilter<"BusinessPlan">
    breakEvenPoint?: IntNullableFilter<"BusinessPlan"> | number | null
    roi?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    mitigationStrategies?: StringNullableListFilter<"BusinessPlan">
    operationalPlan?: StringNullableFilter<"BusinessPlan"> | string | null
    managementTeam?: JsonNullableFilter<"BusinessPlan">
    tripleImpactAssessment?: JsonNullableFilter<"BusinessPlan">
    isCompleted?: BoolFilter<"BusinessPlan"> | boolean
    lastSection?: StringNullableFilter<"BusinessPlan"> | string | null
    completionPercentage?: IntFilter<"BusinessPlan"> | number
    createdAt?: DateTimeFilter<"BusinessPlan"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPlan"> | Date | string
    entrepreneurship?: XOR<EntrepreneurshipRelationFilter, EntrepreneurshipWhereInput>
  }

  export type BusinessPlanOrderByWithRelationInput = {
    id?: SortOrder
    entrepreneurshipId?: SortOrder
    executiveSummary?: SortOrderInput | SortOrder
    missionStatement?: SortOrderInput | SortOrder
    visionStatement?: SortOrderInput | SortOrder
    marketAnalysis?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    competitiveAnalysis?: SortOrderInput | SortOrder
    businessModelCanvas?: SortOrderInput | SortOrder
    revenueStreams?: SortOrder
    costStructure?: SortOrderInput | SortOrder
    marketingStrategy?: SortOrderInput | SortOrder
    pricingStrategy?: SortOrderInput | SortOrder
    salesStrategy?: SortOrderInput | SortOrder
    initialInvestment?: SortOrderInput | SortOrder
    monthlyExpenses?: SortOrderInput | SortOrder
    revenueProjection?: SortOrderInput | SortOrder
    breakEvenPoint?: SortOrderInput | SortOrder
    roi?: SortOrderInput | SortOrder
    riskAnalysis?: SortOrderInput | SortOrder
    mitigationStrategies?: SortOrder
    operationalPlan?: SortOrderInput | SortOrder
    managementTeam?: SortOrderInput | SortOrder
    tripleImpactAssessment?: SortOrderInput | SortOrder
    isCompleted?: SortOrder
    lastSection?: SortOrderInput | SortOrder
    completionPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    entrepreneurship?: EntrepreneurshipOrderByWithRelationInput
  }

  export type BusinessPlanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    entrepreneurshipId?: string
    AND?: BusinessPlanWhereInput | BusinessPlanWhereInput[]
    OR?: BusinessPlanWhereInput[]
    NOT?: BusinessPlanWhereInput | BusinessPlanWhereInput[]
    executiveSummary?: StringNullableFilter<"BusinessPlan"> | string | null
    missionStatement?: StringNullableFilter<"BusinessPlan"> | string | null
    visionStatement?: StringNullableFilter<"BusinessPlan"> | string | null
    marketAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    targetMarket?: StringNullableFilter<"BusinessPlan"> | string | null
    competitiveAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    businessModelCanvas?: JsonNullableFilter<"BusinessPlan">
    revenueStreams?: StringNullableListFilter<"BusinessPlan">
    costStructure?: JsonNullableFilter<"BusinessPlan">
    marketingStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    pricingStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    salesStrategy?: StringNullableFilter<"BusinessPlan"> | string | null
    initialInvestment?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: JsonNullableFilter<"BusinessPlan">
    breakEvenPoint?: IntNullableFilter<"BusinessPlan"> | number | null
    roi?: DecimalNullableFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: StringNullableFilter<"BusinessPlan"> | string | null
    mitigationStrategies?: StringNullableListFilter<"BusinessPlan">
    operationalPlan?: StringNullableFilter<"BusinessPlan"> | string | null
    managementTeam?: JsonNullableFilter<"BusinessPlan">
    tripleImpactAssessment?: JsonNullableFilter<"BusinessPlan">
    isCompleted?: BoolFilter<"BusinessPlan"> | boolean
    lastSection?: StringNullableFilter<"BusinessPlan"> | string | null
    completionPercentage?: IntFilter<"BusinessPlan"> | number
    createdAt?: DateTimeFilter<"BusinessPlan"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessPlan"> | Date | string
    entrepreneurship?: XOR<EntrepreneurshipRelationFilter, EntrepreneurshipWhereInput>
  }, "id" | "entrepreneurshipId">

  export type BusinessPlanOrderByWithAggregationInput = {
    id?: SortOrder
    entrepreneurshipId?: SortOrder
    executiveSummary?: SortOrderInput | SortOrder
    missionStatement?: SortOrderInput | SortOrder
    visionStatement?: SortOrderInput | SortOrder
    marketAnalysis?: SortOrderInput | SortOrder
    targetMarket?: SortOrderInput | SortOrder
    competitiveAnalysis?: SortOrderInput | SortOrder
    businessModelCanvas?: SortOrderInput | SortOrder
    revenueStreams?: SortOrder
    costStructure?: SortOrderInput | SortOrder
    marketingStrategy?: SortOrderInput | SortOrder
    pricingStrategy?: SortOrderInput | SortOrder
    salesStrategy?: SortOrderInput | SortOrder
    initialInvestment?: SortOrderInput | SortOrder
    monthlyExpenses?: SortOrderInput | SortOrder
    revenueProjection?: SortOrderInput | SortOrder
    breakEvenPoint?: SortOrderInput | SortOrder
    roi?: SortOrderInput | SortOrder
    riskAnalysis?: SortOrderInput | SortOrder
    mitigationStrategies?: SortOrder
    operationalPlan?: SortOrderInput | SortOrder
    managementTeam?: SortOrderInput | SortOrder
    tripleImpactAssessment?: SortOrderInput | SortOrder
    isCompleted?: SortOrder
    lastSection?: SortOrderInput | SortOrder
    completionPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessPlanCountOrderByAggregateInput
    _avg?: BusinessPlanAvgOrderByAggregateInput
    _max?: BusinessPlanMaxOrderByAggregateInput
    _min?: BusinessPlanMinOrderByAggregateInput
    _sum?: BusinessPlanSumOrderByAggregateInput
  }

  export type BusinessPlanScalarWhereWithAggregatesInput = {
    AND?: BusinessPlanScalarWhereWithAggregatesInput | BusinessPlanScalarWhereWithAggregatesInput[]
    OR?: BusinessPlanScalarWhereWithAggregatesInput[]
    NOT?: BusinessPlanScalarWhereWithAggregatesInput | BusinessPlanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessPlan"> | string
    entrepreneurshipId?: StringWithAggregatesFilter<"BusinessPlan"> | string
    executiveSummary?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    missionStatement?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    visionStatement?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    marketAnalysis?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    targetMarket?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    competitiveAnalysis?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    businessModelCanvas?: JsonNullableWithAggregatesFilter<"BusinessPlan">
    revenueStreams?: StringNullableListFilter<"BusinessPlan">
    costStructure?: JsonNullableWithAggregatesFilter<"BusinessPlan">
    marketingStrategy?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    pricingStrategy?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    salesStrategy?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    initialInvestment?: DecimalNullableWithAggregatesFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableWithAggregatesFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: JsonNullableWithAggregatesFilter<"BusinessPlan">
    breakEvenPoint?: IntNullableWithAggregatesFilter<"BusinessPlan"> | number | null
    roi?: DecimalNullableWithAggregatesFilter<"BusinessPlan"> | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    mitigationStrategies?: StringNullableListFilter<"BusinessPlan">
    operationalPlan?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    managementTeam?: JsonNullableWithAggregatesFilter<"BusinessPlan">
    tripleImpactAssessment?: JsonNullableWithAggregatesFilter<"BusinessPlan">
    isCompleted?: BoolWithAggregatesFilter<"BusinessPlan"> | boolean
    lastSection?: StringNullableWithAggregatesFilter<"BusinessPlan"> | string | null
    completionPercentage?: IntWithAggregatesFilter<"BusinessPlan"> | number
    createdAt?: DateTimeWithAggregatesFilter<"BusinessPlan"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessPlan"> | Date | string
  }

  export type NewsArticleWhereInput = {
    AND?: NewsArticleWhereInput | NewsArticleWhereInput[]
    OR?: NewsArticleWhereInput[]
    NOT?: NewsArticleWhereInput | NewsArticleWhereInput[]
    id?: StringFilter<"NewsArticle"> | string
    title?: StringFilter<"NewsArticle"> | string
    content?: StringFilter<"NewsArticle"> | string
    summary?: StringFilter<"NewsArticle"> | string
    imageUrl?: StringNullableFilter<"NewsArticle"> | string | null
    videoUrl?: StringNullableFilter<"NewsArticle"> | string | null
    authorId?: StringFilter<"NewsArticle"> | string
    authorName?: StringFilter<"NewsArticle"> | string
    authorType?: EnumNewsTypeFilter<"NewsArticle"> | $Enums.NewsType
    authorLogo?: StringNullableFilter<"NewsArticle"> | string | null
    status?: EnumNewsStatusFilter<"NewsArticle"> | $Enums.NewsStatus
    priority?: EnumNewsPriorityFilter<"NewsArticle"> | $Enums.NewsPriority
    featured?: BoolFilter<"NewsArticle"> | boolean
    tags?: StringNullableListFilter<"NewsArticle">
    category?: StringFilter<"NewsArticle"> | string
    publishedAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    viewCount?: IntFilter<"NewsArticle"> | number
    likeCount?: IntFilter<"NewsArticle"> | number
    commentCount?: IntFilter<"NewsArticle"> | number
    targetAudience?: StringNullableListFilter<"NewsArticle">
    region?: StringNullableFilter<"NewsArticle"> | string | null
    relatedLinks?: JsonNullableFilter<"NewsArticle">
    createdAt?: DateTimeFilter<"NewsArticle"> | Date | string
    updatedAt?: DateTimeFilter<"NewsArticle"> | Date | string
    author?: XOR<ProfileRelationFilter, ProfileWhereInput>
    comments?: NewsCommentListRelationFilter
  }

  export type NewsArticleOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    videoUrl?: SortOrderInput | SortOrder
    authorId?: SortOrder
    authorName?: SortOrder
    authorType?: SortOrder
    authorLogo?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    featured?: SortOrder
    tags?: SortOrder
    category?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    targetAudience?: SortOrder
    region?: SortOrderInput | SortOrder
    relatedLinks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    author?: ProfileOrderByWithRelationInput
    comments?: NewsCommentOrderByRelationAggregateInput
  }

  export type NewsArticleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NewsArticleWhereInput | NewsArticleWhereInput[]
    OR?: NewsArticleWhereInput[]
    NOT?: NewsArticleWhereInput | NewsArticleWhereInput[]
    title?: StringFilter<"NewsArticle"> | string
    content?: StringFilter<"NewsArticle"> | string
    summary?: StringFilter<"NewsArticle"> | string
    imageUrl?: StringNullableFilter<"NewsArticle"> | string | null
    videoUrl?: StringNullableFilter<"NewsArticle"> | string | null
    authorId?: StringFilter<"NewsArticle"> | string
    authorName?: StringFilter<"NewsArticle"> | string
    authorType?: EnumNewsTypeFilter<"NewsArticle"> | $Enums.NewsType
    authorLogo?: StringNullableFilter<"NewsArticle"> | string | null
    status?: EnumNewsStatusFilter<"NewsArticle"> | $Enums.NewsStatus
    priority?: EnumNewsPriorityFilter<"NewsArticle"> | $Enums.NewsPriority
    featured?: BoolFilter<"NewsArticle"> | boolean
    tags?: StringNullableListFilter<"NewsArticle">
    category?: StringFilter<"NewsArticle"> | string
    publishedAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    viewCount?: IntFilter<"NewsArticle"> | number
    likeCount?: IntFilter<"NewsArticle"> | number
    commentCount?: IntFilter<"NewsArticle"> | number
    targetAudience?: StringNullableListFilter<"NewsArticle">
    region?: StringNullableFilter<"NewsArticle"> | string | null
    relatedLinks?: JsonNullableFilter<"NewsArticle">
    createdAt?: DateTimeFilter<"NewsArticle"> | Date | string
    updatedAt?: DateTimeFilter<"NewsArticle"> | Date | string
    author?: XOR<ProfileRelationFilter, ProfileWhereInput>
    comments?: NewsCommentListRelationFilter
  }, "id">

  export type NewsArticleOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    videoUrl?: SortOrderInput | SortOrder
    authorId?: SortOrder
    authorName?: SortOrder
    authorType?: SortOrder
    authorLogo?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    featured?: SortOrder
    tags?: SortOrder
    category?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    targetAudience?: SortOrder
    region?: SortOrderInput | SortOrder
    relatedLinks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NewsArticleCountOrderByAggregateInput
    _avg?: NewsArticleAvgOrderByAggregateInput
    _max?: NewsArticleMaxOrderByAggregateInput
    _min?: NewsArticleMinOrderByAggregateInput
    _sum?: NewsArticleSumOrderByAggregateInput
  }

  export type NewsArticleScalarWhereWithAggregatesInput = {
    AND?: NewsArticleScalarWhereWithAggregatesInput | NewsArticleScalarWhereWithAggregatesInput[]
    OR?: NewsArticleScalarWhereWithAggregatesInput[]
    NOT?: NewsArticleScalarWhereWithAggregatesInput | NewsArticleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"NewsArticle"> | string
    title?: StringWithAggregatesFilter<"NewsArticle"> | string
    content?: StringWithAggregatesFilter<"NewsArticle"> | string
    summary?: StringWithAggregatesFilter<"NewsArticle"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"NewsArticle"> | string | null
    videoUrl?: StringNullableWithAggregatesFilter<"NewsArticle"> | string | null
    authorId?: StringWithAggregatesFilter<"NewsArticle"> | string
    authorName?: StringWithAggregatesFilter<"NewsArticle"> | string
    authorType?: EnumNewsTypeWithAggregatesFilter<"NewsArticle"> | $Enums.NewsType
    authorLogo?: StringNullableWithAggregatesFilter<"NewsArticle"> | string | null
    status?: EnumNewsStatusWithAggregatesFilter<"NewsArticle"> | $Enums.NewsStatus
    priority?: EnumNewsPriorityWithAggregatesFilter<"NewsArticle"> | $Enums.NewsPriority
    featured?: BoolWithAggregatesFilter<"NewsArticle"> | boolean
    tags?: StringNullableListFilter<"NewsArticle">
    category?: StringWithAggregatesFilter<"NewsArticle"> | string
    publishedAt?: DateTimeNullableWithAggregatesFilter<"NewsArticle"> | Date | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"NewsArticle"> | Date | string | null
    viewCount?: IntWithAggregatesFilter<"NewsArticle"> | number
    likeCount?: IntWithAggregatesFilter<"NewsArticle"> | number
    commentCount?: IntWithAggregatesFilter<"NewsArticle"> | number
    targetAudience?: StringNullableListFilter<"NewsArticle">
    region?: StringNullableWithAggregatesFilter<"NewsArticle"> | string | null
    relatedLinks?: JsonNullableWithAggregatesFilter<"NewsArticle">
    createdAt?: DateTimeWithAggregatesFilter<"NewsArticle"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"NewsArticle"> | Date | string
  }

  export type NewsCommentWhereInput = {
    AND?: NewsCommentWhereInput | NewsCommentWhereInput[]
    OR?: NewsCommentWhereInput[]
    NOT?: NewsCommentWhereInput | NewsCommentWhereInput[]
    id?: StringFilter<"NewsComment"> | string
    newsId?: StringFilter<"NewsComment"> | string
    userId?: StringFilter<"NewsComment"> | string
    userName?: StringFilter<"NewsComment"> | string
    userAvatar?: StringNullableFilter<"NewsComment"> | string | null
    content?: StringFilter<"NewsComment"> | string
    parentId?: StringNullableFilter<"NewsComment"> | string | null
    likes?: IntFilter<"NewsComment"> | number
    createdAt?: DateTimeFilter<"NewsComment"> | Date | string
    updatedAt?: DateTimeFilter<"NewsComment"> | Date | string
    news?: XOR<NewsArticleRelationFilter, NewsArticleWhereInput>
    parent?: XOR<NewsCommentNullableRelationFilter, NewsCommentWhereInput> | null
    replies?: NewsCommentListRelationFilter
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type NewsCommentOrderByWithRelationInput = {
    id?: SortOrder
    newsId?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrderInput | SortOrder
    content?: SortOrder
    parentId?: SortOrderInput | SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    news?: NewsArticleOrderByWithRelationInput
    parent?: NewsCommentOrderByWithRelationInput
    replies?: NewsCommentOrderByRelationAggregateInput
    user?: ProfileOrderByWithRelationInput
  }

  export type NewsCommentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NewsCommentWhereInput | NewsCommentWhereInput[]
    OR?: NewsCommentWhereInput[]
    NOT?: NewsCommentWhereInput | NewsCommentWhereInput[]
    newsId?: StringFilter<"NewsComment"> | string
    userId?: StringFilter<"NewsComment"> | string
    userName?: StringFilter<"NewsComment"> | string
    userAvatar?: StringNullableFilter<"NewsComment"> | string | null
    content?: StringFilter<"NewsComment"> | string
    parentId?: StringNullableFilter<"NewsComment"> | string | null
    likes?: IntFilter<"NewsComment"> | number
    createdAt?: DateTimeFilter<"NewsComment"> | Date | string
    updatedAt?: DateTimeFilter<"NewsComment"> | Date | string
    news?: XOR<NewsArticleRelationFilter, NewsArticleWhereInput>
    parent?: XOR<NewsCommentNullableRelationFilter, NewsCommentWhereInput> | null
    replies?: NewsCommentListRelationFilter
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type NewsCommentOrderByWithAggregationInput = {
    id?: SortOrder
    newsId?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrderInput | SortOrder
    content?: SortOrder
    parentId?: SortOrderInput | SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NewsCommentCountOrderByAggregateInput
    _avg?: NewsCommentAvgOrderByAggregateInput
    _max?: NewsCommentMaxOrderByAggregateInput
    _min?: NewsCommentMinOrderByAggregateInput
    _sum?: NewsCommentSumOrderByAggregateInput
  }

  export type NewsCommentScalarWhereWithAggregatesInput = {
    AND?: NewsCommentScalarWhereWithAggregatesInput | NewsCommentScalarWhereWithAggregatesInput[]
    OR?: NewsCommentScalarWhereWithAggregatesInput[]
    NOT?: NewsCommentScalarWhereWithAggregatesInput | NewsCommentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"NewsComment"> | string
    newsId?: StringWithAggregatesFilter<"NewsComment"> | string
    userId?: StringWithAggregatesFilter<"NewsComment"> | string
    userName?: StringWithAggregatesFilter<"NewsComment"> | string
    userAvatar?: StringNullableWithAggregatesFilter<"NewsComment"> | string | null
    content?: StringWithAggregatesFilter<"NewsComment"> | string
    parentId?: StringNullableWithAggregatesFilter<"NewsComment"> | string | null
    likes?: IntWithAggregatesFilter<"NewsComment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"NewsComment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"NewsComment"> | Date | string
  }

  export type ResourceWhereInput = {
    AND?: ResourceWhereInput | ResourceWhereInput[]
    OR?: ResourceWhereInput[]
    NOT?: ResourceWhereInput | ResourceWhereInput[]
    id?: StringFilter<"Resource"> | string
    title?: StringFilter<"Resource"> | string
    description?: StringFilter<"Resource"> | string
    type?: StringFilter<"Resource"> | string
    category?: StringFilter<"Resource"> | string
    format?: StringFilter<"Resource"> | string
    downloadUrl?: StringNullableFilter<"Resource"> | string | null
    externalUrl?: StringNullableFilter<"Resource"> | string | null
    thumbnail?: StringFilter<"Resource"> | string
    author?: StringFilter<"Resource"> | string
    publishedDate?: DateTimeFilter<"Resource"> | Date | string
    downloads?: IntFilter<"Resource"> | number
    rating?: FloatFilter<"Resource"> | number
    tags?: StringNullableListFilter<"Resource">
    createdAt?: DateTimeFilter<"Resource"> | Date | string
    updatedAt?: DateTimeFilter<"Resource"> | Date | string
  }

  export type ResourceOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    category?: SortOrder
    format?: SortOrder
    downloadUrl?: SortOrderInput | SortOrder
    externalUrl?: SortOrderInput | SortOrder
    thumbnail?: SortOrder
    author?: SortOrder
    publishedDate?: SortOrder
    downloads?: SortOrder
    rating?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResourceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ResourceWhereInput | ResourceWhereInput[]
    OR?: ResourceWhereInput[]
    NOT?: ResourceWhereInput | ResourceWhereInput[]
    title?: StringFilter<"Resource"> | string
    description?: StringFilter<"Resource"> | string
    type?: StringFilter<"Resource"> | string
    category?: StringFilter<"Resource"> | string
    format?: StringFilter<"Resource"> | string
    downloadUrl?: StringNullableFilter<"Resource"> | string | null
    externalUrl?: StringNullableFilter<"Resource"> | string | null
    thumbnail?: StringFilter<"Resource"> | string
    author?: StringFilter<"Resource"> | string
    publishedDate?: DateTimeFilter<"Resource"> | Date | string
    downloads?: IntFilter<"Resource"> | number
    rating?: FloatFilter<"Resource"> | number
    tags?: StringNullableListFilter<"Resource">
    createdAt?: DateTimeFilter<"Resource"> | Date | string
    updatedAt?: DateTimeFilter<"Resource"> | Date | string
  }, "id">

  export type ResourceOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    category?: SortOrder
    format?: SortOrder
    downloadUrl?: SortOrderInput | SortOrder
    externalUrl?: SortOrderInput | SortOrder
    thumbnail?: SortOrder
    author?: SortOrder
    publishedDate?: SortOrder
    downloads?: SortOrder
    rating?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ResourceCountOrderByAggregateInput
    _avg?: ResourceAvgOrderByAggregateInput
    _max?: ResourceMaxOrderByAggregateInput
    _min?: ResourceMinOrderByAggregateInput
    _sum?: ResourceSumOrderByAggregateInput
  }

  export type ResourceScalarWhereWithAggregatesInput = {
    AND?: ResourceScalarWhereWithAggregatesInput | ResourceScalarWhereWithAggregatesInput[]
    OR?: ResourceScalarWhereWithAggregatesInput[]
    NOT?: ResourceScalarWhereWithAggregatesInput | ResourceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Resource"> | string
    title?: StringWithAggregatesFilter<"Resource"> | string
    description?: StringWithAggregatesFilter<"Resource"> | string
    type?: StringWithAggregatesFilter<"Resource"> | string
    category?: StringWithAggregatesFilter<"Resource"> | string
    format?: StringWithAggregatesFilter<"Resource"> | string
    downloadUrl?: StringNullableWithAggregatesFilter<"Resource"> | string | null
    externalUrl?: StringNullableWithAggregatesFilter<"Resource"> | string | null
    thumbnail?: StringWithAggregatesFilter<"Resource"> | string
    author?: StringWithAggregatesFilter<"Resource"> | string
    publishedDate?: DateTimeWithAggregatesFilter<"Resource"> | Date | string
    downloads?: IntWithAggregatesFilter<"Resource"> | number
    rating?: FloatWithAggregatesFilter<"Resource"> | number
    tags?: StringNullableListFilter<"Resource">
    createdAt?: DateTimeWithAggregatesFilter<"Resource"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Resource"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdCompanies?: CompanyListRelationFilter
    createdInstitutions?: InstitutionListRelationFilter
    createdMunicipalities?: MunicipalityListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdCompanies?: CompanyOrderByRelationAggregateInput
    createdInstitutions?: InstitutionOrderByRelationAggregateInput
    createdMunicipalities?: MunicipalityOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdCompanies?: CompanyListRelationFilter
    createdInstitutions?: InstitutionListRelationFilter
    createdMunicipalities?: MunicipalityListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
  }, "id" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    revoked?: BoolFilter<"RefreshToken"> | boolean
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    revoked?: BoolFilter<"RefreshToken"> | boolean
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    revoked?: BoolWithAggregatesFilter<"RefreshToken"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type ExternalApiKeyWhereInput = {
    AND?: ExternalApiKeyWhereInput | ExternalApiKeyWhereInput[]
    OR?: ExternalApiKeyWhereInput[]
    NOT?: ExternalApiKeyWhereInput | ExternalApiKeyWhereInput[]
    id?: StringFilter<"ExternalApiKey"> | string
    key?: StringFilter<"ExternalApiKey"> | string
    name?: StringFilter<"ExternalApiKey"> | string
    active?: BoolFilter<"ExternalApiKey"> | boolean
    createdAt?: DateTimeFilter<"ExternalApiKey"> | Date | string
    revokedAt?: DateTimeNullableFilter<"ExternalApiKey"> | Date | string | null
  }

  export type ExternalApiKeyOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    name?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
  }

  export type ExternalApiKeyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key?: string
    AND?: ExternalApiKeyWhereInput | ExternalApiKeyWhereInput[]
    OR?: ExternalApiKeyWhereInput[]
    NOT?: ExternalApiKeyWhereInput | ExternalApiKeyWhereInput[]
    name?: StringFilter<"ExternalApiKey"> | string
    active?: BoolFilter<"ExternalApiKey"> | boolean
    createdAt?: DateTimeFilter<"ExternalApiKey"> | Date | string
    revokedAt?: DateTimeNullableFilter<"ExternalApiKey"> | Date | string | null
  }, "id" | "key">

  export type ExternalApiKeyOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    name?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
    _count?: ExternalApiKeyCountOrderByAggregateInput
    _max?: ExternalApiKeyMaxOrderByAggregateInput
    _min?: ExternalApiKeyMinOrderByAggregateInput
  }

  export type ExternalApiKeyScalarWhereWithAggregatesInput = {
    AND?: ExternalApiKeyScalarWhereWithAggregatesInput | ExternalApiKeyScalarWhereWithAggregatesInput[]
    OR?: ExternalApiKeyScalarWhereWithAggregatesInput[]
    NOT?: ExternalApiKeyScalarWhereWithAggregatesInput | ExternalApiKeyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ExternalApiKey"> | string
    key?: StringWithAggregatesFilter<"ExternalApiKey"> | string
    name?: StringWithAggregatesFilter<"ExternalApiKey"> | string
    active?: BoolWithAggregatesFilter<"ExternalApiKey"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ExternalApiKey"> | Date | string
    revokedAt?: DateTimeNullableWithAggregatesFilter<"ExternalApiKey"> | Date | string | null
  }

  export type InstitutionWhereInput = {
    AND?: InstitutionWhereInput | InstitutionWhereInput[]
    OR?: InstitutionWhereInput[]
    NOT?: InstitutionWhereInput | InstitutionWhereInput[]
    id?: StringFilter<"Institution"> | string
    name?: StringFilter<"Institution"> | string
    department?: StringFilter<"Institution"> | string
    region?: StringNullableFilter<"Institution"> | string | null
    population?: IntNullableFilter<"Institution"> | number | null
    mayorName?: StringNullableFilter<"Institution"> | string | null
    mayorEmail?: StringNullableFilter<"Institution"> | string | null
    mayorPhone?: StringNullableFilter<"Institution"> | string | null
    address?: StringNullableFilter<"Institution"> | string | null
    website?: StringNullableFilter<"Institution"> | string | null
    isActive?: BoolFilter<"Institution"> | boolean
    username?: StringFilter<"Institution"> | string
    password?: StringFilter<"Institution"> | string
    email?: StringFilter<"Institution"> | string
    phone?: StringNullableFilter<"Institution"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Institution"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Institution"> | string | null
    primaryColor?: StringNullableFilter<"Institution"> | string | null
    secondaryColor?: StringNullableFilter<"Institution"> | string | null
    createdBy?: StringFilter<"Institution"> | string
    createdAt?: DateTimeFilter<"Institution"> | Date | string
    updatedAt?: DateTimeFilter<"Institution"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type InstitutionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    mayorName?: SortOrderInput | SortOrder
    mayorEmail?: SortOrderInput | SortOrder
    mayorPhone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    institutionType?: SortOrder
    customType?: SortOrderInput | SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UserOrderByWithRelationInput
  }

  export type InstitutionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    name_department?: InstitutionNameDepartmentCompoundUniqueInput
    AND?: InstitutionWhereInput | InstitutionWhereInput[]
    OR?: InstitutionWhereInput[]
    NOT?: InstitutionWhereInput | InstitutionWhereInput[]
    name?: StringFilter<"Institution"> | string
    department?: StringFilter<"Institution"> | string
    region?: StringNullableFilter<"Institution"> | string | null
    population?: IntNullableFilter<"Institution"> | number | null
    mayorName?: StringNullableFilter<"Institution"> | string | null
    mayorEmail?: StringNullableFilter<"Institution"> | string | null
    mayorPhone?: StringNullableFilter<"Institution"> | string | null
    address?: StringNullableFilter<"Institution"> | string | null
    website?: StringNullableFilter<"Institution"> | string | null
    isActive?: BoolFilter<"Institution"> | boolean
    password?: StringFilter<"Institution"> | string
    phone?: StringNullableFilter<"Institution"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Institution"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Institution"> | string | null
    primaryColor?: StringNullableFilter<"Institution"> | string | null
    secondaryColor?: StringNullableFilter<"Institution"> | string | null
    createdBy?: StringFilter<"Institution"> | string
    createdAt?: DateTimeFilter<"Institution"> | Date | string
    updatedAt?: DateTimeFilter<"Institution"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "username" | "email" | "name_department">

  export type InstitutionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    mayorName?: SortOrderInput | SortOrder
    mayorEmail?: SortOrderInput | SortOrder
    mayorPhone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    institutionType?: SortOrder
    customType?: SortOrderInput | SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InstitutionCountOrderByAggregateInput
    _avg?: InstitutionAvgOrderByAggregateInput
    _max?: InstitutionMaxOrderByAggregateInput
    _min?: InstitutionMinOrderByAggregateInput
    _sum?: InstitutionSumOrderByAggregateInput
  }

  export type InstitutionScalarWhereWithAggregatesInput = {
    AND?: InstitutionScalarWhereWithAggregatesInput | InstitutionScalarWhereWithAggregatesInput[]
    OR?: InstitutionScalarWhereWithAggregatesInput[]
    NOT?: InstitutionScalarWhereWithAggregatesInput | InstitutionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Institution"> | string
    name?: StringWithAggregatesFilter<"Institution"> | string
    department?: StringWithAggregatesFilter<"Institution"> | string
    region?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    population?: IntNullableWithAggregatesFilter<"Institution"> | number | null
    mayorName?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    mayorEmail?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    mayorPhone?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    address?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    website?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    isActive?: BoolWithAggregatesFilter<"Institution"> | boolean
    username?: StringWithAggregatesFilter<"Institution"> | string
    password?: StringWithAggregatesFilter<"Institution"> | string
    email?: StringWithAggregatesFilter<"Institution"> | string
    phone?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    institutionType?: EnumInstitutionTypeWithAggregatesFilter<"Institution"> | $Enums.InstitutionType
    customType?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    primaryColor?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    secondaryColor?: StringNullableWithAggregatesFilter<"Institution"> | string | null
    createdBy?: StringWithAggregatesFilter<"Institution"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Institution"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Institution"> | Date | string
  }

  export type MunicipalityWhereInput = {
    AND?: MunicipalityWhereInput | MunicipalityWhereInput[]
    OR?: MunicipalityWhereInput[]
    NOT?: MunicipalityWhereInput | MunicipalityWhereInput[]
    id?: StringFilter<"Municipality"> | string
    name?: StringFilter<"Municipality"> | string
    department?: StringFilter<"Municipality"> | string
    region?: StringNullableFilter<"Municipality"> | string | null
    population?: IntNullableFilter<"Municipality"> | number | null
    mayorName?: StringNullableFilter<"Municipality"> | string | null
    mayorEmail?: StringNullableFilter<"Municipality"> | string | null
    mayorPhone?: StringNullableFilter<"Municipality"> | string | null
    address?: StringNullableFilter<"Municipality"> | string | null
    website?: StringNullableFilter<"Municipality"> | string | null
    isActive?: BoolFilter<"Municipality"> | boolean
    username?: StringFilter<"Municipality"> | string
    password?: StringFilter<"Municipality"> | string
    email?: StringFilter<"Municipality"> | string
    phone?: StringNullableFilter<"Municipality"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Municipality"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Municipality"> | string | null
    primaryColor?: StringNullableFilter<"Municipality"> | string | null
    secondaryColor?: StringNullableFilter<"Municipality"> | string | null
    createdBy?: StringFilter<"Municipality"> | string
    createdAt?: DateTimeFilter<"Municipality"> | Date | string
    updatedAt?: DateTimeFilter<"Municipality"> | Date | string
    companies?: CompanyListRelationFilter
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type MunicipalityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    mayorName?: SortOrderInput | SortOrder
    mayorEmail?: SortOrderInput | SortOrder
    mayorPhone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    institutionType?: SortOrder
    customType?: SortOrderInput | SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companies?: CompanyOrderByRelationAggregateInput
    creator?: UserOrderByWithRelationInput
  }

  export type MunicipalityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    name_department?: MunicipalityNameDepartmentCompoundUniqueInput
    AND?: MunicipalityWhereInput | MunicipalityWhereInput[]
    OR?: MunicipalityWhereInput[]
    NOT?: MunicipalityWhereInput | MunicipalityWhereInput[]
    name?: StringFilter<"Municipality"> | string
    department?: StringFilter<"Municipality"> | string
    region?: StringNullableFilter<"Municipality"> | string | null
    population?: IntNullableFilter<"Municipality"> | number | null
    mayorName?: StringNullableFilter<"Municipality"> | string | null
    mayorEmail?: StringNullableFilter<"Municipality"> | string | null
    mayorPhone?: StringNullableFilter<"Municipality"> | string | null
    address?: StringNullableFilter<"Municipality"> | string | null
    website?: StringNullableFilter<"Municipality"> | string | null
    isActive?: BoolFilter<"Municipality"> | boolean
    password?: StringFilter<"Municipality"> | string
    phone?: StringNullableFilter<"Municipality"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Municipality"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Municipality"> | string | null
    primaryColor?: StringNullableFilter<"Municipality"> | string | null
    secondaryColor?: StringNullableFilter<"Municipality"> | string | null
    createdBy?: StringFilter<"Municipality"> | string
    createdAt?: DateTimeFilter<"Municipality"> | Date | string
    updatedAt?: DateTimeFilter<"Municipality"> | Date | string
    companies?: CompanyListRelationFilter
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "username" | "email" | "name_department">

  export type MunicipalityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    mayorName?: SortOrderInput | SortOrder
    mayorEmail?: SortOrderInput | SortOrder
    mayorPhone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    institutionType?: SortOrder
    customType?: SortOrderInput | SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MunicipalityCountOrderByAggregateInput
    _avg?: MunicipalityAvgOrderByAggregateInput
    _max?: MunicipalityMaxOrderByAggregateInput
    _min?: MunicipalityMinOrderByAggregateInput
    _sum?: MunicipalitySumOrderByAggregateInput
  }

  export type MunicipalityScalarWhereWithAggregatesInput = {
    AND?: MunicipalityScalarWhereWithAggregatesInput | MunicipalityScalarWhereWithAggregatesInput[]
    OR?: MunicipalityScalarWhereWithAggregatesInput[]
    NOT?: MunicipalityScalarWhereWithAggregatesInput | MunicipalityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Municipality"> | string
    name?: StringWithAggregatesFilter<"Municipality"> | string
    department?: StringWithAggregatesFilter<"Municipality"> | string
    region?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    population?: IntNullableWithAggregatesFilter<"Municipality"> | number | null
    mayorName?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    mayorEmail?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    mayorPhone?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    address?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    website?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    isActive?: BoolWithAggregatesFilter<"Municipality"> | boolean
    username?: StringWithAggregatesFilter<"Municipality"> | string
    password?: StringWithAggregatesFilter<"Municipality"> | string
    email?: StringWithAggregatesFilter<"Municipality"> | string
    phone?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    institutionType?: EnumInstitutionTypeWithAggregatesFilter<"Municipality"> | $Enums.InstitutionType
    customType?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    primaryColor?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    secondaryColor?: StringNullableWithAggregatesFilter<"Municipality"> | string | null
    createdBy?: StringWithAggregatesFilter<"Municipality"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Municipality"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Municipality"> | Date | string
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: StringFilter<"Company"> | string
    name?: StringFilter<"Company"> | string
    description?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    legalRepresentative?: StringNullableFilter<"Company"> | string | null
    businessSector?: StringNullableFilter<"Company"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Company"> | $Enums.CompanySize | null
    website?: StringNullableFilter<"Company"> | string | null
    email?: StringNullableFilter<"Company"> | string | null
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    foundedYear?: IntNullableFilter<"Company"> | number | null
    isActive?: BoolFilter<"Company"> | boolean
    username?: StringFilter<"Company"> | string
    password?: StringFilter<"Company"> | string
    loginEmail?: StringFilter<"Company"> | string
    municipalityId?: StringFilter<"Company"> | string
    createdBy?: StringFilter<"Company"> | string
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
    municipality?: XOR<MunicipalityRelationFilter, MunicipalityWhereInput>
    jobOffers?: JobOfferListRelationFilter
    profiles?: ProfileListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    legalRepresentative?: SortOrderInput | SortOrder
    businessSector?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    foundedYear?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    loginEmail?: SortOrder
    municipalityId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UserOrderByWithRelationInput
    municipality?: MunicipalityOrderByWithRelationInput
    jobOffers?: JobOfferOrderByRelationAggregateInput
    profiles?: ProfileOrderByRelationAggregateInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    loginEmail?: string
    name_municipalityId?: CompanyNameMunicipalityIdCompoundUniqueInput
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    name?: StringFilter<"Company"> | string
    description?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    legalRepresentative?: StringNullableFilter<"Company"> | string | null
    businessSector?: StringNullableFilter<"Company"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Company"> | $Enums.CompanySize | null
    website?: StringNullableFilter<"Company"> | string | null
    email?: StringNullableFilter<"Company"> | string | null
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    foundedYear?: IntNullableFilter<"Company"> | number | null
    isActive?: BoolFilter<"Company"> | boolean
    password?: StringFilter<"Company"> | string
    municipalityId?: StringFilter<"Company"> | string
    createdBy?: StringFilter<"Company"> | string
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
    municipality?: XOR<MunicipalityRelationFilter, MunicipalityWhereInput>
    jobOffers?: JobOfferListRelationFilter
    profiles?: ProfileListRelationFilter
  }, "id" | "username" | "loginEmail" | "name_municipalityId" | "username" | "loginEmail">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    legalRepresentative?: SortOrderInput | SortOrder
    businessSector?: SortOrderInput | SortOrder
    companySize?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    foundedYear?: SortOrderInput | SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    loginEmail?: SortOrder
    municipalityId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Company"> | string
    name?: StringWithAggregatesFilter<"Company"> | string
    description?: StringNullableWithAggregatesFilter<"Company"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"Company"> | string | null
    legalRepresentative?: StringNullableWithAggregatesFilter<"Company"> | string | null
    businessSector?: StringNullableWithAggregatesFilter<"Company"> | string | null
    companySize?: EnumCompanySizeNullableWithAggregatesFilter<"Company"> | $Enums.CompanySize | null
    website?: StringNullableWithAggregatesFilter<"Company"> | string | null
    email?: StringNullableWithAggregatesFilter<"Company"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Company"> | string | null
    address?: StringNullableWithAggregatesFilter<"Company"> | string | null
    foundedYear?: IntNullableWithAggregatesFilter<"Company"> | number | null
    isActive?: BoolWithAggregatesFilter<"Company"> | boolean
    username?: StringWithAggregatesFilter<"Company"> | string
    password?: StringWithAggregatesFilter<"Company"> | string
    loginEmail?: StringWithAggregatesFilter<"Company"> | string
    municipalityId?: StringWithAggregatesFilter<"Company"> | string
    createdBy?: StringWithAggregatesFilter<"Company"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    id?: StringFilter<"Contact"> | string
    userId?: StringFilter<"Contact"> | string
    contactId?: StringFilter<"Contact"> | string
    status?: EnumContactStatusFilter<"Contact"> | $Enums.ContactStatus
    requestMessage?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
    contact?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type ContactOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    status?: SortOrder
    requestMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: ProfileOrderByWithRelationInput
    contact?: ProfileOrderByWithRelationInput
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_contactId?: ContactUserIdContactIdCompoundUniqueInput
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    userId?: StringFilter<"Contact"> | string
    contactId?: StringFilter<"Contact"> | string
    status?: EnumContactStatusFilter<"Contact"> | $Enums.ContactStatus
    requestMessage?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    user?: XOR<ProfileRelationFilter, ProfileWhereInput>
    contact?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id" | "userId_contactId">

  export type ContactOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    status?: SortOrder
    requestMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ContactCountOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Contact"> | string
    userId?: StringWithAggregatesFilter<"Contact"> | string
    contactId?: StringWithAggregatesFilter<"Contact"> | string
    status?: EnumContactStatusWithAggregatesFilter<"Contact"> | $Enums.ContactStatus
    requestMessage?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
  }

  export type ConversationWhereInput = {
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    id?: StringFilter<"Conversation"> | string
    participants?: StringNullableListFilter<"Conversation">
    lastMessageContent?: StringNullableFilter<"Conversation"> | string | null
    lastMessageTime?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    unreadCount?: IntFilter<"Conversation"> | number
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeFilter<"Conversation"> | Date | string
    messages?: MessageListRelationFilter
  }

  export type ConversationOrderByWithRelationInput = {
    id?: SortOrder
    participants?: SortOrder
    lastMessageContent?: SortOrderInput | SortOrder
    lastMessageTime?: SortOrderInput | SortOrder
    unreadCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    messages?: MessageOrderByRelationAggregateInput
  }

  export type ConversationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    participants?: string[]
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    lastMessageContent?: StringNullableFilter<"Conversation"> | string | null
    lastMessageTime?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    unreadCount?: IntFilter<"Conversation"> | number
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeFilter<"Conversation"> | Date | string
    messages?: MessageListRelationFilter
  }, "id" | "participants">

  export type ConversationOrderByWithAggregationInput = {
    id?: SortOrder
    participants?: SortOrder
    lastMessageContent?: SortOrderInput | SortOrder
    lastMessageTime?: SortOrderInput | SortOrder
    unreadCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConversationCountOrderByAggregateInput
    _avg?: ConversationAvgOrderByAggregateInput
    _max?: ConversationMaxOrderByAggregateInput
    _min?: ConversationMinOrderByAggregateInput
    _sum?: ConversationSumOrderByAggregateInput
  }

  export type ConversationScalarWhereWithAggregatesInput = {
    AND?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    OR?: ConversationScalarWhereWithAggregatesInput[]
    NOT?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Conversation"> | string
    participants?: StringNullableListFilter<"Conversation">
    lastMessageContent?: StringNullableWithAggregatesFilter<"Conversation"> | string | null
    lastMessageTime?: DateTimeNullableWithAggregatesFilter<"Conversation"> | Date | string | null
    unreadCount?: IntWithAggregatesFilter<"Conversation"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Conversation"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    conversation?: XOR<ConversationRelationFilter, ConversationWhereInput>
    sender?: XOR<ProfileRelationFilter, ProfileWhereInput>
    receiver?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    conversation?: ConversationOrderByWithRelationInput
    sender?: ProfileOrderByWithRelationInput
    receiver?: ProfileOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    conversation?: XOR<ConversationRelationFilter, ConversationWhereInput>
    sender?: XOR<ProfileRelationFilter, ProfileWhereInput>
    receiver?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    conversationId?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    receiverId?: StringWithAggregatesFilter<"Message"> | string
    content?: StringWithAggregatesFilter<"Message"> | string
    messageType?: EnumMessageTypeWithAggregatesFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusWithAggregatesFilter<"Message"> | $Enums.MessageStatus
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    readAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
  }

  export type LessonResourceWhereInput = {
    AND?: LessonResourceWhereInput | LessonResourceWhereInput[]
    OR?: LessonResourceWhereInput[]
    NOT?: LessonResourceWhereInput | LessonResourceWhereInput[]
    id?: StringFilter<"LessonResource"> | string
    lessonId?: StringFilter<"LessonResource"> | string
    title?: StringFilter<"LessonResource"> | string
    description?: StringNullableFilter<"LessonResource"> | string | null
    type?: EnumResourceTypeFilter<"LessonResource"> | $Enums.ResourceType
    url?: StringFilter<"LessonResource"> | string
    filePath?: StringNullableFilter<"LessonResource"> | string | null
    fileSize?: IntNullableFilter<"LessonResource"> | number | null
    orderIndex?: IntFilter<"LessonResource"> | number
    isDownloadable?: BoolFilter<"LessonResource"> | boolean
    createdAt?: DateTimeFilter<"LessonResource"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
  }

  export type LessonResourceOrderByWithRelationInput = {
    id?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    url?: SortOrder
    filePath?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    isDownloadable?: SortOrder
    createdAt?: SortOrder
    lesson?: LessonOrderByWithRelationInput
  }

  export type LessonResourceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LessonResourceWhereInput | LessonResourceWhereInput[]
    OR?: LessonResourceWhereInput[]
    NOT?: LessonResourceWhereInput | LessonResourceWhereInput[]
    lessonId?: StringFilter<"LessonResource"> | string
    title?: StringFilter<"LessonResource"> | string
    description?: StringNullableFilter<"LessonResource"> | string | null
    type?: EnumResourceTypeFilter<"LessonResource"> | $Enums.ResourceType
    url?: StringFilter<"LessonResource"> | string
    filePath?: StringNullableFilter<"LessonResource"> | string | null
    fileSize?: IntNullableFilter<"LessonResource"> | number | null
    orderIndex?: IntFilter<"LessonResource"> | number
    isDownloadable?: BoolFilter<"LessonResource"> | boolean
    createdAt?: DateTimeFilter<"LessonResource"> | Date | string
    lesson?: XOR<LessonRelationFilter, LessonWhereInput>
  }, "id">

  export type LessonResourceOrderByWithAggregationInput = {
    id?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    url?: SortOrder
    filePath?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    orderIndex?: SortOrder
    isDownloadable?: SortOrder
    createdAt?: SortOrder
    _count?: LessonResourceCountOrderByAggregateInput
    _avg?: LessonResourceAvgOrderByAggregateInput
    _max?: LessonResourceMaxOrderByAggregateInput
    _min?: LessonResourceMinOrderByAggregateInput
    _sum?: LessonResourceSumOrderByAggregateInput
  }

  export type LessonResourceScalarWhereWithAggregatesInput = {
    AND?: LessonResourceScalarWhereWithAggregatesInput | LessonResourceScalarWhereWithAggregatesInput[]
    OR?: LessonResourceScalarWhereWithAggregatesInput[]
    NOT?: LessonResourceScalarWhereWithAggregatesInput | LessonResourceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LessonResource"> | string
    lessonId?: StringWithAggregatesFilter<"LessonResource"> | string
    title?: StringWithAggregatesFilter<"LessonResource"> | string
    description?: StringNullableWithAggregatesFilter<"LessonResource"> | string | null
    type?: EnumResourceTypeWithAggregatesFilter<"LessonResource"> | $Enums.ResourceType
    url?: StringWithAggregatesFilter<"LessonResource"> | string
    filePath?: StringNullableWithAggregatesFilter<"LessonResource"> | string | null
    fileSize?: IntNullableWithAggregatesFilter<"LessonResource"> | number | null
    orderIndex?: IntWithAggregatesFilter<"LessonResource"> | number
    isDownloadable?: BoolWithAggregatesFilter<"LessonResource"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"LessonResource"> | Date | string
  }

  export type ModuleCertificateWhereInput = {
    AND?: ModuleCertificateWhereInput | ModuleCertificateWhereInput[]
    OR?: ModuleCertificateWhereInput[]
    NOT?: ModuleCertificateWhereInput | ModuleCertificateWhereInput[]
    id?: StringFilter<"ModuleCertificate"> | string
    moduleId?: StringFilter<"ModuleCertificate"> | string
    studentId?: StringFilter<"ModuleCertificate"> | string
    certificateUrl?: StringFilter<"ModuleCertificate"> | string
    issuedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
    grade?: IntNullableFilter<"ModuleCertificate"> | number | null
    completedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
    module?: XOR<CourseModuleRelationFilter, CourseModuleWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type ModuleCertificateOrderByWithRelationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    studentId?: SortOrder
    certificateUrl?: SortOrder
    issuedAt?: SortOrder
    grade?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    module?: CourseModuleOrderByWithRelationInput
    student?: ProfileOrderByWithRelationInput
  }

  export type ModuleCertificateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    moduleId_studentId?: ModuleCertificateModuleIdStudentIdCompoundUniqueInput
    AND?: ModuleCertificateWhereInput | ModuleCertificateWhereInput[]
    OR?: ModuleCertificateWhereInput[]
    NOT?: ModuleCertificateWhereInput | ModuleCertificateWhereInput[]
    moduleId?: StringFilter<"ModuleCertificate"> | string
    studentId?: StringFilter<"ModuleCertificate"> | string
    certificateUrl?: StringFilter<"ModuleCertificate"> | string
    issuedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
    grade?: IntNullableFilter<"ModuleCertificate"> | number | null
    completedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
    module?: XOR<CourseModuleRelationFilter, CourseModuleWhereInput>
    student?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id" | "moduleId_studentId">

  export type ModuleCertificateOrderByWithAggregationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    studentId?: SortOrder
    certificateUrl?: SortOrder
    issuedAt?: SortOrder
    grade?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    _count?: ModuleCertificateCountOrderByAggregateInput
    _avg?: ModuleCertificateAvgOrderByAggregateInput
    _max?: ModuleCertificateMaxOrderByAggregateInput
    _min?: ModuleCertificateMinOrderByAggregateInput
    _sum?: ModuleCertificateSumOrderByAggregateInput
  }

  export type ModuleCertificateScalarWhereWithAggregatesInput = {
    AND?: ModuleCertificateScalarWhereWithAggregatesInput | ModuleCertificateScalarWhereWithAggregatesInput[]
    OR?: ModuleCertificateScalarWhereWithAggregatesInput[]
    NOT?: ModuleCertificateScalarWhereWithAggregatesInput | ModuleCertificateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ModuleCertificate"> | string
    moduleId?: StringWithAggregatesFilter<"ModuleCertificate"> | string
    studentId?: StringWithAggregatesFilter<"ModuleCertificate"> | string
    certificateUrl?: StringWithAggregatesFilter<"ModuleCertificate"> | string
    issuedAt?: DateTimeWithAggregatesFilter<"ModuleCertificate"> | Date | string
    grade?: IntNullableWithAggregatesFilter<"ModuleCertificate"> | number | null
    completedAt?: DateTimeWithAggregatesFilter<"ModuleCertificate"> | Date | string
  }

  export type ProfileCreateInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type ProfileCreateManyInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
  }

  export type ProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobOfferCreateInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationCreateNestedManyWithoutJobOfferInput
    company: CompanyCreateNestedOneWithoutJobOffersInput
    jobQuestions?: JobQuestionCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferUncheckedCreateInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationUncheckedCreateNestedManyWithoutJobOfferInput
    jobQuestions?: JobQuestionUncheckedCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUpdateManyWithoutJobOfferNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobOffersNestedInput
    jobQuestions?: JobQuestionUpdateManyWithoutJobOfferNestedInput
  }

  export type JobOfferUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUncheckedUpdateManyWithoutJobOfferNestedInput
    jobQuestions?: JobQuestionUncheckedUpdateManyWithoutJobOfferNestedInput
  }

  export type JobOfferCreateManyInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobOfferUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobOfferUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobQuestionCreateInput = {
    id?: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutQuestionInput
    jobOffer: JobOfferCreateNestedOneWithoutJobQuestionsInput
  }

  export type JobQuestionUncheckedCreateInput = {
    id?: string
    jobOfferId: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutQuestionInput
  }

  export type JobQuestionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutQuestionNestedInput
    jobOffer?: JobOfferUpdateOneRequiredWithoutJobQuestionsNestedInput
  }

  export type JobQuestionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutQuestionNestedInput
  }

  export type JobQuestionCreateManyInput = {
    id?: string
    jobOfferId: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
  }

  export type JobQuestionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type JobQuestionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type JobApplicationCreateInput = {
    id?: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    applicant: ProfileCreateNestedOneWithoutJobApplicationsInput
    jobOffer: JobOfferCreateNestedOneWithoutApplicationsInput
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUncheckedCreateInput = {
    id?: string
    applicantId: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    applicant?: ProfileUpdateOneRequiredWithoutJobApplicationsNestedInput
    jobOffer?: JobOfferUpdateOneRequiredWithoutApplicationsNestedInput
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationCreateManyInput = {
    id?: string
    applicantId: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
  }

  export type JobApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobQuestionAnswerCreateInput = {
    id?: string
    answer: string
    application: JobApplicationCreateNestedOneWithoutQuestionAnswersInput
    question: JobQuestionCreateNestedOneWithoutQuestionAnswersInput
  }

  export type JobQuestionAnswerUncheckedCreateInput = {
    id?: string
    applicationId: string
    questionId: string
    answer: string
  }

  export type JobQuestionAnswerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    application?: JobApplicationUpdateOneRequiredWithoutQuestionAnswersNestedInput
    question?: JobQuestionUpdateOneRequiredWithoutQuestionAnswersNestedInput
  }

  export type JobQuestionAnswerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobQuestionAnswerCreateManyInput = {
    id?: string
    applicationId: string
    questionId: string
    answer: string
  }

  export type JobQuestionAnswerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobQuestionAnswerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobApplicationMessageCreateInput = {
    id?: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
    application: JobApplicationCreateNestedOneWithoutMessagesInput
  }

  export type JobApplicationMessageUncheckedCreateInput = {
    id?: string
    applicationId: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type JobApplicationMessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    application?: JobApplicationUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type JobApplicationMessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobApplicationMessageCreateManyInput = {
    id?: string
    applicationId: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type JobApplicationMessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobApplicationMessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CourseCreateInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentCreateNestedManyWithoutCourseInput
    modules?: CourseModuleCreateNestedManyWithoutCourseInput
    instructor?: ProfileCreateNestedOneWithoutInstructedCoursesInput
    quizzes?: QuizCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateUncheckedCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput
    modules?: CourseModuleUncheckedCreateNestedManyWithoutCourseInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUpdateManyWithoutCourseNestedInput
    instructor?: ProfileUpdateOneWithoutInstructedCoursesNestedInput
    quizzes?: QuizUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUncheckedUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUncheckedUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type CourseCreateManyInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
  }

  export type CourseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CourseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CourseModuleCreateInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    course: CourseCreateNestedOneWithoutModulesInput
    lessons?: LessonCreateNestedManyWithoutModuleInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleUncheckedCreateInput = {
    id?: string
    courseId: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    lessons?: LessonUncheckedCreateNestedManyWithoutModuleInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    course?: CourseUpdateOneRequiredWithoutModulesNestedInput
    lessons?: LessonUpdateManyWithoutModuleNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    lessons?: LessonUncheckedUpdateManyWithoutModuleNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleCreateManyInput = {
    id?: string
    courseId: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
  }

  export type CourseModuleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CourseModuleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LessonCreateInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type LessonCreateManyInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
  }

  export type LessonUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
  }

  export type LessonUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseEnrollmentCreateInput = {
    id?: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course: CourseCreateNestedOneWithoutEnrollmentsInput
    student: ProfileCreateNestedOneWithoutCourseEnrollmentsInput
    lessonProgress?: LessonProgressCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUncheckedCreateInput = {
    id?: string
    studentId: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course?: CourseUpdateOneRequiredWithoutEnrollmentsNestedInput
    student?: ProfileUpdateOneRequiredWithoutCourseEnrollmentsNestedInput
    lessonProgress?: LessonProgressUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentCreateManyInput = {
    id?: string
    studentId: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseEnrollmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseEnrollmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type LessonProgressCreateInput = {
    id?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
    enrollment: CourseEnrollmentCreateNestedOneWithoutLessonProgressInput
    lesson: LessonCreateNestedOneWithoutProgressInput
  }

  export type LessonProgressUncheckedCreateInput = {
    id?: string
    enrollmentId: string
    lessonId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type LessonProgressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    enrollment?: CourseEnrollmentUpdateOneRequiredWithoutLessonProgressNestedInput
    lesson?: LessonUpdateOneRequiredWithoutProgressNestedInput
  }

  export type LessonProgressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LessonProgressCreateManyInput = {
    id?: string
    enrollmentId: string
    lessonId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type LessonProgressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LessonProgressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type QuizCreateInput = {
    id?: string
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionCreateNestedManyWithoutQuizInput
    course?: CourseCreateNestedOneWithoutQuizzesInput
    lesson?: LessonCreateNestedOneWithoutQuizzesInput
  }

  export type QuizUncheckedCreateInput = {
    id?: string
    courseId?: string | null
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptUncheckedCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionUncheckedCreateNestedManyWithoutQuizInput
  }

  export type QuizUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUpdateManyWithoutQuizNestedInput
    course?: CourseUpdateOneWithoutQuizzesNestedInput
    lesson?: LessonUpdateOneWithoutQuizzesNestedInput
  }

  export type QuizUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUncheckedUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type QuizCreateManyInput = {
    id?: string
    courseId?: string | null
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
  }

  export type QuizUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type QuizUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type QuizQuestionCreateInput = {
    id?: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
    answers?: QuizAnswerCreateNestedManyWithoutQuestionInput
    quiz: QuizCreateNestedOneWithoutQuestionsInput
  }

  export type QuizQuestionUncheckedCreateInput = {
    id?: string
    quizId: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutQuestionInput
  }

  export type QuizQuestionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutQuestionNestedInput
    quiz?: QuizUpdateOneRequiredWithoutQuestionsNestedInput
  }

  export type QuizQuestionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quizId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutQuestionNestedInput
  }

  export type QuizQuestionCreateManyInput = {
    id?: string
    quizId: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
  }

  export type QuizQuestionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type QuizQuestionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quizId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAttemptCreateInput = {
    id?: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerCreateNestedManyWithoutAttemptInput
    enrollment?: CourseEnrollmentCreateNestedOneWithoutQuizAttemptsInput
    quiz: QuizCreateNestedOneWithoutAttemptsInput
    student: ProfileCreateNestedOneWithoutQuizAttemptsInput
  }

  export type QuizAttemptUncheckedCreateInput = {
    id?: string
    enrollmentId?: string | null
    quizId: string
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutAttemptInput
  }

  export type QuizAttemptUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutAttemptNestedInput
    enrollment?: CourseEnrollmentUpdateOneWithoutQuizAttemptsNestedInput
    quiz?: QuizUpdateOneRequiredWithoutAttemptsNestedInput
    student?: ProfileUpdateOneRequiredWithoutQuizAttemptsNestedInput
  }

  export type QuizAttemptUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    quizId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutAttemptNestedInput
  }

  export type QuizAttemptCreateManyInput = {
    id?: string
    enrollmentId?: string | null
    quizId: string
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
  }

  export type QuizAttemptUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAttemptUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    quizId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerCreateInput = {
    id?: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
    attempt: QuizAttemptCreateNestedOneWithoutAnswersInput
    question: QuizQuestionCreateNestedOneWithoutAnswersInput
  }

  export type QuizAnswerUncheckedCreateInput = {
    id?: string
    attemptId: string
    questionId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
    attempt?: QuizAttemptUpdateOneRequiredWithoutAnswersNestedInput
    question?: QuizQuestionUpdateOneRequiredWithoutAnswersNestedInput
  }

  export type QuizAnswerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    attemptId?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerCreateManyInput = {
    id?: string
    attemptId: string
    questionId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    attemptId?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type CertificateCreateInput = {
    id?: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
    course: CourseCreateNestedOneWithoutCertificatesInput
    user: ProfileCreateNestedOneWithoutCertificatesInput
  }

  export type CertificateUncheckedCreateInput = {
    id?: string
    userId: string
    courseId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CertificateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
    course?: CourseUpdateOneRequiredWithoutCertificatesNestedInput
    user?: ProfileUpdateOneRequiredWithoutCertificatesNestedInput
  }

  export type CertificateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CertificateCreateManyInput = {
    id?: string
    userId: string
    courseId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CertificateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CertificateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StudentNoteCreateInput = {
    id?: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutNotesInput
    user: ProfileCreateNestedOneWithoutStudentNotesInput
  }

  export type StudentNoteUncheckedCreateInput = {
    id?: string
    userId: string
    lessonId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudentNoteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutNotesNestedInput
    user?: ProfileUpdateOneRequiredWithoutStudentNotesNestedInput
  }

  export type StudentNoteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudentNoteCreateManyInput = {
    id?: string
    userId: string
    lessonId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudentNoteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudentNoteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscussionCreateInput = {
    id?: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutDiscussionsInput
    parent?: DiscussionCreateNestedOneWithoutRepliesInput
    replies?: DiscussionCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutDiscussionsInput
  }

  export type DiscussionUncheckedCreateInput = {
    id?: string
    lessonId: string
    userId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: DiscussionUncheckedCreateNestedManyWithoutParentInput
  }

  export type DiscussionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutDiscussionsNestedInput
    parent?: DiscussionUpdateOneWithoutRepliesNestedInput
    replies?: DiscussionUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutDiscussionsNestedInput
  }

  export type DiscussionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: DiscussionUncheckedUpdateManyWithoutParentNestedInput
  }

  export type DiscussionCreateManyInput = {
    id?: string
    lessonId: string
    userId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DiscussionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscussionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EntrepreneurshipCreateInput = {
    id?: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    businessPlan?: BusinessPlanCreateNestedOneWithoutEntrepreneurshipInput
    owner: ProfileCreateNestedOneWithoutEntrepreneurshipsInput
  }

  export type EntrepreneurshipUncheckedCreateInput = {
    id?: string
    ownerId: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    businessPlan?: BusinessPlanUncheckedCreateNestedOneWithoutEntrepreneurshipInput
  }

  export type EntrepreneurshipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessPlan?: BusinessPlanUpdateOneWithoutEntrepreneurshipNestedInput
    owner?: ProfileUpdateOneRequiredWithoutEntrepreneurshipsNestedInput
  }

  export type EntrepreneurshipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessPlan?: BusinessPlanUncheckedUpdateOneWithoutEntrepreneurshipNestedInput
  }

  export type EntrepreneurshipCreateManyInput = {
    id?: string
    ownerId: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EntrepreneurshipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EntrepreneurshipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPlanCreateInput = {
    id?: string
    executiveSummary?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    marketAnalysis?: string | null
    targetMarket?: string | null
    competitiveAnalysis?: string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanCreaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: string | null
    pricingStrategy?: string | null
    salesStrategy?: string | null
    initialInvestment?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: number | null
    roi?: Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: string | null
    mitigationStrategies?: BusinessPlanCreatemitigationStrategiesInput | string[]
    operationalPlan?: string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: boolean
    lastSection?: string | null
    completionPercentage?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    entrepreneurship: EntrepreneurshipCreateNestedOneWithoutBusinessPlanInput
  }

  export type BusinessPlanUncheckedCreateInput = {
    id?: string
    entrepreneurshipId: string
    executiveSummary?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    marketAnalysis?: string | null
    targetMarket?: string | null
    competitiveAnalysis?: string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanCreaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: string | null
    pricingStrategy?: string | null
    salesStrategy?: string | null
    initialInvestment?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: number | null
    roi?: Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: string | null
    mitigationStrategies?: BusinessPlanCreatemitigationStrategiesInput | string[]
    operationalPlan?: string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: boolean
    lastSection?: string | null
    completionPercentage?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessPlanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    entrepreneurship?: EntrepreneurshipUpdateOneRequiredWithoutBusinessPlanNestedInput
  }

  export type BusinessPlanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entrepreneurshipId?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPlanCreateManyInput = {
    id?: string
    entrepreneurshipId: string
    executiveSummary?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    marketAnalysis?: string | null
    targetMarket?: string | null
    competitiveAnalysis?: string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanCreaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: string | null
    pricingStrategy?: string | null
    salesStrategy?: string | null
    initialInvestment?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: number | null
    roi?: Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: string | null
    mitigationStrategies?: BusinessPlanCreatemitigationStrategiesInput | string[]
    operationalPlan?: string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: boolean
    lastSection?: string | null
    completionPercentage?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    entrepreneurshipId?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsArticleCreateInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    author: ProfileCreateNestedOneWithoutNewsArticlesInput
    comments?: NewsCommentCreateNestedManyWithoutNewsInput
  }

  export type NewsArticleUncheckedCreateInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorId: string
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    comments?: NewsCommentUncheckedCreateNestedManyWithoutNewsInput
  }

  export type NewsArticleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: ProfileUpdateOneRequiredWithoutNewsArticlesNestedInput
    comments?: NewsCommentUpdateManyWithoutNewsNestedInput
  }

  export type NewsArticleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NewsCommentUncheckedUpdateManyWithoutNewsNestedInput
  }

  export type NewsArticleCreateManyInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorId: string
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsArticleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsArticleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentCreateInput = {
    id?: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    news: NewsArticleCreateNestedOneWithoutCommentsInput
    parent?: NewsCommentCreateNestedOneWithoutRepliesInput
    replies?: NewsCommentCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutNewsCommentsInput
  }

  export type NewsCommentUncheckedCreateInput = {
    id?: string
    newsId: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: NewsCommentUncheckedCreateNestedManyWithoutParentInput
  }

  export type NewsCommentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    news?: NewsArticleUpdateOneRequiredWithoutCommentsNestedInput
    parent?: NewsCommentUpdateOneWithoutRepliesNestedInput
    replies?: NewsCommentUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutNewsCommentsNestedInput
  }

  export type NewsCommentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: NewsCommentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type NewsCommentCreateManyInput = {
    id?: string
    newsId: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsCommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourceCreateInput = {
    id?: string
    title: string
    description: string
    type: string
    category: string
    format: string
    downloadUrl?: string | null
    externalUrl?: string | null
    thumbnail: string
    author: string
    publishedDate: Date | string
    downloads?: number
    rating?: number
    tags?: ResourceCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResourceUncheckedCreateInput = {
    id?: string
    title: string
    description: string
    type: string
    category: string
    format: string
    downloadUrl?: string | null
    externalUrl?: string | null
    thumbnail: string
    author: string
    publishedDate: Date | string
    downloads?: number
    rating?: number
    tags?: ResourceCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResourceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    format?: StringFieldUpdateOperationsInput | string
    downloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    externalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    publishedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    downloads?: IntFieldUpdateOperationsInput | number
    rating?: FloatFieldUpdateOperationsInput | number
    tags?: ResourceUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    format?: StringFieldUpdateOperationsInput | string
    downloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    externalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    publishedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    downloads?: IntFieldUpdateOperationsInput | number
    rating?: FloatFieldUpdateOperationsInput | number
    tags?: ResourceUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourceCreateManyInput = {
    id?: string
    title: string
    description: string
    type: string
    category: string
    format: string
    downloadUrl?: string | null
    externalUrl?: string | null
    thumbnail: string
    author: string
    publishedDate: Date | string
    downloads?: number
    rating?: number
    tags?: ResourceCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResourceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    format?: StringFieldUpdateOperationsInput | string
    downloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    externalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    publishedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    downloads?: IntFieldUpdateOperationsInput | number
    rating?: FloatFieldUpdateOperationsInput | number
    tags?: ResourceUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    format?: StringFieldUpdateOperationsInput | string
    downloadUrl?: NullableStringFieldUpdateOperationsInput | string | null
    externalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    publishedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    downloads?: IntFieldUpdateOperationsInput | number
    rating?: FloatFieldUpdateOperationsInput | number
    tags?: ResourceUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyUncheckedCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionUncheckedCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityUncheckedCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUncheckedUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUncheckedUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUncheckedUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalApiKeyCreateInput = {
    id?: string
    key: string
    name: string
    active?: boolean
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ExternalApiKeyUncheckedCreateInput = {
    id?: string
    key: string
    name: string
    active?: boolean
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ExternalApiKeyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExternalApiKeyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExternalApiKeyCreateManyInput = {
    id?: string
    key: string
    name: string
    active?: boolean
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ExternalApiKeyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ExternalApiKeyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitutionCreateInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedInstitutionsInput
  }

  export type InstitutionUncheckedCreateInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InstitutionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedInstitutionsNestedInput
  }

  export type InstitutionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionCreateManyInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InstitutionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MunicipalityCreateInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companies?: CompanyCreateNestedManyWithoutMunicipalityInput
    creator: UserCreateNestedOneWithoutCreatedMunicipalitiesInput
  }

  export type MunicipalityUncheckedCreateInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    companies?: CompanyUncheckedCreateNestedManyWithoutMunicipalityInput
  }

  export type MunicipalityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companies?: CompanyUpdateManyWithoutMunicipalityNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedMunicipalitiesNestedInput
  }

  export type MunicipalityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companies?: CompanyUncheckedUpdateManyWithoutMunicipalityNestedInput
  }

  export type MunicipalityCreateManyInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MunicipalityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MunicipalityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedCompaniesInput
    municipality: MunicipalityCreateNestedOneWithoutCompaniesInput
    jobOffers?: JobOfferCreateNestedManyWithoutCompanyInput
    profiles?: ProfileCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    jobOffers?: JobOfferUncheckedCreateNestedManyWithoutCompanyInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedCompaniesNestedInput
    municipality?: MunicipalityUpdateOneRequiredWithoutCompaniesNestedInput
    jobOffers?: JobOfferUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobOffers?: JobOfferUncheckedUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompanyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactCreateInput = {
    id?: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: ProfileCreateNestedOneWithoutContactsInput
    contact: ProfileCreateNestedOneWithoutContactOfInput
  }

  export type ContactUncheckedCreateInput = {
    id?: string
    userId: string
    contactId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: ProfileUpdateOneRequiredWithoutContactsNestedInput
    contact?: ProfileUpdateOneRequiredWithoutContactOfNestedInput
  }

  export type ContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactCreateManyInput = {
    id?: string
    userId: string
    contactId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationCreateInput = {
    id?: string
    participants?: ConversationCreateparticipantsInput | string[]
    lastMessageContent?: string | null
    lastMessageTime?: Date | string | null
    unreadCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateInput = {
    id?: string
    participants?: ConversationCreateparticipantsInput | string[]
    lastMessageContent?: string | null
    lastMessageTime?: Date | string | null
    unreadCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationCreateManyInput = {
    id?: string
    participants?: ConversationCreateparticipantsInput | string[]
    lastMessageContent?: string | null
    lastMessageTime?: Date | string | null
    unreadCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConversationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    id?: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    sender: ProfileCreateNestedOneWithoutSentMessagesInput
    receiver: ProfileCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    conversationId: string
    senderId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    sender?: ProfileUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: ProfileUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageCreateManyInput = {
    id?: string
    conversationId: string
    senderId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LessonResourceCreateInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
    lesson: LessonCreateNestedOneWithoutResourcesInput
  }

  export type LessonResourceUncheckedCreateInput = {
    id?: string
    lessonId: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
  }

  export type LessonResourceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutResourcesNestedInput
  }

  export type LessonResourceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonResourceCreateManyInput = {
    id?: string
    lessonId: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
  }

  export type LessonResourceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonResourceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateCreateInput = {
    id?: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
    module: CourseModuleCreateNestedOneWithoutModuleCertificatesInput
    student: ProfileCreateNestedOneWithoutModuleCertificatesInput
  }

  export type ModuleCertificateUncheckedCreateInput = {
    id?: string
    moduleId: string
    studentId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type ModuleCertificateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    module?: CourseModuleUpdateOneRequiredWithoutModuleCertificatesNestedInput
    student?: ProfileUpdateOneRequiredWithoutModuleCertificatesNestedInput
  }

  export type ModuleCertificateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateCreateManyInput = {
    id?: string
    moduleId: string
    studentId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type ModuleCertificateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumEducationLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EducationLevel | EnumEducationLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEducationLevelNullableFilter<$PrismaModel> | $Enums.EducationLevel | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumCompanySizeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySize | EnumCompanySizeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeNullableFilter<$PrismaModel> | $Enums.CompanySize | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type ContactListRelationFilter = {
    every?: ContactWhereInput
    some?: ContactWhereInput
    none?: ContactWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type CertificateListRelationFilter = {
    every?: CertificateWhereInput
    some?: CertificateWhereInput
    none?: CertificateWhereInput
  }

  export type CourseEnrollmentListRelationFilter = {
    every?: CourseEnrollmentWhereInput
    some?: CourseEnrollmentWhereInput
    none?: CourseEnrollmentWhereInput
  }

  export type CourseListRelationFilter = {
    every?: CourseWhereInput
    some?: CourseWhereInput
    none?: CourseWhereInput
  }

  export type DiscussionListRelationFilter = {
    every?: DiscussionWhereInput
    some?: DiscussionWhereInput
    none?: DiscussionWhereInput
  }

  export type EntrepreneurshipListRelationFilter = {
    every?: EntrepreneurshipWhereInput
    some?: EntrepreneurshipWhereInput
    none?: EntrepreneurshipWhereInput
  }

  export type JobApplicationListRelationFilter = {
    every?: JobApplicationWhereInput
    some?: JobApplicationWhereInput
    none?: JobApplicationWhereInput
  }

  export type NewsArticleListRelationFilter = {
    every?: NewsArticleWhereInput
    some?: NewsArticleWhereInput
    none?: NewsArticleWhereInput
  }

  export type NewsCommentListRelationFilter = {
    every?: NewsCommentWhereInput
    some?: NewsCommentWhereInput
    none?: NewsCommentWhereInput
  }

  export type CompanyNullableRelationFilter = {
    is?: CompanyWhereInput | null
    isNot?: CompanyWhereInput | null
  }

  export type QuizAttemptListRelationFilter = {
    every?: QuizAttemptWhereInput
    some?: QuizAttemptWhereInput
    none?: QuizAttemptWhereInput
  }

  export type StudentNoteListRelationFilter = {
    every?: StudentNoteWhereInput
    some?: StudentNoteWhereInput
    none?: StudentNoteWhereInput
  }

  export type ModuleCertificateListRelationFilter = {
    every?: ModuleCertificateWhereInput
    some?: ModuleCertificateWhereInput
    none?: ModuleCertificateWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CertificateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CourseEnrollmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CourseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscussionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EntrepreneurshipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NewsArticleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NewsCommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuizAttemptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StudentNoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModuleCertificateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    avatarUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    active?: SortOrder
    status?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    country?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    educationLevel?: SortOrder
    currentInstitution?: SortOrder
    graduationYear?: SortOrder
    isStudying?: SortOrder
    educationHistory?: SortOrder
    currentDegree?: SortOrder
    universityName?: SortOrder
    universityStartDate?: SortOrder
    universityEndDate?: SortOrder
    universityStatus?: SortOrder
    gpa?: SortOrder
    academicAchievements?: SortOrder
    skills?: SortOrder
    interests?: SortOrder
    workExperience?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    companyDescription?: SortOrder
    website?: SortOrder
    foundedYear?: SortOrder
    institutionName?: SortOrder
    institutionType?: SortOrder
    serviceArea?: SortOrder
    specialization?: SortOrder
    institutionDescription?: SortOrder
    profileCompletion?: SortOrder
    lastLoginAt?: SortOrder
    parentalConsent?: SortOrder
    parentEmail?: SortOrder
    consentDate?: SortOrder
    achievements?: SortOrder
    jobTitle?: SortOrder
    addressLine?: SortOrder
    cityState?: SortOrder
    languages?: SortOrder
    websites?: SortOrder
    skillsWithLevel?: SortOrder
    extracurricularActivities?: SortOrder
    projects?: SortOrder
    coverLetterRecipient?: SortOrder
    coverLetterSubject?: SortOrder
    coverLetterContent?: SortOrder
    coverLetterTemplate?: SortOrder
    companyId?: SortOrder
  }

  export type ProfileAvgOrderByAggregateInput = {
    graduationYear?: SortOrder
    gpa?: SortOrder
    foundedYear?: SortOrder
    profileCompletion?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    avatarUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    active?: SortOrder
    status?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    country?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    educationLevel?: SortOrder
    currentInstitution?: SortOrder
    graduationYear?: SortOrder
    isStudying?: SortOrder
    currentDegree?: SortOrder
    universityName?: SortOrder
    universityStartDate?: SortOrder
    universityEndDate?: SortOrder
    universityStatus?: SortOrder
    gpa?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    companyDescription?: SortOrder
    website?: SortOrder
    foundedYear?: SortOrder
    institutionName?: SortOrder
    institutionType?: SortOrder
    serviceArea?: SortOrder
    institutionDescription?: SortOrder
    profileCompletion?: SortOrder
    lastLoginAt?: SortOrder
    parentalConsent?: SortOrder
    parentEmail?: SortOrder
    consentDate?: SortOrder
    jobTitle?: SortOrder
    addressLine?: SortOrder
    cityState?: SortOrder
    coverLetterSubject?: SortOrder
    coverLetterContent?: SortOrder
    coverLetterTemplate?: SortOrder
    companyId?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    avatarUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    active?: SortOrder
    status?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    country?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    educationLevel?: SortOrder
    currentInstitution?: SortOrder
    graduationYear?: SortOrder
    isStudying?: SortOrder
    currentDegree?: SortOrder
    universityName?: SortOrder
    universityStartDate?: SortOrder
    universityEndDate?: SortOrder
    universityStatus?: SortOrder
    gpa?: SortOrder
    companyName?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    companyDescription?: SortOrder
    website?: SortOrder
    foundedYear?: SortOrder
    institutionName?: SortOrder
    institutionType?: SortOrder
    serviceArea?: SortOrder
    institutionDescription?: SortOrder
    profileCompletion?: SortOrder
    lastLoginAt?: SortOrder
    parentalConsent?: SortOrder
    parentEmail?: SortOrder
    consentDate?: SortOrder
    jobTitle?: SortOrder
    addressLine?: SortOrder
    cityState?: SortOrder
    coverLetterSubject?: SortOrder
    coverLetterContent?: SortOrder
    coverLetterTemplate?: SortOrder
    companyId?: SortOrder
  }

  export type ProfileSumOrderByAggregateInput = {
    graduationYear?: SortOrder
    gpa?: SortOrder
    foundedYear?: SortOrder
    profileCompletion?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumEducationLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EducationLevel | EnumEducationLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEducationLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.EducationLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEducationLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumEducationLevelNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumCompanySizeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySize | EnumCompanySizeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanySize | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanySizeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanySizeNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumContractTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumContractTypeFilter<$PrismaModel> | $Enums.ContractType
  }

  export type EnumWorkModalityFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkModality | EnumWorkModalityFieldRefInput<$PrismaModel>
    in?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    notIn?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    not?: NestedEnumWorkModalityFilter<$PrismaModel> | $Enums.WorkModality
  }

  export type EnumExperienceLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.ExperienceLevel | EnumExperienceLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumExperienceLevelFilter<$PrismaModel> | $Enums.ExperienceLevel
  }

  export type EnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type CompanyRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type JobQuestionListRelationFilter = {
    every?: JobQuestionWhereInput
    some?: JobQuestionWhereInput
    none?: JobQuestionWhereInput
  }

  export type JobQuestionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobOfferCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    requirements?: SortOrder
    benefits?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryCurrency?: SortOrder
    contractType?: SortOrder
    workSchedule?: SortOrder
    workModality?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    images?: SortOrder
    logo?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    experienceLevel?: SortOrder
    educationRequired?: SortOrder
    skillsRequired?: SortOrder
    desiredSkills?: SortOrder
    applicationDeadline?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
    featured?: SortOrder
    expiresAt?: SortOrder
    publishedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobOfferAvgOrderByAggregateInput = {
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
  }

  export type JobOfferMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    requirements?: SortOrder
    benefits?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryCurrency?: SortOrder
    contractType?: SortOrder
    workSchedule?: SortOrder
    workModality?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    logo?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    experienceLevel?: SortOrder
    educationRequired?: SortOrder
    applicationDeadline?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
    featured?: SortOrder
    expiresAt?: SortOrder
    publishedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobOfferMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    requirements?: SortOrder
    benefits?: SortOrder
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    salaryCurrency?: SortOrder
    contractType?: SortOrder
    workSchedule?: SortOrder
    workModality?: SortOrder
    location?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    logo?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    experienceLevel?: SortOrder
    educationRequired?: SortOrder
    applicationDeadline?: SortOrder
    isActive?: SortOrder
    status?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
    featured?: SortOrder
    expiresAt?: SortOrder
    publishedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type JobOfferSumOrderByAggregateInput = {
    salaryMin?: SortOrder
    salaryMax?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    viewsCount?: SortOrder
    applicationsCount?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumContractTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumContractTypeWithAggregatesFilter<$PrismaModel> | $Enums.ContractType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContractTypeFilter<$PrismaModel>
    _max?: NestedEnumContractTypeFilter<$PrismaModel>
  }

  export type EnumWorkModalityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkModality | EnumWorkModalityFieldRefInput<$PrismaModel>
    in?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    notIn?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    not?: NestedEnumWorkModalityWithAggregatesFilter<$PrismaModel> | $Enums.WorkModality
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWorkModalityFilter<$PrismaModel>
    _max?: NestedEnumWorkModalityFilter<$PrismaModel>
  }

  export type EnumExperienceLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ExperienceLevel | EnumExperienceLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumExperienceLevelWithAggregatesFilter<$PrismaModel> | $Enums.ExperienceLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumExperienceLevelFilter<$PrismaModel>
    _max?: NestedEnumExperienceLevelFilter<$PrismaModel>
  }

  export type EnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type JobQuestionAnswerListRelationFilter = {
    every?: JobQuestionAnswerWhereInput
    some?: JobQuestionAnswerWhereInput
    none?: JobQuestionAnswerWhereInput
  }

  export type JobOfferRelationFilter = {
    is?: JobOfferWhereInput
    isNot?: JobOfferWhereInput
  }

  export type JobQuestionAnswerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobQuestionCountOrderByAggregateInput = {
    id?: SortOrder
    jobOfferId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    required?: SortOrder
    options?: SortOrder
    orderIndex?: SortOrder
  }

  export type JobQuestionAvgOrderByAggregateInput = {
    orderIndex?: SortOrder
  }

  export type JobQuestionMaxOrderByAggregateInput = {
    id?: SortOrder
    jobOfferId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    required?: SortOrder
    orderIndex?: SortOrder
  }

  export type JobQuestionMinOrderByAggregateInput = {
    id?: SortOrder
    jobOfferId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    required?: SortOrder
    orderIndex?: SortOrder
  }

  export type JobQuestionSumOrderByAggregateInput = {
    orderIndex?: SortOrder
  }

  export type EnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type ProfileRelationFilter = {
    is?: ProfileWhereInput
    isNot?: ProfileWhereInput
  }

  export type JobApplicationMessageListRelationFilter = {
    every?: JobApplicationMessageWhereInput
    some?: JobApplicationMessageWhereInput
    none?: JobApplicationMessageWhereInput
  }

  export type JobApplicationMessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobApplicationApplicantIdJobOfferIdCompoundUniqueInput = {
    applicantId: string
    jobOfferId: string
  }

  export type JobApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    applicantId?: SortOrder
    jobOfferId?: SortOrder
    coverLetter?: SortOrder
    cvData?: SortOrder
    cvFile?: SortOrder
    coverLetterFile?: SortOrder
    profileImage?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    reviewedAt?: SortOrder
    notes?: SortOrder
    rating?: SortOrder
    decisionReason?: SortOrder
  }

  export type JobApplicationAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type JobApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    applicantId?: SortOrder
    jobOfferId?: SortOrder
    coverLetter?: SortOrder
    cvFile?: SortOrder
    coverLetterFile?: SortOrder
    profileImage?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    reviewedAt?: SortOrder
    notes?: SortOrder
    rating?: SortOrder
    decisionReason?: SortOrder
  }

  export type JobApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    applicantId?: SortOrder
    jobOfferId?: SortOrder
    coverLetter?: SortOrder
    cvFile?: SortOrder
    coverLetterFile?: SortOrder
    profileImage?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    reviewedAt?: SortOrder
    notes?: SortOrder
    rating?: SortOrder
    decisionReason?: SortOrder
  }

  export type JobApplicationSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type EnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type JobApplicationRelationFilter = {
    is?: JobApplicationWhereInput
    isNot?: JobApplicationWhereInput
  }

  export type JobQuestionRelationFilter = {
    is?: JobQuestionWhereInput
    isNot?: JobQuestionWhereInput
  }

  export type JobQuestionAnswerApplicationIdQuestionIdCompoundUniqueInput = {
    applicationId: string
    questionId: string
  }

  export type JobQuestionAnswerCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
  }

  export type JobQuestionAnswerMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
  }

  export type JobQuestionAnswerMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
  }

  export type EnumSenderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SenderType | EnumSenderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSenderTypeFilter<$PrismaModel> | $Enums.SenderType
  }

  export type EnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type EnumMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusFilter<$PrismaModel> | $Enums.MessageStatus
  }

  export type JobApplicationMessageCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    senderId?: SortOrder
    senderType?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type JobApplicationMessageMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    senderId?: SortOrder
    senderType?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type JobApplicationMessageMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    senderId?: SortOrder
    senderType?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type EnumSenderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SenderType | EnumSenderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSenderTypeWithAggregatesFilter<$PrismaModel> | $Enums.SenderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSenderTypeFilter<$PrismaModel>
    _max?: NestedEnumSenderTypeFilter<$PrismaModel>
  }

  export type EnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type EnumMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.MessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumMessageStatusFilter<$PrismaModel>
  }

  export type EnumCourseLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseLevel | EnumCourseLevelFieldRefInput<$PrismaModel>
    in?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseLevelFilter<$PrismaModel> | $Enums.CourseLevel
  }

  export type EnumCourseCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseCategory | EnumCourseCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseCategoryFilter<$PrismaModel> | $Enums.CourseCategory
  }

  export type CourseModuleListRelationFilter = {
    every?: CourseModuleWhereInput
    some?: CourseModuleWhereInput
    none?: CourseModuleWhereInput
  }

  export type ProfileNullableRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type QuizListRelationFilter = {
    every?: QuizWhereInput
    some?: QuizWhereInput
    none?: QuizWhereInput
  }

  export type CourseModuleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuizOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CourseCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    thumbnail?: SortOrder
    videoPreview?: SortOrder
    objectives?: SortOrder
    prerequisites?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    category?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    price?: SortOrder
    rating?: SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
    tags?: SortOrder
    certification?: SortOrder
    includedMaterials?: SortOrder
    instructorId?: SortOrder
    institutionName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
  }

  export type CourseAvgOrderByAggregateInput = {
    duration?: SortOrder
    price?: SortOrder
    rating?: SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
  }

  export type CourseMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    thumbnail?: SortOrder
    videoPreview?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    category?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    price?: SortOrder
    rating?: SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
    certification?: SortOrder
    instructorId?: SortOrder
    institutionName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
  }

  export type CourseMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    thumbnail?: SortOrder
    videoPreview?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    category?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    price?: SortOrder
    rating?: SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
    certification?: SortOrder
    instructorId?: SortOrder
    institutionName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
  }

  export type CourseSumOrderByAggregateInput = {
    duration?: SortOrder
    price?: SortOrder
    rating?: SortOrder
    studentsCount?: SortOrder
    completionRate?: SortOrder
    totalLessons?: SortOrder
    totalQuizzes?: SortOrder
    totalResources?: SortOrder
  }

  export type EnumCourseLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseLevel | EnumCourseLevelFieldRefInput<$PrismaModel>
    in?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseLevelWithAggregatesFilter<$PrismaModel> | $Enums.CourseLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCourseLevelFilter<$PrismaModel>
    _max?: NestedEnumCourseLevelFilter<$PrismaModel>
  }

  export type EnumCourseCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseCategory | EnumCourseCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseCategoryWithAggregatesFilter<$PrismaModel> | $Enums.CourseCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCourseCategoryFilter<$PrismaModel>
    _max?: NestedEnumCourseCategoryFilter<$PrismaModel>
  }

  export type CourseRelationFilter = {
    is?: CourseWhereInput
    isNot?: CourseWhereInput
  }

  export type LessonListRelationFilter = {
    every?: LessonWhereInput
    some?: LessonWhereInput
    none?: LessonWhereInput
  }

  export type LessonOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CourseModuleCountOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
    isLocked?: SortOrder
    prerequisites?: SortOrder
    hasCertificate?: SortOrder
    certificateTemplate?: SortOrder
  }

  export type CourseModuleAvgOrderByAggregateInput = {
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
  }

  export type CourseModuleMaxOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
    isLocked?: SortOrder
    hasCertificate?: SortOrder
    certificateTemplate?: SortOrder
  }

  export type CourseModuleMinOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
    isLocked?: SortOrder
    hasCertificate?: SortOrder
    certificateTemplate?: SortOrder
  }

  export type CourseModuleSumOrderByAggregateInput = {
    orderIndex?: SortOrder
    estimatedDuration?: SortOrder
  }

  export type EnumLessonTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LessonType | EnumLessonTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLessonTypeFilter<$PrismaModel> | $Enums.LessonType
  }

  export type LessonResourceListRelationFilter = {
    every?: LessonResourceWhereInput
    some?: LessonResourceWhereInput
    none?: LessonResourceWhereInput
  }

  export type LessonProgressListRelationFilter = {
    every?: LessonProgressWhereInput
    some?: LessonProgressWhereInput
    none?: LessonProgressWhereInput
  }

  export type CourseModuleRelationFilter = {
    is?: CourseModuleWhereInput
    isNot?: CourseModuleWhereInput
  }

  export type LessonResourceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LessonProgressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LessonCountOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    contentType?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    orderIndex?: SortOrder
    isRequired?: SortOrder
    isPreview?: SortOrder
    attachments?: SortOrder
  }

  export type LessonAvgOrderByAggregateInput = {
    duration?: SortOrder
    orderIndex?: SortOrder
  }

  export type LessonMaxOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    contentType?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    orderIndex?: SortOrder
    isRequired?: SortOrder
    isPreview?: SortOrder
  }

  export type LessonMinOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    contentType?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    orderIndex?: SortOrder
    isRequired?: SortOrder
    isPreview?: SortOrder
  }

  export type LessonSumOrderByAggregateInput = {
    duration?: SortOrder
    orderIndex?: SortOrder
  }

  export type EnumLessonTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LessonType | EnumLessonTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLessonTypeWithAggregatesFilter<$PrismaModel> | $Enums.LessonType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLessonTypeFilter<$PrismaModel>
    _max?: NestedEnumLessonTypeFilter<$PrismaModel>
  }

  export type EnumEnrollmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusFilter<$PrismaModel> | $Enums.EnrollmentStatus
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type CourseEnrollmentStudentIdCourseIdCompoundUniqueInput = {
    studentId: string
    courseId: string
  }

  export type CourseEnrollmentCountOrderByAggregateInput = {
    id?: SortOrder
    studentId?: SortOrder
    courseId?: SortOrder
    enrolledAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    status?: SortOrder
    progress?: SortOrder
    currentModuleId?: SortOrder
    currentLessonId?: SortOrder
    certificateUrl?: SortOrder
    timeSpent?: SortOrder
    certificateIssued?: SortOrder
    finalGrade?: SortOrder
    moduleProgress?: SortOrder
    quizResults?: SortOrder
  }

  export type CourseEnrollmentAvgOrderByAggregateInput = {
    progress?: SortOrder
    timeSpent?: SortOrder
    finalGrade?: SortOrder
  }

  export type CourseEnrollmentMaxOrderByAggregateInput = {
    id?: SortOrder
    studentId?: SortOrder
    courseId?: SortOrder
    enrolledAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    status?: SortOrder
    progress?: SortOrder
    currentModuleId?: SortOrder
    currentLessonId?: SortOrder
    certificateUrl?: SortOrder
    timeSpent?: SortOrder
    certificateIssued?: SortOrder
    finalGrade?: SortOrder
  }

  export type CourseEnrollmentMinOrderByAggregateInput = {
    id?: SortOrder
    studentId?: SortOrder
    courseId?: SortOrder
    enrolledAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    status?: SortOrder
    progress?: SortOrder
    currentModuleId?: SortOrder
    currentLessonId?: SortOrder
    certificateUrl?: SortOrder
    timeSpent?: SortOrder
    certificateIssued?: SortOrder
    finalGrade?: SortOrder
  }

  export type CourseEnrollmentSumOrderByAggregateInput = {
    progress?: SortOrder
    timeSpent?: SortOrder
    finalGrade?: SortOrder
  }

  export type EnumEnrollmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.EnrollmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
    _max?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CourseEnrollmentRelationFilter = {
    is?: CourseEnrollmentWhereInput
    isNot?: CourseEnrollmentWhereInput
  }

  export type LessonRelationFilter = {
    is?: LessonWhereInput
    isNot?: LessonWhereInput
  }

  export type LessonProgressEnrollmentIdLessonIdCompoundUniqueInput = {
    enrollmentId: string
    lessonId: string
  }

  export type LessonProgressCountOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    lessonId?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    timeSpent?: SortOrder
    videoProgress?: SortOrder
    lastWatchedAt?: SortOrder
  }

  export type LessonProgressAvgOrderByAggregateInput = {
    timeSpent?: SortOrder
    videoProgress?: SortOrder
  }

  export type LessonProgressMaxOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    lessonId?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    timeSpent?: SortOrder
    videoProgress?: SortOrder
    lastWatchedAt?: SortOrder
  }

  export type LessonProgressMinOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    lessonId?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    timeSpent?: SortOrder
    videoProgress?: SortOrder
    lastWatchedAt?: SortOrder
  }

  export type LessonProgressSumOrderByAggregateInput = {
    timeSpent?: SortOrder
    videoProgress?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type QuizQuestionListRelationFilter = {
    every?: QuizQuestionWhereInput
    some?: QuizQuestionWhereInput
    none?: QuizQuestionWhereInput
  }

  export type CourseNullableRelationFilter = {
    is?: CourseWhereInput | null
    isNot?: CourseWhereInput | null
  }

  export type LessonNullableRelationFilter = {
    is?: LessonWhereInput | null
    isNot?: LessonWhereInput | null
  }

  export type QuizQuestionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuizCountOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    timeLimit?: SortOrder
    passingScore?: SortOrder
    showCorrectAnswers?: SortOrder
    isActive?: SortOrder
  }

  export type QuizAvgOrderByAggregateInput = {
    timeLimit?: SortOrder
    passingScore?: SortOrder
  }

  export type QuizMaxOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    timeLimit?: SortOrder
    passingScore?: SortOrder
    showCorrectAnswers?: SortOrder
    isActive?: SortOrder
  }

  export type QuizMinOrderByAggregateInput = {
    id?: SortOrder
    courseId?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    timeLimit?: SortOrder
    passingScore?: SortOrder
    showCorrectAnswers?: SortOrder
    isActive?: SortOrder
  }

  export type QuizSumOrderByAggregateInput = {
    timeLimit?: SortOrder
    passingScore?: SortOrder
  }

  export type EnumQuestionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.QuestionType | EnumQuestionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumQuestionTypeFilter<$PrismaModel> | $Enums.QuestionType
  }

  export type QuizAnswerListRelationFilter = {
    every?: QuizAnswerWhereInput
    some?: QuizAnswerWhereInput
    none?: QuizAnswerWhereInput
  }

  export type QuizRelationFilter = {
    is?: QuizWhereInput
    isNot?: QuizWhereInput
  }

  export type QuizAnswerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QuizQuestionCountOrderByAggregateInput = {
    id?: SortOrder
    quizId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    options?: SortOrder
    correctAnswer?: SortOrder
    explanation?: SortOrder
    points?: SortOrder
    orderIndex?: SortOrder
  }

  export type QuizQuestionAvgOrderByAggregateInput = {
    points?: SortOrder
    orderIndex?: SortOrder
  }

  export type QuizQuestionMaxOrderByAggregateInput = {
    id?: SortOrder
    quizId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    correctAnswer?: SortOrder
    explanation?: SortOrder
    points?: SortOrder
    orderIndex?: SortOrder
  }

  export type QuizQuestionMinOrderByAggregateInput = {
    id?: SortOrder
    quizId?: SortOrder
    question?: SortOrder
    type?: SortOrder
    correctAnswer?: SortOrder
    explanation?: SortOrder
    points?: SortOrder
    orderIndex?: SortOrder
  }

  export type QuizQuestionSumOrderByAggregateInput = {
    points?: SortOrder
    orderIndex?: SortOrder
  }

  export type EnumQuestionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QuestionType | EnumQuestionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumQuestionTypeWithAggregatesFilter<$PrismaModel> | $Enums.QuestionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQuestionTypeFilter<$PrismaModel>
    _max?: NestedEnumQuestionTypeFilter<$PrismaModel>
  }

  export type CourseEnrollmentNullableRelationFilter = {
    is?: CourseEnrollmentWhereInput | null
    isNot?: CourseEnrollmentWhereInput | null
  }

  export type QuizAttemptCountOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    quizId?: SortOrder
    studentId?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    score?: SortOrder
    passed?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAttemptAvgOrderByAggregateInput = {
    score?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAttemptMaxOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    quizId?: SortOrder
    studentId?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    score?: SortOrder
    passed?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAttemptMinOrderByAggregateInput = {
    id?: SortOrder
    enrollmentId?: SortOrder
    quizId?: SortOrder
    studentId?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    score?: SortOrder
    passed?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAttemptSumOrderByAggregateInput = {
    score?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAttemptRelationFilter = {
    is?: QuizAttemptWhereInput
    isNot?: QuizAttemptWhereInput
  }

  export type QuizQuestionRelationFilter = {
    is?: QuizQuestionWhereInput
    isNot?: QuizQuestionWhereInput
  }

  export type QuizAnswerAttemptIdQuestionIdCompoundUniqueInput = {
    attemptId: string
    questionId: string
  }

  export type QuizAnswerCountOrderByAggregateInput = {
    id?: SortOrder
    attemptId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    isCorrect?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAnswerAvgOrderByAggregateInput = {
    timeSpent?: SortOrder
  }

  export type QuizAnswerMaxOrderByAggregateInput = {
    id?: SortOrder
    attemptId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    isCorrect?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAnswerMinOrderByAggregateInput = {
    id?: SortOrder
    attemptId?: SortOrder
    questionId?: SortOrder
    answer?: SortOrder
    isCorrect?: SortOrder
    timeSpent?: SortOrder
  }

  export type QuizAnswerSumOrderByAggregateInput = {
    timeSpent?: SortOrder
  }

  export type CertificateCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    courseId?: SortOrder
    template?: SortOrder
    issuedAt?: SortOrder
    verificationCode?: SortOrder
    digitalSignature?: SortOrder
    isValid?: SortOrder
    url?: SortOrder
  }

  export type CertificateMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    courseId?: SortOrder
    template?: SortOrder
    issuedAt?: SortOrder
    verificationCode?: SortOrder
    digitalSignature?: SortOrder
    isValid?: SortOrder
    url?: SortOrder
  }

  export type CertificateMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    courseId?: SortOrder
    template?: SortOrder
    issuedAt?: SortOrder
    verificationCode?: SortOrder
    digitalSignature?: SortOrder
    isValid?: SortOrder
    url?: SortOrder
  }

  export type StudentNoteCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    lessonId?: SortOrder
    content?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StudentNoteAvgOrderByAggregateInput = {
    timestamp?: SortOrder
  }

  export type StudentNoteMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    lessonId?: SortOrder
    content?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StudentNoteMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    lessonId?: SortOrder
    content?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StudentNoteSumOrderByAggregateInput = {
    timestamp?: SortOrder
  }

  export type DiscussionNullableRelationFilter = {
    is?: DiscussionWhereInput | null
    isNot?: DiscussionWhereInput | null
  }

  export type DiscussionCountOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DiscussionAvgOrderByAggregateInput = {
    likes?: SortOrder
  }

  export type DiscussionMaxOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DiscussionMinOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DiscussionSumOrderByAggregateInput = {
    likes?: SortOrder
  }

  export type EnumBusinessStageFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessStage | EnumBusinessStageFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessStageFilter<$PrismaModel> | $Enums.BusinessStage
  }

  export type BusinessPlanNullableRelationFilter = {
    is?: BusinessPlanWhereInput | null
    isNot?: BusinessPlanWhereInput | null
  }

  export type EntrepreneurshipCountOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    businessStage?: SortOrder
    logo?: SortOrder
    images?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    socialMedia?: SortOrder
    founded?: SortOrder
    employees?: SortOrder
    annualRevenue?: SortOrder
    businessModel?: SortOrder
    targetMarket?: SortOrder
    isPublic?: SortOrder
    isActive?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrder
    reviewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EntrepreneurshipAvgOrderByAggregateInput = {
    employees?: SortOrder
    annualRevenue?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrder
    reviewsCount?: SortOrder
  }

  export type EntrepreneurshipMaxOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    businessStage?: SortOrder
    logo?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    founded?: SortOrder
    employees?: SortOrder
    annualRevenue?: SortOrder
    businessModel?: SortOrder
    targetMarket?: SortOrder
    isPublic?: SortOrder
    isActive?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrder
    reviewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EntrepreneurshipMinOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    businessStage?: SortOrder
    logo?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    municipality?: SortOrder
    department?: SortOrder
    founded?: SortOrder
    employees?: SortOrder
    annualRevenue?: SortOrder
    businessModel?: SortOrder
    targetMarket?: SortOrder
    isPublic?: SortOrder
    isActive?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrder
    reviewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EntrepreneurshipSumOrderByAggregateInput = {
    employees?: SortOrder
    annualRevenue?: SortOrder
    viewsCount?: SortOrder
    rating?: SortOrder
    reviewsCount?: SortOrder
  }

  export type EnumBusinessStageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessStage | EnumBusinessStageFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessStageWithAggregatesFilter<$PrismaModel> | $Enums.BusinessStage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessStageFilter<$PrismaModel>
    _max?: NestedEnumBusinessStageFilter<$PrismaModel>
  }

  export type EntrepreneurshipRelationFilter = {
    is?: EntrepreneurshipWhereInput
    isNot?: EntrepreneurshipWhereInput
  }

  export type BusinessPlanCountOrderByAggregateInput = {
    id?: SortOrder
    entrepreneurshipId?: SortOrder
    executiveSummary?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    marketAnalysis?: SortOrder
    targetMarket?: SortOrder
    competitiveAnalysis?: SortOrder
    businessModelCanvas?: SortOrder
    revenueStreams?: SortOrder
    costStructure?: SortOrder
    marketingStrategy?: SortOrder
    pricingStrategy?: SortOrder
    salesStrategy?: SortOrder
    initialInvestment?: SortOrder
    monthlyExpenses?: SortOrder
    revenueProjection?: SortOrder
    breakEvenPoint?: SortOrder
    roi?: SortOrder
    riskAnalysis?: SortOrder
    mitigationStrategies?: SortOrder
    operationalPlan?: SortOrder
    managementTeam?: SortOrder
    tripleImpactAssessment?: SortOrder
    isCompleted?: SortOrder
    lastSection?: SortOrder
    completionPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPlanAvgOrderByAggregateInput = {
    initialInvestment?: SortOrder
    monthlyExpenses?: SortOrder
    breakEvenPoint?: SortOrder
    roi?: SortOrder
    completionPercentage?: SortOrder
  }

  export type BusinessPlanMaxOrderByAggregateInput = {
    id?: SortOrder
    entrepreneurshipId?: SortOrder
    executiveSummary?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    marketAnalysis?: SortOrder
    targetMarket?: SortOrder
    competitiveAnalysis?: SortOrder
    marketingStrategy?: SortOrder
    pricingStrategy?: SortOrder
    salesStrategy?: SortOrder
    initialInvestment?: SortOrder
    monthlyExpenses?: SortOrder
    breakEvenPoint?: SortOrder
    roi?: SortOrder
    riskAnalysis?: SortOrder
    operationalPlan?: SortOrder
    isCompleted?: SortOrder
    lastSection?: SortOrder
    completionPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPlanMinOrderByAggregateInput = {
    id?: SortOrder
    entrepreneurshipId?: SortOrder
    executiveSummary?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    marketAnalysis?: SortOrder
    targetMarket?: SortOrder
    competitiveAnalysis?: SortOrder
    marketingStrategy?: SortOrder
    pricingStrategy?: SortOrder
    salesStrategy?: SortOrder
    initialInvestment?: SortOrder
    monthlyExpenses?: SortOrder
    breakEvenPoint?: SortOrder
    roi?: SortOrder
    riskAnalysis?: SortOrder
    operationalPlan?: SortOrder
    isCompleted?: SortOrder
    lastSection?: SortOrder
    completionPercentage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessPlanSumOrderByAggregateInput = {
    initialInvestment?: SortOrder
    monthlyExpenses?: SortOrder
    breakEvenPoint?: SortOrder
    roi?: SortOrder
    completionPercentage?: SortOrder
  }

  export type EnumNewsTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsType | EnumNewsTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsTypeFilter<$PrismaModel> | $Enums.NewsType
  }

  export type EnumNewsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsStatusFilter<$PrismaModel> | $Enums.NewsStatus
  }

  export type EnumNewsPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsPriority | EnumNewsPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsPriorityFilter<$PrismaModel> | $Enums.NewsPriority
  }

  export type NewsArticleCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    imageUrl?: SortOrder
    videoUrl?: SortOrder
    authorId?: SortOrder
    authorName?: SortOrder
    authorType?: SortOrder
    authorLogo?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    featured?: SortOrder
    tags?: SortOrder
    category?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    targetAudience?: SortOrder
    region?: SortOrder
    relatedLinks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsArticleAvgOrderByAggregateInput = {
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
  }

  export type NewsArticleMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    imageUrl?: SortOrder
    videoUrl?: SortOrder
    authorId?: SortOrder
    authorName?: SortOrder
    authorType?: SortOrder
    authorLogo?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    featured?: SortOrder
    category?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    region?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsArticleMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    imageUrl?: SortOrder
    videoUrl?: SortOrder
    authorId?: SortOrder
    authorName?: SortOrder
    authorType?: SortOrder
    authorLogo?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    featured?: SortOrder
    category?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    region?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsArticleSumOrderByAggregateInput = {
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
  }

  export type EnumNewsTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsType | EnumNewsTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsTypeWithAggregatesFilter<$PrismaModel> | $Enums.NewsType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsTypeFilter<$PrismaModel>
    _max?: NestedEnumNewsTypeFilter<$PrismaModel>
  }

  export type EnumNewsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel> | $Enums.NewsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsStatusFilter<$PrismaModel>
    _max?: NestedEnumNewsStatusFilter<$PrismaModel>
  }

  export type EnumNewsPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsPriority | EnumNewsPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsPriorityWithAggregatesFilter<$PrismaModel> | $Enums.NewsPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsPriorityFilter<$PrismaModel>
    _max?: NestedEnumNewsPriorityFilter<$PrismaModel>
  }

  export type NewsArticleRelationFilter = {
    is?: NewsArticleWhereInput
    isNot?: NewsArticleWhereInput
  }

  export type NewsCommentNullableRelationFilter = {
    is?: NewsCommentWhereInput | null
    isNot?: NewsCommentWhereInput | null
  }

  export type NewsCommentCountOrderByAggregateInput = {
    id?: SortOrder
    newsId?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsCommentAvgOrderByAggregateInput = {
    likes?: SortOrder
  }

  export type NewsCommentMaxOrderByAggregateInput = {
    id?: SortOrder
    newsId?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsCommentMinOrderByAggregateInput = {
    id?: SortOrder
    newsId?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    content?: SortOrder
    parentId?: SortOrder
    likes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsCommentSumOrderByAggregateInput = {
    likes?: SortOrder
  }

  export type ResourceCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    category?: SortOrder
    format?: SortOrder
    downloadUrl?: SortOrder
    externalUrl?: SortOrder
    thumbnail?: SortOrder
    author?: SortOrder
    publishedDate?: SortOrder
    downloads?: SortOrder
    rating?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResourceAvgOrderByAggregateInput = {
    downloads?: SortOrder
    rating?: SortOrder
  }

  export type ResourceMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    category?: SortOrder
    format?: SortOrder
    downloadUrl?: SortOrder
    externalUrl?: SortOrder
    thumbnail?: SortOrder
    author?: SortOrder
    publishedDate?: SortOrder
    downloads?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResourceMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    category?: SortOrder
    format?: SortOrder
    downloadUrl?: SortOrder
    externalUrl?: SortOrder
    thumbnail?: SortOrder
    author?: SortOrder
    publishedDate?: SortOrder
    downloads?: SortOrder
    rating?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResourceSumOrderByAggregateInput = {
    downloads?: SortOrder
    rating?: SortOrder
  }

  export type CompanyListRelationFilter = {
    every?: CompanyWhereInput
    some?: CompanyWhereInput
    none?: CompanyWhereInput
  }

  export type InstitutionListRelationFilter = {
    every?: InstitutionWhereInput
    some?: InstitutionWhereInput
    none?: InstitutionWhereInput
  }

  export type MunicipalityListRelationFilter = {
    every?: MunicipalityWhereInput
    some?: MunicipalityWhereInput
    none?: MunicipalityWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type CompanyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InstitutionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MunicipalityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    revoked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ExternalApiKeyCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    name?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type ExternalApiKeyMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    name?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type ExternalApiKeyMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    name?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type EnumInstitutionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InstitutionType | EnumInstitutionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInstitutionTypeFilter<$PrismaModel> | $Enums.InstitutionType
  }

  export type InstitutionNameDepartmentCompoundUniqueInput = {
    name: string
    department: string
  }

  export type InstitutionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InstitutionAvgOrderByAggregateInput = {
    population?: SortOrder
  }

  export type InstitutionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InstitutionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InstitutionSumOrderByAggregateInput = {
    population?: SortOrder
  }

  export type EnumInstitutionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InstitutionType | EnumInstitutionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInstitutionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InstitutionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInstitutionTypeFilter<$PrismaModel>
    _max?: NestedEnumInstitutionTypeFilter<$PrismaModel>
  }

  export type MunicipalityNameDepartmentCompoundUniqueInput = {
    name: string
    department: string
  }

  export type MunicipalityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MunicipalityAvgOrderByAggregateInput = {
    population?: SortOrder
  }

  export type MunicipalityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MunicipalityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    department?: SortOrder
    region?: SortOrder
    population?: SortOrder
    mayorName?: SortOrder
    mayorEmail?: SortOrder
    mayorPhone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    institutionType?: SortOrder
    customType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MunicipalitySumOrderByAggregateInput = {
    population?: SortOrder
  }

  export type MunicipalityRelationFilter = {
    is?: MunicipalityWhereInput
    isNot?: MunicipalityWhereInput
  }

  export type JobOfferListRelationFilter = {
    every?: JobOfferWhereInput
    some?: JobOfferWhereInput
    none?: JobOfferWhereInput
  }

  export type ProfileListRelationFilter = {
    every?: ProfileWhereInput
    some?: ProfileWhereInput
    none?: ProfileWhereInput
  }

  export type JobOfferOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyNameMunicipalityIdCompoundUniqueInput = {
    name: string
    municipalityId: string
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    foundedYear?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    loginEmail?: SortOrder
    municipalityId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    foundedYear?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    foundedYear?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    loginEmail?: SortOrder
    municipalityId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    taxId?: SortOrder
    legalRepresentative?: SortOrder
    businessSector?: SortOrder
    companySize?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    foundedYear?: SortOrder
    isActive?: SortOrder
    username?: SortOrder
    password?: SortOrder
    loginEmail?: SortOrder
    municipalityId?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    foundedYear?: SortOrder
  }

  export type EnumContactStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactStatus | EnumContactStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumContactStatusFilter<$PrismaModel> | $Enums.ContactStatus
  }

  export type ContactUserIdContactIdCompoundUniqueInput = {
    userId: string
    contactId: string
  }

  export type ContactCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    status?: SortOrder
    requestMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    status?: SortOrder
    requestMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    status?: SortOrder
    requestMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumContactStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactStatus | EnumContactStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumContactStatusWithAggregatesFilter<$PrismaModel> | $Enums.ContactStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContactStatusFilter<$PrismaModel>
    _max?: NestedEnumContactStatusFilter<$PrismaModel>
  }

  export type ConversationCountOrderByAggregateInput = {
    id?: SortOrder
    participants?: SortOrder
    lastMessageContent?: SortOrder
    lastMessageTime?: SortOrder
    unreadCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationAvgOrderByAggregateInput = {
    unreadCount?: SortOrder
  }

  export type ConversationMaxOrderByAggregateInput = {
    id?: SortOrder
    lastMessageContent?: SortOrder
    lastMessageTime?: SortOrder
    unreadCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationMinOrderByAggregateInput = {
    id?: SortOrder
    lastMessageContent?: SortOrder
    lastMessageTime?: SortOrder
    unreadCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationSumOrderByAggregateInput = {
    unreadCount?: SortOrder
  }

  export type ConversationRelationFilter = {
    is?: ConversationWhereInput
    isNot?: ConversationWhereInput
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type EnumResourceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ResourceType | EnumResourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumResourceTypeFilter<$PrismaModel> | $Enums.ResourceType
  }

  export type LessonResourceCountOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    url?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    orderIndex?: SortOrder
    isDownloadable?: SortOrder
    createdAt?: SortOrder
  }

  export type LessonResourceAvgOrderByAggregateInput = {
    fileSize?: SortOrder
    orderIndex?: SortOrder
  }

  export type LessonResourceMaxOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    url?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    orderIndex?: SortOrder
    isDownloadable?: SortOrder
    createdAt?: SortOrder
  }

  export type LessonResourceMinOrderByAggregateInput = {
    id?: SortOrder
    lessonId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    url?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    orderIndex?: SortOrder
    isDownloadable?: SortOrder
    createdAt?: SortOrder
  }

  export type LessonResourceSumOrderByAggregateInput = {
    fileSize?: SortOrder
    orderIndex?: SortOrder
  }

  export type EnumResourceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ResourceType | EnumResourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumResourceTypeWithAggregatesFilter<$PrismaModel> | $Enums.ResourceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumResourceTypeFilter<$PrismaModel>
    _max?: NestedEnumResourceTypeFilter<$PrismaModel>
  }

  export type ModuleCertificateModuleIdStudentIdCompoundUniqueInput = {
    moduleId: string
    studentId: string
  }

  export type ModuleCertificateCountOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    studentId?: SortOrder
    certificateUrl?: SortOrder
    issuedAt?: SortOrder
    grade?: SortOrder
    completedAt?: SortOrder
  }

  export type ModuleCertificateAvgOrderByAggregateInput = {
    grade?: SortOrder
  }

  export type ModuleCertificateMaxOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    studentId?: SortOrder
    certificateUrl?: SortOrder
    issuedAt?: SortOrder
    grade?: SortOrder
    completedAt?: SortOrder
  }

  export type ModuleCertificateMinOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    studentId?: SortOrder
    certificateUrl?: SortOrder
    issuedAt?: SortOrder
    grade?: SortOrder
    completedAt?: SortOrder
  }

  export type ModuleCertificateSumOrderByAggregateInput = {
    grade?: SortOrder
  }

  export type ProfileCreateskillsInput = {
    set: string[]
  }

  export type ProfileCreateinterestsInput = {
    set: string[]
  }

  export type ProfileCreatespecializationInput = {
    set: string[]
  }

  export type ContactCreateNestedManyWithoutUserInput = {
    create?: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput> | ContactCreateWithoutUserInput[] | ContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUserInput | ContactCreateOrConnectWithoutUserInput[]
    createMany?: ContactCreateManyUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type ContactCreateNestedManyWithoutContactInput = {
    create?: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput> | ContactCreateWithoutContactInput[] | ContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutContactInput | ContactCreateOrConnectWithoutContactInput[]
    createMany?: ContactCreateManyContactInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CertificateCreateNestedManyWithoutUserInput = {
    create?: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput> | CertificateCreateWithoutUserInput[] | CertificateUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutUserInput | CertificateCreateOrConnectWithoutUserInput[]
    createMany?: CertificateCreateManyUserInputEnvelope
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
  }

  export type CourseEnrollmentCreateNestedManyWithoutStudentInput = {
    create?: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput> | CourseEnrollmentCreateWithoutStudentInput[] | CourseEnrollmentUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutStudentInput | CourseEnrollmentCreateOrConnectWithoutStudentInput[]
    createMany?: CourseEnrollmentCreateManyStudentInputEnvelope
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
  }

  export type CourseCreateNestedManyWithoutInstructorInput = {
    create?: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput> | CourseCreateWithoutInstructorInput[] | CourseUncheckedCreateWithoutInstructorInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutInstructorInput | CourseCreateOrConnectWithoutInstructorInput[]
    createMany?: CourseCreateManyInstructorInputEnvelope
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
  }

  export type DiscussionCreateNestedManyWithoutUserInput = {
    create?: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput> | DiscussionCreateWithoutUserInput[] | DiscussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutUserInput | DiscussionCreateOrConnectWithoutUserInput[]
    createMany?: DiscussionCreateManyUserInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type EntrepreneurshipCreateNestedManyWithoutOwnerInput = {
    create?: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput> | EntrepreneurshipCreateWithoutOwnerInput[] | EntrepreneurshipUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutOwnerInput | EntrepreneurshipCreateOrConnectWithoutOwnerInput[]
    createMany?: EntrepreneurshipCreateManyOwnerInputEnvelope
    connect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
  }

  export type JobApplicationCreateNestedManyWithoutApplicantInput = {
    create?: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput> | JobApplicationCreateWithoutApplicantInput[] | JobApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutApplicantInput | JobApplicationCreateOrConnectWithoutApplicantInput[]
    createMany?: JobApplicationCreateManyApplicantInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type NewsArticleCreateNestedManyWithoutAuthorInput = {
    create?: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput> | NewsArticleCreateWithoutAuthorInput[] | NewsArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsArticleCreateOrConnectWithoutAuthorInput | NewsArticleCreateOrConnectWithoutAuthorInput[]
    createMany?: NewsArticleCreateManyAuthorInputEnvelope
    connect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
  }

  export type NewsCommentCreateNestedManyWithoutUserInput = {
    create?: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput> | NewsCommentCreateWithoutUserInput[] | NewsCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutUserInput | NewsCommentCreateOrConnectWithoutUserInput[]
    createMany?: NewsCommentCreateManyUserInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutProfilesInput = {
    create?: XOR<CompanyCreateWithoutProfilesInput, CompanyUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutProfilesInput
    connect?: CompanyWhereUniqueInput
  }

  export type QuizAttemptCreateNestedManyWithoutStudentInput = {
    create?: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput> | QuizAttemptCreateWithoutStudentInput[] | QuizAttemptUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutStudentInput | QuizAttemptCreateOrConnectWithoutStudentInput[]
    createMany?: QuizAttemptCreateManyStudentInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type StudentNoteCreateNestedManyWithoutUserInput = {
    create?: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput> | StudentNoteCreateWithoutUserInput[] | StudentNoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutUserInput | StudentNoteCreateOrConnectWithoutUserInput[]
    createMany?: StudentNoteCreateManyUserInputEnvelope
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
  }

  export type ModuleCertificateCreateNestedManyWithoutStudentInput = {
    create?: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput> | ModuleCertificateCreateWithoutStudentInput[] | ModuleCertificateUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutStudentInput | ModuleCertificateCreateOrConnectWithoutStudentInput[]
    createMany?: ModuleCertificateCreateManyStudentInputEnvelope
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput> | ContactCreateWithoutUserInput[] | ContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUserInput | ContactCreateOrConnectWithoutUserInput[]
    createMany?: ContactCreateManyUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput> | ContactCreateWithoutContactInput[] | ContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutContactInput | ContactCreateOrConnectWithoutContactInput[]
    createMany?: ContactCreateManyContactInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type CertificateUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput> | CertificateCreateWithoutUserInput[] | CertificateUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutUserInput | CertificateCreateOrConnectWithoutUserInput[]
    createMany?: CertificateCreateManyUserInputEnvelope
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
  }

  export type CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput = {
    create?: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput> | CourseEnrollmentCreateWithoutStudentInput[] | CourseEnrollmentUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutStudentInput | CourseEnrollmentCreateOrConnectWithoutStudentInput[]
    createMany?: CourseEnrollmentCreateManyStudentInputEnvelope
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
  }

  export type CourseUncheckedCreateNestedManyWithoutInstructorInput = {
    create?: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput> | CourseCreateWithoutInstructorInput[] | CourseUncheckedCreateWithoutInstructorInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutInstructorInput | CourseCreateOrConnectWithoutInstructorInput[]
    createMany?: CourseCreateManyInstructorInputEnvelope
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
  }

  export type DiscussionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput> | DiscussionCreateWithoutUserInput[] | DiscussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutUserInput | DiscussionCreateOrConnectWithoutUserInput[]
    createMany?: DiscussionCreateManyUserInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput> | EntrepreneurshipCreateWithoutOwnerInput[] | EntrepreneurshipUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutOwnerInput | EntrepreneurshipCreateOrConnectWithoutOwnerInput[]
    createMany?: EntrepreneurshipCreateManyOwnerInputEnvelope
    connect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
  }

  export type JobApplicationUncheckedCreateNestedManyWithoutApplicantInput = {
    create?: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput> | JobApplicationCreateWithoutApplicantInput[] | JobApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutApplicantInput | JobApplicationCreateOrConnectWithoutApplicantInput[]
    createMany?: JobApplicationCreateManyApplicantInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type NewsArticleUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput> | NewsArticleCreateWithoutAuthorInput[] | NewsArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsArticleCreateOrConnectWithoutAuthorInput | NewsArticleCreateOrConnectWithoutAuthorInput[]
    createMany?: NewsArticleCreateManyAuthorInputEnvelope
    connect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
  }

  export type NewsCommentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput> | NewsCommentCreateWithoutUserInput[] | NewsCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutUserInput | NewsCommentCreateOrConnectWithoutUserInput[]
    createMany?: NewsCommentCreateManyUserInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type QuizAttemptUncheckedCreateNestedManyWithoutStudentInput = {
    create?: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput> | QuizAttemptCreateWithoutStudentInput[] | QuizAttemptUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutStudentInput | QuizAttemptCreateOrConnectWithoutStudentInput[]
    createMany?: QuizAttemptCreateManyStudentInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type StudentNoteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput> | StudentNoteCreateWithoutUserInput[] | StudentNoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutUserInput | StudentNoteCreateOrConnectWithoutUserInput[]
    createMany?: StudentNoteCreateManyUserInputEnvelope
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
  }

  export type ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput = {
    create?: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput> | ModuleCertificateCreateWithoutStudentInput[] | ModuleCertificateUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutStudentInput | ModuleCertificateCreateOrConnectWithoutStudentInput[]
    createMany?: ModuleCertificateCreateManyStudentInputEnvelope
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumEducationLevelFieldUpdateOperationsInput = {
    set?: $Enums.EducationLevel | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProfileUpdateskillsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProfileUpdateinterestsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableEnumCompanySizeFieldUpdateOperationsInput = {
    set?: $Enums.CompanySize | null
  }

  export type ProfileUpdatespecializationInput = {
    set?: string[]
    push?: string | string[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ContactUpdateManyWithoutUserNestedInput = {
    create?: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput> | ContactCreateWithoutUserInput[] | ContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUserInput | ContactCreateOrConnectWithoutUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutUserInput | ContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ContactCreateManyUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutUserInput | ContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutUserInput | ContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type ContactUpdateManyWithoutContactNestedInput = {
    create?: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput> | ContactCreateWithoutContactInput[] | ContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutContactInput | ContactCreateOrConnectWithoutContactInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutContactInput | ContactUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: ContactCreateManyContactInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutContactInput | ContactUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutContactInput | ContactUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CertificateUpdateManyWithoutUserNestedInput = {
    create?: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput> | CertificateCreateWithoutUserInput[] | CertificateUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutUserInput | CertificateCreateOrConnectWithoutUserInput[]
    upsert?: CertificateUpsertWithWhereUniqueWithoutUserInput | CertificateUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CertificateCreateManyUserInputEnvelope
    set?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    disconnect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    delete?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    update?: CertificateUpdateWithWhereUniqueWithoutUserInput | CertificateUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CertificateUpdateManyWithWhereWithoutUserInput | CertificateUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
  }

  export type CourseEnrollmentUpdateManyWithoutStudentNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput> | CourseEnrollmentCreateWithoutStudentInput[] | CourseEnrollmentUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutStudentInput | CourseEnrollmentCreateOrConnectWithoutStudentInput[]
    upsert?: CourseEnrollmentUpsertWithWhereUniqueWithoutStudentInput | CourseEnrollmentUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: CourseEnrollmentCreateManyStudentInputEnvelope
    set?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    disconnect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    delete?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    update?: CourseEnrollmentUpdateWithWhereUniqueWithoutStudentInput | CourseEnrollmentUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: CourseEnrollmentUpdateManyWithWhereWithoutStudentInput | CourseEnrollmentUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
  }

  export type CourseUpdateManyWithoutInstructorNestedInput = {
    create?: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput> | CourseCreateWithoutInstructorInput[] | CourseUncheckedCreateWithoutInstructorInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutInstructorInput | CourseCreateOrConnectWithoutInstructorInput[]
    upsert?: CourseUpsertWithWhereUniqueWithoutInstructorInput | CourseUpsertWithWhereUniqueWithoutInstructorInput[]
    createMany?: CourseCreateManyInstructorInputEnvelope
    set?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    disconnect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    delete?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    update?: CourseUpdateWithWhereUniqueWithoutInstructorInput | CourseUpdateWithWhereUniqueWithoutInstructorInput[]
    updateMany?: CourseUpdateManyWithWhereWithoutInstructorInput | CourseUpdateManyWithWhereWithoutInstructorInput[]
    deleteMany?: CourseScalarWhereInput | CourseScalarWhereInput[]
  }

  export type DiscussionUpdateManyWithoutUserNestedInput = {
    create?: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput> | DiscussionCreateWithoutUserInput[] | DiscussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutUserInput | DiscussionCreateOrConnectWithoutUserInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutUserInput | DiscussionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DiscussionCreateManyUserInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutUserInput | DiscussionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutUserInput | DiscussionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type EntrepreneurshipUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput> | EntrepreneurshipCreateWithoutOwnerInput[] | EntrepreneurshipUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutOwnerInput | EntrepreneurshipCreateOrConnectWithoutOwnerInput[]
    upsert?: EntrepreneurshipUpsertWithWhereUniqueWithoutOwnerInput | EntrepreneurshipUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: EntrepreneurshipCreateManyOwnerInputEnvelope
    set?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    disconnect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    delete?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    connect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    update?: EntrepreneurshipUpdateWithWhereUniqueWithoutOwnerInput | EntrepreneurshipUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: EntrepreneurshipUpdateManyWithWhereWithoutOwnerInput | EntrepreneurshipUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: EntrepreneurshipScalarWhereInput | EntrepreneurshipScalarWhereInput[]
  }

  export type JobApplicationUpdateManyWithoutApplicantNestedInput = {
    create?: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput> | JobApplicationCreateWithoutApplicantInput[] | JobApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutApplicantInput | JobApplicationCreateOrConnectWithoutApplicantInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutApplicantInput | JobApplicationUpsertWithWhereUniqueWithoutApplicantInput[]
    createMany?: JobApplicationCreateManyApplicantInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutApplicantInput | JobApplicationUpdateWithWhereUniqueWithoutApplicantInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutApplicantInput | JobApplicationUpdateManyWithWhereWithoutApplicantInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type NewsArticleUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput> | NewsArticleCreateWithoutAuthorInput[] | NewsArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsArticleCreateOrConnectWithoutAuthorInput | NewsArticleCreateOrConnectWithoutAuthorInput[]
    upsert?: NewsArticleUpsertWithWhereUniqueWithoutAuthorInput | NewsArticleUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: NewsArticleCreateManyAuthorInputEnvelope
    set?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    disconnect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    delete?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    connect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    update?: NewsArticleUpdateWithWhereUniqueWithoutAuthorInput | NewsArticleUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: NewsArticleUpdateManyWithWhereWithoutAuthorInput | NewsArticleUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: NewsArticleScalarWhereInput | NewsArticleScalarWhereInput[]
  }

  export type NewsCommentUpdateManyWithoutUserNestedInput = {
    create?: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput> | NewsCommentCreateWithoutUserInput[] | NewsCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutUserInput | NewsCommentCreateOrConnectWithoutUserInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutUserInput | NewsCommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NewsCommentCreateManyUserInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutUserInput | NewsCommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutUserInput | NewsCommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type CompanyUpdateOneWithoutProfilesNestedInput = {
    create?: XOR<CompanyCreateWithoutProfilesInput, CompanyUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutProfilesInput
    upsert?: CompanyUpsertWithoutProfilesInput
    disconnect?: CompanyWhereInput | boolean
    delete?: CompanyWhereInput | boolean
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutProfilesInput, CompanyUpdateWithoutProfilesInput>, CompanyUncheckedUpdateWithoutProfilesInput>
  }

  export type QuizAttemptUpdateManyWithoutStudentNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput> | QuizAttemptCreateWithoutStudentInput[] | QuizAttemptUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutStudentInput | QuizAttemptCreateOrConnectWithoutStudentInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutStudentInput | QuizAttemptUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: QuizAttemptCreateManyStudentInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutStudentInput | QuizAttemptUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutStudentInput | QuizAttemptUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type StudentNoteUpdateManyWithoutUserNestedInput = {
    create?: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput> | StudentNoteCreateWithoutUserInput[] | StudentNoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutUserInput | StudentNoteCreateOrConnectWithoutUserInput[]
    upsert?: StudentNoteUpsertWithWhereUniqueWithoutUserInput | StudentNoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: StudentNoteCreateManyUserInputEnvelope
    set?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    disconnect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    delete?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    update?: StudentNoteUpdateWithWhereUniqueWithoutUserInput | StudentNoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: StudentNoteUpdateManyWithWhereWithoutUserInput | StudentNoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
  }

  export type ModuleCertificateUpdateManyWithoutStudentNestedInput = {
    create?: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput> | ModuleCertificateCreateWithoutStudentInput[] | ModuleCertificateUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutStudentInput | ModuleCertificateCreateOrConnectWithoutStudentInput[]
    upsert?: ModuleCertificateUpsertWithWhereUniqueWithoutStudentInput | ModuleCertificateUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: ModuleCertificateCreateManyStudentInputEnvelope
    set?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    disconnect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    delete?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    update?: ModuleCertificateUpdateWithWhereUniqueWithoutStudentInput | ModuleCertificateUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: ModuleCertificateUpdateManyWithWhereWithoutStudentInput | ModuleCertificateUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput> | ContactCreateWithoutUserInput[] | ContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUserInput | ContactCreateOrConnectWithoutUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutUserInput | ContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ContactCreateManyUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutUserInput | ContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutUserInput | ContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput> | ContactCreateWithoutContactInput[] | ContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutContactInput | ContactCreateOrConnectWithoutContactInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutContactInput | ContactUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: ContactCreateManyContactInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutContactInput | ContactUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutContactInput | ContactUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type CertificateUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput> | CertificateCreateWithoutUserInput[] | CertificateUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutUserInput | CertificateCreateOrConnectWithoutUserInput[]
    upsert?: CertificateUpsertWithWhereUniqueWithoutUserInput | CertificateUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CertificateCreateManyUserInputEnvelope
    set?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    disconnect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    delete?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    update?: CertificateUpdateWithWhereUniqueWithoutUserInput | CertificateUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CertificateUpdateManyWithWhereWithoutUserInput | CertificateUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
  }

  export type CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput> | CourseEnrollmentCreateWithoutStudentInput[] | CourseEnrollmentUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutStudentInput | CourseEnrollmentCreateOrConnectWithoutStudentInput[]
    upsert?: CourseEnrollmentUpsertWithWhereUniqueWithoutStudentInput | CourseEnrollmentUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: CourseEnrollmentCreateManyStudentInputEnvelope
    set?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    disconnect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    delete?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    update?: CourseEnrollmentUpdateWithWhereUniqueWithoutStudentInput | CourseEnrollmentUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: CourseEnrollmentUpdateManyWithWhereWithoutStudentInput | CourseEnrollmentUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
  }

  export type CourseUncheckedUpdateManyWithoutInstructorNestedInput = {
    create?: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput> | CourseCreateWithoutInstructorInput[] | CourseUncheckedCreateWithoutInstructorInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutInstructorInput | CourseCreateOrConnectWithoutInstructorInput[]
    upsert?: CourseUpsertWithWhereUniqueWithoutInstructorInput | CourseUpsertWithWhereUniqueWithoutInstructorInput[]
    createMany?: CourseCreateManyInstructorInputEnvelope
    set?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    disconnect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    delete?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    update?: CourseUpdateWithWhereUniqueWithoutInstructorInput | CourseUpdateWithWhereUniqueWithoutInstructorInput[]
    updateMany?: CourseUpdateManyWithWhereWithoutInstructorInput | CourseUpdateManyWithWhereWithoutInstructorInput[]
    deleteMany?: CourseScalarWhereInput | CourseScalarWhereInput[]
  }

  export type DiscussionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput> | DiscussionCreateWithoutUserInput[] | DiscussionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutUserInput | DiscussionCreateOrConnectWithoutUserInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutUserInput | DiscussionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DiscussionCreateManyUserInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutUserInput | DiscussionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutUserInput | DiscussionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput> | EntrepreneurshipCreateWithoutOwnerInput[] | EntrepreneurshipUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutOwnerInput | EntrepreneurshipCreateOrConnectWithoutOwnerInput[]
    upsert?: EntrepreneurshipUpsertWithWhereUniqueWithoutOwnerInput | EntrepreneurshipUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: EntrepreneurshipCreateManyOwnerInputEnvelope
    set?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    disconnect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    delete?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    connect?: EntrepreneurshipWhereUniqueInput | EntrepreneurshipWhereUniqueInput[]
    update?: EntrepreneurshipUpdateWithWhereUniqueWithoutOwnerInput | EntrepreneurshipUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: EntrepreneurshipUpdateManyWithWhereWithoutOwnerInput | EntrepreneurshipUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: EntrepreneurshipScalarWhereInput | EntrepreneurshipScalarWhereInput[]
  }

  export type JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput = {
    create?: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput> | JobApplicationCreateWithoutApplicantInput[] | JobApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutApplicantInput | JobApplicationCreateOrConnectWithoutApplicantInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutApplicantInput | JobApplicationUpsertWithWhereUniqueWithoutApplicantInput[]
    createMany?: JobApplicationCreateManyApplicantInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutApplicantInput | JobApplicationUpdateWithWhereUniqueWithoutApplicantInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutApplicantInput | JobApplicationUpdateManyWithWhereWithoutApplicantInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput> | NewsArticleCreateWithoutAuthorInput[] | NewsArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsArticleCreateOrConnectWithoutAuthorInput | NewsArticleCreateOrConnectWithoutAuthorInput[]
    upsert?: NewsArticleUpsertWithWhereUniqueWithoutAuthorInput | NewsArticleUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: NewsArticleCreateManyAuthorInputEnvelope
    set?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    disconnect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    delete?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    connect?: NewsArticleWhereUniqueInput | NewsArticleWhereUniqueInput[]
    update?: NewsArticleUpdateWithWhereUniqueWithoutAuthorInput | NewsArticleUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: NewsArticleUpdateManyWithWhereWithoutAuthorInput | NewsArticleUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: NewsArticleScalarWhereInput | NewsArticleScalarWhereInput[]
  }

  export type NewsCommentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput> | NewsCommentCreateWithoutUserInput[] | NewsCommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutUserInput | NewsCommentCreateOrConnectWithoutUserInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutUserInput | NewsCommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NewsCommentCreateManyUserInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutUserInput | NewsCommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutUserInput | NewsCommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput> | QuizAttemptCreateWithoutStudentInput[] | QuizAttemptUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutStudentInput | QuizAttemptCreateOrConnectWithoutStudentInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutStudentInput | QuizAttemptUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: QuizAttemptCreateManyStudentInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutStudentInput | QuizAttemptUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutStudentInput | QuizAttemptUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type StudentNoteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput> | StudentNoteCreateWithoutUserInput[] | StudentNoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutUserInput | StudentNoteCreateOrConnectWithoutUserInput[]
    upsert?: StudentNoteUpsertWithWhereUniqueWithoutUserInput | StudentNoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: StudentNoteCreateManyUserInputEnvelope
    set?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    disconnect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    delete?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    update?: StudentNoteUpdateWithWhereUniqueWithoutUserInput | StudentNoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: StudentNoteUpdateManyWithWhereWithoutUserInput | StudentNoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
  }

  export type ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput = {
    create?: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput> | ModuleCertificateCreateWithoutStudentInput[] | ModuleCertificateUncheckedCreateWithoutStudentInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutStudentInput | ModuleCertificateCreateOrConnectWithoutStudentInput[]
    upsert?: ModuleCertificateUpsertWithWhereUniqueWithoutStudentInput | ModuleCertificateUpsertWithWhereUniqueWithoutStudentInput[]
    createMany?: ModuleCertificateCreateManyStudentInputEnvelope
    set?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    disconnect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    delete?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    update?: ModuleCertificateUpdateWithWhereUniqueWithoutStudentInput | ModuleCertificateUpdateWithWhereUniqueWithoutStudentInput[]
    updateMany?: ModuleCertificateUpdateManyWithWhereWithoutStudentInput | ModuleCertificateUpdateManyWithWhereWithoutStudentInput[]
    deleteMany?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
  }

  export type JobOfferCreateimagesInput = {
    set: string[]
  }

  export type JobOfferCreateskillsRequiredInput = {
    set: string[]
  }

  export type JobOfferCreatedesiredSkillsInput = {
    set: string[]
  }

  export type JobApplicationCreateNestedManyWithoutJobOfferInput = {
    create?: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput> | JobApplicationCreateWithoutJobOfferInput[] | JobApplicationUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutJobOfferInput | JobApplicationCreateOrConnectWithoutJobOfferInput[]
    createMany?: JobApplicationCreateManyJobOfferInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutJobOffersInput = {
    create?: XOR<CompanyCreateWithoutJobOffersInput, CompanyUncheckedCreateWithoutJobOffersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobOffersInput
    connect?: CompanyWhereUniqueInput
  }

  export type JobQuestionCreateNestedManyWithoutJobOfferInput = {
    create?: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput> | JobQuestionCreateWithoutJobOfferInput[] | JobQuestionUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobQuestionCreateOrConnectWithoutJobOfferInput | JobQuestionCreateOrConnectWithoutJobOfferInput[]
    createMany?: JobQuestionCreateManyJobOfferInputEnvelope
    connect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
  }

  export type JobApplicationUncheckedCreateNestedManyWithoutJobOfferInput = {
    create?: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput> | JobApplicationCreateWithoutJobOfferInput[] | JobApplicationUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutJobOfferInput | JobApplicationCreateOrConnectWithoutJobOfferInput[]
    createMany?: JobApplicationCreateManyJobOfferInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type JobQuestionUncheckedCreateNestedManyWithoutJobOfferInput = {
    create?: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput> | JobQuestionCreateWithoutJobOfferInput[] | JobQuestionUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobQuestionCreateOrConnectWithoutJobOfferInput | JobQuestionCreateOrConnectWithoutJobOfferInput[]
    createMany?: JobQuestionCreateManyJobOfferInputEnvelope
    connect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumContractTypeFieldUpdateOperationsInput = {
    set?: $Enums.ContractType
  }

  export type EnumWorkModalityFieldUpdateOperationsInput = {
    set?: $Enums.WorkModality
  }

  export type JobOfferUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumExperienceLevelFieldUpdateOperationsInput = {
    set?: $Enums.ExperienceLevel
  }

  export type JobOfferUpdateskillsRequiredInput = {
    set?: string[]
    push?: string | string[]
  }

  export type JobOfferUpdatedesiredSkillsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumJobStatusFieldUpdateOperationsInput = {
    set?: $Enums.JobStatus
  }

  export type JobApplicationUpdateManyWithoutJobOfferNestedInput = {
    create?: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput> | JobApplicationCreateWithoutJobOfferInput[] | JobApplicationUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutJobOfferInput | JobApplicationCreateOrConnectWithoutJobOfferInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutJobOfferInput | JobApplicationUpsertWithWhereUniqueWithoutJobOfferInput[]
    createMany?: JobApplicationCreateManyJobOfferInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutJobOfferInput | JobApplicationUpdateWithWhereUniqueWithoutJobOfferInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutJobOfferInput | JobApplicationUpdateManyWithWhereWithoutJobOfferInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type CompanyUpdateOneRequiredWithoutJobOffersNestedInput = {
    create?: XOR<CompanyCreateWithoutJobOffersInput, CompanyUncheckedCreateWithoutJobOffersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobOffersInput
    upsert?: CompanyUpsertWithoutJobOffersInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutJobOffersInput, CompanyUpdateWithoutJobOffersInput>, CompanyUncheckedUpdateWithoutJobOffersInput>
  }

  export type JobQuestionUpdateManyWithoutJobOfferNestedInput = {
    create?: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput> | JobQuestionCreateWithoutJobOfferInput[] | JobQuestionUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobQuestionCreateOrConnectWithoutJobOfferInput | JobQuestionCreateOrConnectWithoutJobOfferInput[]
    upsert?: JobQuestionUpsertWithWhereUniqueWithoutJobOfferInput | JobQuestionUpsertWithWhereUniqueWithoutJobOfferInput[]
    createMany?: JobQuestionCreateManyJobOfferInputEnvelope
    set?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    disconnect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    delete?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    connect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    update?: JobQuestionUpdateWithWhereUniqueWithoutJobOfferInput | JobQuestionUpdateWithWhereUniqueWithoutJobOfferInput[]
    updateMany?: JobQuestionUpdateManyWithWhereWithoutJobOfferInput | JobQuestionUpdateManyWithWhereWithoutJobOfferInput[]
    deleteMany?: JobQuestionScalarWhereInput | JobQuestionScalarWhereInput[]
  }

  export type JobApplicationUncheckedUpdateManyWithoutJobOfferNestedInput = {
    create?: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput> | JobApplicationCreateWithoutJobOfferInput[] | JobApplicationUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutJobOfferInput | JobApplicationCreateOrConnectWithoutJobOfferInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutJobOfferInput | JobApplicationUpsertWithWhereUniqueWithoutJobOfferInput[]
    createMany?: JobApplicationCreateManyJobOfferInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutJobOfferInput | JobApplicationUpdateWithWhereUniqueWithoutJobOfferInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutJobOfferInput | JobApplicationUpdateManyWithWhereWithoutJobOfferInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type JobQuestionUncheckedUpdateManyWithoutJobOfferNestedInput = {
    create?: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput> | JobQuestionCreateWithoutJobOfferInput[] | JobQuestionUncheckedCreateWithoutJobOfferInput[]
    connectOrCreate?: JobQuestionCreateOrConnectWithoutJobOfferInput | JobQuestionCreateOrConnectWithoutJobOfferInput[]
    upsert?: JobQuestionUpsertWithWhereUniqueWithoutJobOfferInput | JobQuestionUpsertWithWhereUniqueWithoutJobOfferInput[]
    createMany?: JobQuestionCreateManyJobOfferInputEnvelope
    set?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    disconnect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    delete?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    connect?: JobQuestionWhereUniqueInput | JobQuestionWhereUniqueInput[]
    update?: JobQuestionUpdateWithWhereUniqueWithoutJobOfferInput | JobQuestionUpdateWithWhereUniqueWithoutJobOfferInput[]
    updateMany?: JobQuestionUpdateManyWithWhereWithoutJobOfferInput | JobQuestionUpdateManyWithWhereWithoutJobOfferInput[]
    deleteMany?: JobQuestionScalarWhereInput | JobQuestionScalarWhereInput[]
  }

  export type JobQuestionCreateoptionsInput = {
    set: string[]
  }

  export type JobQuestionAnswerCreateNestedManyWithoutQuestionInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput> | JobQuestionAnswerCreateWithoutQuestionInput[] | JobQuestionAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutQuestionInput | JobQuestionAnswerCreateOrConnectWithoutQuestionInput[]
    createMany?: JobQuestionAnswerCreateManyQuestionInputEnvelope
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
  }

  export type JobOfferCreateNestedOneWithoutJobQuestionsInput = {
    create?: XOR<JobOfferCreateWithoutJobQuestionsInput, JobOfferUncheckedCreateWithoutJobQuestionsInput>
    connectOrCreate?: JobOfferCreateOrConnectWithoutJobQuestionsInput
    connect?: JobOfferWhereUniqueInput
  }

  export type JobQuestionAnswerUncheckedCreateNestedManyWithoutQuestionInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput> | JobQuestionAnswerCreateWithoutQuestionInput[] | JobQuestionAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutQuestionInput | JobQuestionAnswerCreateOrConnectWithoutQuestionInput[]
    createMany?: JobQuestionAnswerCreateManyQuestionInputEnvelope
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
  }

  export type JobQuestionUpdateoptionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type JobQuestionAnswerUpdateManyWithoutQuestionNestedInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput> | JobQuestionAnswerCreateWithoutQuestionInput[] | JobQuestionAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutQuestionInput | JobQuestionAnswerCreateOrConnectWithoutQuestionInput[]
    upsert?: JobQuestionAnswerUpsertWithWhereUniqueWithoutQuestionInput | JobQuestionAnswerUpsertWithWhereUniqueWithoutQuestionInput[]
    createMany?: JobQuestionAnswerCreateManyQuestionInputEnvelope
    set?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    disconnect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    delete?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    update?: JobQuestionAnswerUpdateWithWhereUniqueWithoutQuestionInput | JobQuestionAnswerUpdateWithWhereUniqueWithoutQuestionInput[]
    updateMany?: JobQuestionAnswerUpdateManyWithWhereWithoutQuestionInput | JobQuestionAnswerUpdateManyWithWhereWithoutQuestionInput[]
    deleteMany?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
  }

  export type JobOfferUpdateOneRequiredWithoutJobQuestionsNestedInput = {
    create?: XOR<JobOfferCreateWithoutJobQuestionsInput, JobOfferUncheckedCreateWithoutJobQuestionsInput>
    connectOrCreate?: JobOfferCreateOrConnectWithoutJobQuestionsInput
    upsert?: JobOfferUpsertWithoutJobQuestionsInput
    connect?: JobOfferWhereUniqueInput
    update?: XOR<XOR<JobOfferUpdateToOneWithWhereWithoutJobQuestionsInput, JobOfferUpdateWithoutJobQuestionsInput>, JobOfferUncheckedUpdateWithoutJobQuestionsInput>
  }

  export type JobQuestionAnswerUncheckedUpdateManyWithoutQuestionNestedInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput> | JobQuestionAnswerCreateWithoutQuestionInput[] | JobQuestionAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutQuestionInput | JobQuestionAnswerCreateOrConnectWithoutQuestionInput[]
    upsert?: JobQuestionAnswerUpsertWithWhereUniqueWithoutQuestionInput | JobQuestionAnswerUpsertWithWhereUniqueWithoutQuestionInput[]
    createMany?: JobQuestionAnswerCreateManyQuestionInputEnvelope
    set?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    disconnect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    delete?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    update?: JobQuestionAnswerUpdateWithWhereUniqueWithoutQuestionInput | JobQuestionAnswerUpdateWithWhereUniqueWithoutQuestionInput[]
    updateMany?: JobQuestionAnswerUpdateManyWithWhereWithoutQuestionInput | JobQuestionAnswerUpdateManyWithWhereWithoutQuestionInput[]
    deleteMany?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutJobApplicationsInput = {
    create?: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutJobApplicationsInput
    connect?: ProfileWhereUniqueInput
  }

  export type JobOfferCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<JobOfferCreateWithoutApplicationsInput, JobOfferUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: JobOfferCreateOrConnectWithoutApplicationsInput
    connect?: JobOfferWhereUniqueInput
  }

  export type JobQuestionAnswerCreateNestedManyWithoutApplicationInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput> | JobQuestionAnswerCreateWithoutApplicationInput[] | JobQuestionAnswerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutApplicationInput | JobQuestionAnswerCreateOrConnectWithoutApplicationInput[]
    createMany?: JobQuestionAnswerCreateManyApplicationInputEnvelope
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
  }

  export type JobApplicationMessageCreateNestedManyWithoutApplicationInput = {
    create?: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput> | JobApplicationMessageCreateWithoutApplicationInput[] | JobApplicationMessageUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobApplicationMessageCreateOrConnectWithoutApplicationInput | JobApplicationMessageCreateOrConnectWithoutApplicationInput[]
    createMany?: JobApplicationMessageCreateManyApplicationInputEnvelope
    connect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
  }

  export type JobQuestionAnswerUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput> | JobQuestionAnswerCreateWithoutApplicationInput[] | JobQuestionAnswerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutApplicationInput | JobQuestionAnswerCreateOrConnectWithoutApplicationInput[]
    createMany?: JobQuestionAnswerCreateManyApplicationInputEnvelope
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
  }

  export type JobApplicationMessageUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput> | JobApplicationMessageCreateWithoutApplicationInput[] | JobApplicationMessageUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobApplicationMessageCreateOrConnectWithoutApplicationInput | JobApplicationMessageCreateOrConnectWithoutApplicationInput[]
    createMany?: JobApplicationMessageCreateManyApplicationInputEnvelope
    connect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
  }

  export type EnumApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationStatus
  }

  export type ProfileUpdateOneRequiredWithoutJobApplicationsNestedInput = {
    create?: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutJobApplicationsInput
    upsert?: ProfileUpsertWithoutJobApplicationsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutJobApplicationsInput, ProfileUpdateWithoutJobApplicationsInput>, ProfileUncheckedUpdateWithoutJobApplicationsInput>
  }

  export type JobOfferUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<JobOfferCreateWithoutApplicationsInput, JobOfferUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: JobOfferCreateOrConnectWithoutApplicationsInput
    upsert?: JobOfferUpsertWithoutApplicationsInput
    connect?: JobOfferWhereUniqueInput
    update?: XOR<XOR<JobOfferUpdateToOneWithWhereWithoutApplicationsInput, JobOfferUpdateWithoutApplicationsInput>, JobOfferUncheckedUpdateWithoutApplicationsInput>
  }

  export type JobQuestionAnswerUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput> | JobQuestionAnswerCreateWithoutApplicationInput[] | JobQuestionAnswerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutApplicationInput | JobQuestionAnswerCreateOrConnectWithoutApplicationInput[]
    upsert?: JobQuestionAnswerUpsertWithWhereUniqueWithoutApplicationInput | JobQuestionAnswerUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: JobQuestionAnswerCreateManyApplicationInputEnvelope
    set?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    disconnect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    delete?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    update?: JobQuestionAnswerUpdateWithWhereUniqueWithoutApplicationInput | JobQuestionAnswerUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: JobQuestionAnswerUpdateManyWithWhereWithoutApplicationInput | JobQuestionAnswerUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
  }

  export type JobApplicationMessageUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput> | JobApplicationMessageCreateWithoutApplicationInput[] | JobApplicationMessageUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobApplicationMessageCreateOrConnectWithoutApplicationInput | JobApplicationMessageCreateOrConnectWithoutApplicationInput[]
    upsert?: JobApplicationMessageUpsertWithWhereUniqueWithoutApplicationInput | JobApplicationMessageUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: JobApplicationMessageCreateManyApplicationInputEnvelope
    set?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    disconnect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    delete?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    connect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    update?: JobApplicationMessageUpdateWithWhereUniqueWithoutApplicationInput | JobApplicationMessageUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: JobApplicationMessageUpdateManyWithWhereWithoutApplicationInput | JobApplicationMessageUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: JobApplicationMessageScalarWhereInput | JobApplicationMessageScalarWhereInput[]
  }

  export type JobQuestionAnswerUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput> | JobQuestionAnswerCreateWithoutApplicationInput[] | JobQuestionAnswerUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobQuestionAnswerCreateOrConnectWithoutApplicationInput | JobQuestionAnswerCreateOrConnectWithoutApplicationInput[]
    upsert?: JobQuestionAnswerUpsertWithWhereUniqueWithoutApplicationInput | JobQuestionAnswerUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: JobQuestionAnswerCreateManyApplicationInputEnvelope
    set?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    disconnect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    delete?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    connect?: JobQuestionAnswerWhereUniqueInput | JobQuestionAnswerWhereUniqueInput[]
    update?: JobQuestionAnswerUpdateWithWhereUniqueWithoutApplicationInput | JobQuestionAnswerUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: JobQuestionAnswerUpdateManyWithWhereWithoutApplicationInput | JobQuestionAnswerUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
  }

  export type JobApplicationMessageUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput> | JobApplicationMessageCreateWithoutApplicationInput[] | JobApplicationMessageUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: JobApplicationMessageCreateOrConnectWithoutApplicationInput | JobApplicationMessageCreateOrConnectWithoutApplicationInput[]
    upsert?: JobApplicationMessageUpsertWithWhereUniqueWithoutApplicationInput | JobApplicationMessageUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: JobApplicationMessageCreateManyApplicationInputEnvelope
    set?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    disconnect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    delete?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    connect?: JobApplicationMessageWhereUniqueInput | JobApplicationMessageWhereUniqueInput[]
    update?: JobApplicationMessageUpdateWithWhereUniqueWithoutApplicationInput | JobApplicationMessageUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: JobApplicationMessageUpdateManyWithWhereWithoutApplicationInput | JobApplicationMessageUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: JobApplicationMessageScalarWhereInput | JobApplicationMessageScalarWhereInput[]
  }

  export type JobApplicationCreateNestedOneWithoutQuestionAnswersInput = {
    create?: XOR<JobApplicationCreateWithoutQuestionAnswersInput, JobApplicationUncheckedCreateWithoutQuestionAnswersInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutQuestionAnswersInput
    connect?: JobApplicationWhereUniqueInput
  }

  export type JobQuestionCreateNestedOneWithoutQuestionAnswersInput = {
    create?: XOR<JobQuestionCreateWithoutQuestionAnswersInput, JobQuestionUncheckedCreateWithoutQuestionAnswersInput>
    connectOrCreate?: JobQuestionCreateOrConnectWithoutQuestionAnswersInput
    connect?: JobQuestionWhereUniqueInput
  }

  export type JobApplicationUpdateOneRequiredWithoutQuestionAnswersNestedInput = {
    create?: XOR<JobApplicationCreateWithoutQuestionAnswersInput, JobApplicationUncheckedCreateWithoutQuestionAnswersInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutQuestionAnswersInput
    upsert?: JobApplicationUpsertWithoutQuestionAnswersInput
    connect?: JobApplicationWhereUniqueInput
    update?: XOR<XOR<JobApplicationUpdateToOneWithWhereWithoutQuestionAnswersInput, JobApplicationUpdateWithoutQuestionAnswersInput>, JobApplicationUncheckedUpdateWithoutQuestionAnswersInput>
  }

  export type JobQuestionUpdateOneRequiredWithoutQuestionAnswersNestedInput = {
    create?: XOR<JobQuestionCreateWithoutQuestionAnswersInput, JobQuestionUncheckedCreateWithoutQuestionAnswersInput>
    connectOrCreate?: JobQuestionCreateOrConnectWithoutQuestionAnswersInput
    upsert?: JobQuestionUpsertWithoutQuestionAnswersInput
    connect?: JobQuestionWhereUniqueInput
    update?: XOR<XOR<JobQuestionUpdateToOneWithWhereWithoutQuestionAnswersInput, JobQuestionUpdateWithoutQuestionAnswersInput>, JobQuestionUncheckedUpdateWithoutQuestionAnswersInput>
  }

  export type JobApplicationCreateNestedOneWithoutMessagesInput = {
    create?: XOR<JobApplicationCreateWithoutMessagesInput, JobApplicationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutMessagesInput
    connect?: JobApplicationWhereUniqueInput
  }

  export type EnumSenderTypeFieldUpdateOperationsInput = {
    set?: $Enums.SenderType
  }

  export type EnumMessageTypeFieldUpdateOperationsInput = {
    set?: $Enums.MessageType
  }

  export type EnumMessageStatusFieldUpdateOperationsInput = {
    set?: $Enums.MessageStatus
  }

  export type JobApplicationUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<JobApplicationCreateWithoutMessagesInput, JobApplicationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutMessagesInput
    upsert?: JobApplicationUpsertWithoutMessagesInput
    connect?: JobApplicationWhereUniqueInput
    update?: XOR<XOR<JobApplicationUpdateToOneWithWhereWithoutMessagesInput, JobApplicationUpdateWithoutMessagesInput>, JobApplicationUncheckedUpdateWithoutMessagesInput>
  }

  export type CourseCreateobjectivesInput = {
    set: string[]
  }

  export type CourseCreateprerequisitesInput = {
    set: string[]
  }

  export type CourseCreatetagsInput = {
    set: string[]
  }

  export type CourseCreateincludedMaterialsInput = {
    set: string[]
  }

  export type CertificateCreateNestedManyWithoutCourseInput = {
    create?: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput> | CertificateCreateWithoutCourseInput[] | CertificateUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutCourseInput | CertificateCreateOrConnectWithoutCourseInput[]
    createMany?: CertificateCreateManyCourseInputEnvelope
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
  }

  export type CourseEnrollmentCreateNestedManyWithoutCourseInput = {
    create?: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput> | CourseEnrollmentCreateWithoutCourseInput[] | CourseEnrollmentUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutCourseInput | CourseEnrollmentCreateOrConnectWithoutCourseInput[]
    createMany?: CourseEnrollmentCreateManyCourseInputEnvelope
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
  }

  export type CourseModuleCreateNestedManyWithoutCourseInput = {
    create?: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput> | CourseModuleCreateWithoutCourseInput[] | CourseModuleUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseModuleCreateOrConnectWithoutCourseInput | CourseModuleCreateOrConnectWithoutCourseInput[]
    createMany?: CourseModuleCreateManyCourseInputEnvelope
    connect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutInstructedCoursesInput = {
    create?: XOR<ProfileCreateWithoutInstructedCoursesInput, ProfileUncheckedCreateWithoutInstructedCoursesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutInstructedCoursesInput
    connect?: ProfileWhereUniqueInput
  }

  export type QuizCreateNestedManyWithoutCourseInput = {
    create?: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput> | QuizCreateWithoutCourseInput[] | QuizUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutCourseInput | QuizCreateOrConnectWithoutCourseInput[]
    createMany?: QuizCreateManyCourseInputEnvelope
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
  }

  export type CertificateUncheckedCreateNestedManyWithoutCourseInput = {
    create?: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput> | CertificateCreateWithoutCourseInput[] | CertificateUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutCourseInput | CertificateCreateOrConnectWithoutCourseInput[]
    createMany?: CertificateCreateManyCourseInputEnvelope
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
  }

  export type CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput = {
    create?: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput> | CourseEnrollmentCreateWithoutCourseInput[] | CourseEnrollmentUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutCourseInput | CourseEnrollmentCreateOrConnectWithoutCourseInput[]
    createMany?: CourseEnrollmentCreateManyCourseInputEnvelope
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
  }

  export type CourseModuleUncheckedCreateNestedManyWithoutCourseInput = {
    create?: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput> | CourseModuleCreateWithoutCourseInput[] | CourseModuleUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseModuleCreateOrConnectWithoutCourseInput | CourseModuleCreateOrConnectWithoutCourseInput[]
    createMany?: CourseModuleCreateManyCourseInputEnvelope
    connect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
  }

  export type QuizUncheckedCreateNestedManyWithoutCourseInput = {
    create?: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput> | QuizCreateWithoutCourseInput[] | QuizUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutCourseInput | QuizCreateOrConnectWithoutCourseInput[]
    createMany?: QuizCreateManyCourseInputEnvelope
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
  }

  export type CourseUpdateobjectivesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CourseUpdateprerequisitesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumCourseLevelFieldUpdateOperationsInput = {
    set?: $Enums.CourseLevel
  }

  export type EnumCourseCategoryFieldUpdateOperationsInput = {
    set?: $Enums.CourseCategory
  }

  export type CourseUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CourseUpdateincludedMaterialsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CertificateUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput> | CertificateCreateWithoutCourseInput[] | CertificateUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutCourseInput | CertificateCreateOrConnectWithoutCourseInput[]
    upsert?: CertificateUpsertWithWhereUniqueWithoutCourseInput | CertificateUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CertificateCreateManyCourseInputEnvelope
    set?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    disconnect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    delete?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    update?: CertificateUpdateWithWhereUniqueWithoutCourseInput | CertificateUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CertificateUpdateManyWithWhereWithoutCourseInput | CertificateUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
  }

  export type CourseEnrollmentUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput> | CourseEnrollmentCreateWithoutCourseInput[] | CourseEnrollmentUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutCourseInput | CourseEnrollmentCreateOrConnectWithoutCourseInput[]
    upsert?: CourseEnrollmentUpsertWithWhereUniqueWithoutCourseInput | CourseEnrollmentUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CourseEnrollmentCreateManyCourseInputEnvelope
    set?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    disconnect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    delete?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    update?: CourseEnrollmentUpdateWithWhereUniqueWithoutCourseInput | CourseEnrollmentUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CourseEnrollmentUpdateManyWithWhereWithoutCourseInput | CourseEnrollmentUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
  }

  export type CourseModuleUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput> | CourseModuleCreateWithoutCourseInput[] | CourseModuleUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseModuleCreateOrConnectWithoutCourseInput | CourseModuleCreateOrConnectWithoutCourseInput[]
    upsert?: CourseModuleUpsertWithWhereUniqueWithoutCourseInput | CourseModuleUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CourseModuleCreateManyCourseInputEnvelope
    set?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    disconnect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    delete?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    connect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    update?: CourseModuleUpdateWithWhereUniqueWithoutCourseInput | CourseModuleUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CourseModuleUpdateManyWithWhereWithoutCourseInput | CourseModuleUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CourseModuleScalarWhereInput | CourseModuleScalarWhereInput[]
  }

  export type ProfileUpdateOneWithoutInstructedCoursesNestedInput = {
    create?: XOR<ProfileCreateWithoutInstructedCoursesInput, ProfileUncheckedCreateWithoutInstructedCoursesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutInstructedCoursesInput
    upsert?: ProfileUpsertWithoutInstructedCoursesInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutInstructedCoursesInput, ProfileUpdateWithoutInstructedCoursesInput>, ProfileUncheckedUpdateWithoutInstructedCoursesInput>
  }

  export type QuizUpdateManyWithoutCourseNestedInput = {
    create?: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput> | QuizCreateWithoutCourseInput[] | QuizUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutCourseInput | QuizCreateOrConnectWithoutCourseInput[]
    upsert?: QuizUpsertWithWhereUniqueWithoutCourseInput | QuizUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: QuizCreateManyCourseInputEnvelope
    set?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    disconnect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    delete?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    update?: QuizUpdateWithWhereUniqueWithoutCourseInput | QuizUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: QuizUpdateManyWithWhereWithoutCourseInput | QuizUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: QuizScalarWhereInput | QuizScalarWhereInput[]
  }

  export type CertificateUncheckedUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput> | CertificateCreateWithoutCourseInput[] | CertificateUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CertificateCreateOrConnectWithoutCourseInput | CertificateCreateOrConnectWithoutCourseInput[]
    upsert?: CertificateUpsertWithWhereUniqueWithoutCourseInput | CertificateUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CertificateCreateManyCourseInputEnvelope
    set?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    disconnect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    delete?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    connect?: CertificateWhereUniqueInput | CertificateWhereUniqueInput[]
    update?: CertificateUpdateWithWhereUniqueWithoutCourseInput | CertificateUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CertificateUpdateManyWithWhereWithoutCourseInput | CertificateUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
  }

  export type CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput> | CourseEnrollmentCreateWithoutCourseInput[] | CourseEnrollmentUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutCourseInput | CourseEnrollmentCreateOrConnectWithoutCourseInput[]
    upsert?: CourseEnrollmentUpsertWithWhereUniqueWithoutCourseInput | CourseEnrollmentUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CourseEnrollmentCreateManyCourseInputEnvelope
    set?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    disconnect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    delete?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    connect?: CourseEnrollmentWhereUniqueInput | CourseEnrollmentWhereUniqueInput[]
    update?: CourseEnrollmentUpdateWithWhereUniqueWithoutCourseInput | CourseEnrollmentUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CourseEnrollmentUpdateManyWithWhereWithoutCourseInput | CourseEnrollmentUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
  }

  export type CourseModuleUncheckedUpdateManyWithoutCourseNestedInput = {
    create?: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput> | CourseModuleCreateWithoutCourseInput[] | CourseModuleUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: CourseModuleCreateOrConnectWithoutCourseInput | CourseModuleCreateOrConnectWithoutCourseInput[]
    upsert?: CourseModuleUpsertWithWhereUniqueWithoutCourseInput | CourseModuleUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: CourseModuleCreateManyCourseInputEnvelope
    set?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    disconnect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    delete?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    connect?: CourseModuleWhereUniqueInput | CourseModuleWhereUniqueInput[]
    update?: CourseModuleUpdateWithWhereUniqueWithoutCourseInput | CourseModuleUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: CourseModuleUpdateManyWithWhereWithoutCourseInput | CourseModuleUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: CourseModuleScalarWhereInput | CourseModuleScalarWhereInput[]
  }

  export type QuizUncheckedUpdateManyWithoutCourseNestedInput = {
    create?: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput> | QuizCreateWithoutCourseInput[] | QuizUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutCourseInput | QuizCreateOrConnectWithoutCourseInput[]
    upsert?: QuizUpsertWithWhereUniqueWithoutCourseInput | QuizUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: QuizCreateManyCourseInputEnvelope
    set?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    disconnect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    delete?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    update?: QuizUpdateWithWhereUniqueWithoutCourseInput | QuizUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: QuizUpdateManyWithWhereWithoutCourseInput | QuizUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: QuizScalarWhereInput | QuizScalarWhereInput[]
  }

  export type CourseModuleCreateprerequisitesInput = {
    set: string[]
  }

  export type CourseCreateNestedOneWithoutModulesInput = {
    create?: XOR<CourseCreateWithoutModulesInput, CourseUncheckedCreateWithoutModulesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutModulesInput
    connect?: CourseWhereUniqueInput
  }

  export type LessonCreateNestedManyWithoutModuleInput = {
    create?: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput> | LessonCreateWithoutModuleInput[] | LessonUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: LessonCreateOrConnectWithoutModuleInput | LessonCreateOrConnectWithoutModuleInput[]
    createMany?: LessonCreateManyModuleInputEnvelope
    connect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
  }

  export type ModuleCertificateCreateNestedManyWithoutModuleInput = {
    create?: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput> | ModuleCertificateCreateWithoutModuleInput[] | ModuleCertificateUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutModuleInput | ModuleCertificateCreateOrConnectWithoutModuleInput[]
    createMany?: ModuleCertificateCreateManyModuleInputEnvelope
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
  }

  export type LessonUncheckedCreateNestedManyWithoutModuleInput = {
    create?: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput> | LessonCreateWithoutModuleInput[] | LessonUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: LessonCreateOrConnectWithoutModuleInput | LessonCreateOrConnectWithoutModuleInput[]
    createMany?: LessonCreateManyModuleInputEnvelope
    connect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
  }

  export type ModuleCertificateUncheckedCreateNestedManyWithoutModuleInput = {
    create?: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput> | ModuleCertificateCreateWithoutModuleInput[] | ModuleCertificateUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutModuleInput | ModuleCertificateCreateOrConnectWithoutModuleInput[]
    createMany?: ModuleCertificateCreateManyModuleInputEnvelope
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
  }

  export type CourseModuleUpdateprerequisitesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CourseUpdateOneRequiredWithoutModulesNestedInput = {
    create?: XOR<CourseCreateWithoutModulesInput, CourseUncheckedCreateWithoutModulesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutModulesInput
    upsert?: CourseUpsertWithoutModulesInput
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutModulesInput, CourseUpdateWithoutModulesInput>, CourseUncheckedUpdateWithoutModulesInput>
  }

  export type LessonUpdateManyWithoutModuleNestedInput = {
    create?: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput> | LessonCreateWithoutModuleInput[] | LessonUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: LessonCreateOrConnectWithoutModuleInput | LessonCreateOrConnectWithoutModuleInput[]
    upsert?: LessonUpsertWithWhereUniqueWithoutModuleInput | LessonUpsertWithWhereUniqueWithoutModuleInput[]
    createMany?: LessonCreateManyModuleInputEnvelope
    set?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    disconnect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    delete?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    connect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    update?: LessonUpdateWithWhereUniqueWithoutModuleInput | LessonUpdateWithWhereUniqueWithoutModuleInput[]
    updateMany?: LessonUpdateManyWithWhereWithoutModuleInput | LessonUpdateManyWithWhereWithoutModuleInput[]
    deleteMany?: LessonScalarWhereInput | LessonScalarWhereInput[]
  }

  export type ModuleCertificateUpdateManyWithoutModuleNestedInput = {
    create?: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput> | ModuleCertificateCreateWithoutModuleInput[] | ModuleCertificateUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutModuleInput | ModuleCertificateCreateOrConnectWithoutModuleInput[]
    upsert?: ModuleCertificateUpsertWithWhereUniqueWithoutModuleInput | ModuleCertificateUpsertWithWhereUniqueWithoutModuleInput[]
    createMany?: ModuleCertificateCreateManyModuleInputEnvelope
    set?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    disconnect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    delete?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    update?: ModuleCertificateUpdateWithWhereUniqueWithoutModuleInput | ModuleCertificateUpdateWithWhereUniqueWithoutModuleInput[]
    updateMany?: ModuleCertificateUpdateManyWithWhereWithoutModuleInput | ModuleCertificateUpdateManyWithWhereWithoutModuleInput[]
    deleteMany?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
  }

  export type LessonUncheckedUpdateManyWithoutModuleNestedInput = {
    create?: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput> | LessonCreateWithoutModuleInput[] | LessonUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: LessonCreateOrConnectWithoutModuleInput | LessonCreateOrConnectWithoutModuleInput[]
    upsert?: LessonUpsertWithWhereUniqueWithoutModuleInput | LessonUpsertWithWhereUniqueWithoutModuleInput[]
    createMany?: LessonCreateManyModuleInputEnvelope
    set?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    disconnect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    delete?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    connect?: LessonWhereUniqueInput | LessonWhereUniqueInput[]
    update?: LessonUpdateWithWhereUniqueWithoutModuleInput | LessonUpdateWithWhereUniqueWithoutModuleInput[]
    updateMany?: LessonUpdateManyWithWhereWithoutModuleInput | LessonUpdateManyWithWhereWithoutModuleInput[]
    deleteMany?: LessonScalarWhereInput | LessonScalarWhereInput[]
  }

  export type ModuleCertificateUncheckedUpdateManyWithoutModuleNestedInput = {
    create?: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput> | ModuleCertificateCreateWithoutModuleInput[] | ModuleCertificateUncheckedCreateWithoutModuleInput[]
    connectOrCreate?: ModuleCertificateCreateOrConnectWithoutModuleInput | ModuleCertificateCreateOrConnectWithoutModuleInput[]
    upsert?: ModuleCertificateUpsertWithWhereUniqueWithoutModuleInput | ModuleCertificateUpsertWithWhereUniqueWithoutModuleInput[]
    createMany?: ModuleCertificateCreateManyModuleInputEnvelope
    set?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    disconnect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    delete?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    connect?: ModuleCertificateWhereUniqueInput | ModuleCertificateWhereUniqueInput[]
    update?: ModuleCertificateUpdateWithWhereUniqueWithoutModuleInput | ModuleCertificateUpdateWithWhereUniqueWithoutModuleInput[]
    updateMany?: ModuleCertificateUpdateManyWithWhereWithoutModuleInput | ModuleCertificateUpdateManyWithWhereWithoutModuleInput[]
    deleteMany?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
  }

  export type LessonResourceCreateNestedManyWithoutLessonInput = {
    create?: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput> | LessonResourceCreateWithoutLessonInput[] | LessonResourceUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonResourceCreateOrConnectWithoutLessonInput | LessonResourceCreateOrConnectWithoutLessonInput[]
    createMany?: LessonResourceCreateManyLessonInputEnvelope
    connect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
  }

  export type DiscussionCreateNestedManyWithoutLessonInput = {
    create?: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput> | DiscussionCreateWithoutLessonInput[] | DiscussionUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutLessonInput | DiscussionCreateOrConnectWithoutLessonInput[]
    createMany?: DiscussionCreateManyLessonInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type LessonProgressCreateNestedManyWithoutLessonInput = {
    create?: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput> | LessonProgressCreateWithoutLessonInput[] | LessonProgressUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutLessonInput | LessonProgressCreateOrConnectWithoutLessonInput[]
    createMany?: LessonProgressCreateManyLessonInputEnvelope
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
  }

  export type CourseModuleCreateNestedOneWithoutLessonsInput = {
    create?: XOR<CourseModuleCreateWithoutLessonsInput, CourseModuleUncheckedCreateWithoutLessonsInput>
    connectOrCreate?: CourseModuleCreateOrConnectWithoutLessonsInput
    connect?: CourseModuleWhereUniqueInput
  }

  export type QuizCreateNestedManyWithoutLessonInput = {
    create?: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput> | QuizCreateWithoutLessonInput[] | QuizUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutLessonInput | QuizCreateOrConnectWithoutLessonInput[]
    createMany?: QuizCreateManyLessonInputEnvelope
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
  }

  export type StudentNoteCreateNestedManyWithoutLessonInput = {
    create?: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput> | StudentNoteCreateWithoutLessonInput[] | StudentNoteUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutLessonInput | StudentNoteCreateOrConnectWithoutLessonInput[]
    createMany?: StudentNoteCreateManyLessonInputEnvelope
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
  }

  export type LessonResourceUncheckedCreateNestedManyWithoutLessonInput = {
    create?: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput> | LessonResourceCreateWithoutLessonInput[] | LessonResourceUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonResourceCreateOrConnectWithoutLessonInput | LessonResourceCreateOrConnectWithoutLessonInput[]
    createMany?: LessonResourceCreateManyLessonInputEnvelope
    connect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
  }

  export type DiscussionUncheckedCreateNestedManyWithoutLessonInput = {
    create?: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput> | DiscussionCreateWithoutLessonInput[] | DiscussionUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutLessonInput | DiscussionCreateOrConnectWithoutLessonInput[]
    createMany?: DiscussionCreateManyLessonInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type LessonProgressUncheckedCreateNestedManyWithoutLessonInput = {
    create?: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput> | LessonProgressCreateWithoutLessonInput[] | LessonProgressUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutLessonInput | LessonProgressCreateOrConnectWithoutLessonInput[]
    createMany?: LessonProgressCreateManyLessonInputEnvelope
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
  }

  export type QuizUncheckedCreateNestedManyWithoutLessonInput = {
    create?: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput> | QuizCreateWithoutLessonInput[] | QuizUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutLessonInput | QuizCreateOrConnectWithoutLessonInput[]
    createMany?: QuizCreateManyLessonInputEnvelope
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
  }

  export type StudentNoteUncheckedCreateNestedManyWithoutLessonInput = {
    create?: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput> | StudentNoteCreateWithoutLessonInput[] | StudentNoteUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutLessonInput | StudentNoteCreateOrConnectWithoutLessonInput[]
    createMany?: StudentNoteCreateManyLessonInputEnvelope
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
  }

  export type EnumLessonTypeFieldUpdateOperationsInput = {
    set?: $Enums.LessonType
  }

  export type LessonResourceUpdateManyWithoutLessonNestedInput = {
    create?: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput> | LessonResourceCreateWithoutLessonInput[] | LessonResourceUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonResourceCreateOrConnectWithoutLessonInput | LessonResourceCreateOrConnectWithoutLessonInput[]
    upsert?: LessonResourceUpsertWithWhereUniqueWithoutLessonInput | LessonResourceUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: LessonResourceCreateManyLessonInputEnvelope
    set?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    disconnect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    delete?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    connect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    update?: LessonResourceUpdateWithWhereUniqueWithoutLessonInput | LessonResourceUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: LessonResourceUpdateManyWithWhereWithoutLessonInput | LessonResourceUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: LessonResourceScalarWhereInput | LessonResourceScalarWhereInput[]
  }

  export type DiscussionUpdateManyWithoutLessonNestedInput = {
    create?: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput> | DiscussionCreateWithoutLessonInput[] | DiscussionUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutLessonInput | DiscussionCreateOrConnectWithoutLessonInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutLessonInput | DiscussionUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: DiscussionCreateManyLessonInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutLessonInput | DiscussionUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutLessonInput | DiscussionUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type LessonProgressUpdateManyWithoutLessonNestedInput = {
    create?: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput> | LessonProgressCreateWithoutLessonInput[] | LessonProgressUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutLessonInput | LessonProgressCreateOrConnectWithoutLessonInput[]
    upsert?: LessonProgressUpsertWithWhereUniqueWithoutLessonInput | LessonProgressUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: LessonProgressCreateManyLessonInputEnvelope
    set?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    disconnect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    delete?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    update?: LessonProgressUpdateWithWhereUniqueWithoutLessonInput | LessonProgressUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: LessonProgressUpdateManyWithWhereWithoutLessonInput | LessonProgressUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
  }

  export type CourseModuleUpdateOneRequiredWithoutLessonsNestedInput = {
    create?: XOR<CourseModuleCreateWithoutLessonsInput, CourseModuleUncheckedCreateWithoutLessonsInput>
    connectOrCreate?: CourseModuleCreateOrConnectWithoutLessonsInput
    upsert?: CourseModuleUpsertWithoutLessonsInput
    connect?: CourseModuleWhereUniqueInput
    update?: XOR<XOR<CourseModuleUpdateToOneWithWhereWithoutLessonsInput, CourseModuleUpdateWithoutLessonsInput>, CourseModuleUncheckedUpdateWithoutLessonsInput>
  }

  export type QuizUpdateManyWithoutLessonNestedInput = {
    create?: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput> | QuizCreateWithoutLessonInput[] | QuizUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutLessonInput | QuizCreateOrConnectWithoutLessonInput[]
    upsert?: QuizUpsertWithWhereUniqueWithoutLessonInput | QuizUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: QuizCreateManyLessonInputEnvelope
    set?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    disconnect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    delete?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    update?: QuizUpdateWithWhereUniqueWithoutLessonInput | QuizUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: QuizUpdateManyWithWhereWithoutLessonInput | QuizUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: QuizScalarWhereInput | QuizScalarWhereInput[]
  }

  export type StudentNoteUpdateManyWithoutLessonNestedInput = {
    create?: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput> | StudentNoteCreateWithoutLessonInput[] | StudentNoteUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutLessonInput | StudentNoteCreateOrConnectWithoutLessonInput[]
    upsert?: StudentNoteUpsertWithWhereUniqueWithoutLessonInput | StudentNoteUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: StudentNoteCreateManyLessonInputEnvelope
    set?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    disconnect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    delete?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    update?: StudentNoteUpdateWithWhereUniqueWithoutLessonInput | StudentNoteUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: StudentNoteUpdateManyWithWhereWithoutLessonInput | StudentNoteUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
  }

  export type LessonResourceUncheckedUpdateManyWithoutLessonNestedInput = {
    create?: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput> | LessonResourceCreateWithoutLessonInput[] | LessonResourceUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonResourceCreateOrConnectWithoutLessonInput | LessonResourceCreateOrConnectWithoutLessonInput[]
    upsert?: LessonResourceUpsertWithWhereUniqueWithoutLessonInput | LessonResourceUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: LessonResourceCreateManyLessonInputEnvelope
    set?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    disconnect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    delete?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    connect?: LessonResourceWhereUniqueInput | LessonResourceWhereUniqueInput[]
    update?: LessonResourceUpdateWithWhereUniqueWithoutLessonInput | LessonResourceUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: LessonResourceUpdateManyWithWhereWithoutLessonInput | LessonResourceUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: LessonResourceScalarWhereInput | LessonResourceScalarWhereInput[]
  }

  export type DiscussionUncheckedUpdateManyWithoutLessonNestedInput = {
    create?: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput> | DiscussionCreateWithoutLessonInput[] | DiscussionUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutLessonInput | DiscussionCreateOrConnectWithoutLessonInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutLessonInput | DiscussionUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: DiscussionCreateManyLessonInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutLessonInput | DiscussionUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutLessonInput | DiscussionUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type LessonProgressUncheckedUpdateManyWithoutLessonNestedInput = {
    create?: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput> | LessonProgressCreateWithoutLessonInput[] | LessonProgressUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutLessonInput | LessonProgressCreateOrConnectWithoutLessonInput[]
    upsert?: LessonProgressUpsertWithWhereUniqueWithoutLessonInput | LessonProgressUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: LessonProgressCreateManyLessonInputEnvelope
    set?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    disconnect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    delete?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    update?: LessonProgressUpdateWithWhereUniqueWithoutLessonInput | LessonProgressUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: LessonProgressUpdateManyWithWhereWithoutLessonInput | LessonProgressUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
  }

  export type QuizUncheckedUpdateManyWithoutLessonNestedInput = {
    create?: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput> | QuizCreateWithoutLessonInput[] | QuizUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: QuizCreateOrConnectWithoutLessonInput | QuizCreateOrConnectWithoutLessonInput[]
    upsert?: QuizUpsertWithWhereUniqueWithoutLessonInput | QuizUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: QuizCreateManyLessonInputEnvelope
    set?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    disconnect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    delete?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    connect?: QuizWhereUniqueInput | QuizWhereUniqueInput[]
    update?: QuizUpdateWithWhereUniqueWithoutLessonInput | QuizUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: QuizUpdateManyWithWhereWithoutLessonInput | QuizUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: QuizScalarWhereInput | QuizScalarWhereInput[]
  }

  export type StudentNoteUncheckedUpdateManyWithoutLessonNestedInput = {
    create?: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput> | StudentNoteCreateWithoutLessonInput[] | StudentNoteUncheckedCreateWithoutLessonInput[]
    connectOrCreate?: StudentNoteCreateOrConnectWithoutLessonInput | StudentNoteCreateOrConnectWithoutLessonInput[]
    upsert?: StudentNoteUpsertWithWhereUniqueWithoutLessonInput | StudentNoteUpsertWithWhereUniqueWithoutLessonInput[]
    createMany?: StudentNoteCreateManyLessonInputEnvelope
    set?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    disconnect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    delete?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    connect?: StudentNoteWhereUniqueInput | StudentNoteWhereUniqueInput[]
    update?: StudentNoteUpdateWithWhereUniqueWithoutLessonInput | StudentNoteUpdateWithWhereUniqueWithoutLessonInput[]
    updateMany?: StudentNoteUpdateManyWithWhereWithoutLessonInput | StudentNoteUpdateManyWithWhereWithoutLessonInput[]
    deleteMany?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
  }

  export type CourseCreateNestedOneWithoutEnrollmentsInput = {
    create?: XOR<CourseCreateWithoutEnrollmentsInput, CourseUncheckedCreateWithoutEnrollmentsInput>
    connectOrCreate?: CourseCreateOrConnectWithoutEnrollmentsInput
    connect?: CourseWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutCourseEnrollmentsInput = {
    create?: XOR<ProfileCreateWithoutCourseEnrollmentsInput, ProfileUncheckedCreateWithoutCourseEnrollmentsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCourseEnrollmentsInput
    connect?: ProfileWhereUniqueInput
  }

  export type LessonProgressCreateNestedManyWithoutEnrollmentInput = {
    create?: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput> | LessonProgressCreateWithoutEnrollmentInput[] | LessonProgressUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutEnrollmentInput | LessonProgressCreateOrConnectWithoutEnrollmentInput[]
    createMany?: LessonProgressCreateManyEnrollmentInputEnvelope
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
  }

  export type QuizAttemptCreateNestedManyWithoutEnrollmentInput = {
    create?: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput> | QuizAttemptCreateWithoutEnrollmentInput[] | QuizAttemptUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutEnrollmentInput | QuizAttemptCreateOrConnectWithoutEnrollmentInput[]
    createMany?: QuizAttemptCreateManyEnrollmentInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type LessonProgressUncheckedCreateNestedManyWithoutEnrollmentInput = {
    create?: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput> | LessonProgressCreateWithoutEnrollmentInput[] | LessonProgressUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutEnrollmentInput | LessonProgressCreateOrConnectWithoutEnrollmentInput[]
    createMany?: LessonProgressCreateManyEnrollmentInputEnvelope
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
  }

  export type QuizAttemptUncheckedCreateNestedManyWithoutEnrollmentInput = {
    create?: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput> | QuizAttemptCreateWithoutEnrollmentInput[] | QuizAttemptUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutEnrollmentInput | QuizAttemptCreateOrConnectWithoutEnrollmentInput[]
    createMany?: QuizAttemptCreateManyEnrollmentInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type EnumEnrollmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.EnrollmentStatus
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CourseUpdateOneRequiredWithoutEnrollmentsNestedInput = {
    create?: XOR<CourseCreateWithoutEnrollmentsInput, CourseUncheckedCreateWithoutEnrollmentsInput>
    connectOrCreate?: CourseCreateOrConnectWithoutEnrollmentsInput
    upsert?: CourseUpsertWithoutEnrollmentsInput
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutEnrollmentsInput, CourseUpdateWithoutEnrollmentsInput>, CourseUncheckedUpdateWithoutEnrollmentsInput>
  }

  export type ProfileUpdateOneRequiredWithoutCourseEnrollmentsNestedInput = {
    create?: XOR<ProfileCreateWithoutCourseEnrollmentsInput, ProfileUncheckedCreateWithoutCourseEnrollmentsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCourseEnrollmentsInput
    upsert?: ProfileUpsertWithoutCourseEnrollmentsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutCourseEnrollmentsInput, ProfileUpdateWithoutCourseEnrollmentsInput>, ProfileUncheckedUpdateWithoutCourseEnrollmentsInput>
  }

  export type LessonProgressUpdateManyWithoutEnrollmentNestedInput = {
    create?: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput> | LessonProgressCreateWithoutEnrollmentInput[] | LessonProgressUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutEnrollmentInput | LessonProgressCreateOrConnectWithoutEnrollmentInput[]
    upsert?: LessonProgressUpsertWithWhereUniqueWithoutEnrollmentInput | LessonProgressUpsertWithWhereUniqueWithoutEnrollmentInput[]
    createMany?: LessonProgressCreateManyEnrollmentInputEnvelope
    set?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    disconnect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    delete?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    update?: LessonProgressUpdateWithWhereUniqueWithoutEnrollmentInput | LessonProgressUpdateWithWhereUniqueWithoutEnrollmentInput[]
    updateMany?: LessonProgressUpdateManyWithWhereWithoutEnrollmentInput | LessonProgressUpdateManyWithWhereWithoutEnrollmentInput[]
    deleteMany?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
  }

  export type QuizAttemptUpdateManyWithoutEnrollmentNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput> | QuizAttemptCreateWithoutEnrollmentInput[] | QuizAttemptUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutEnrollmentInput | QuizAttemptCreateOrConnectWithoutEnrollmentInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutEnrollmentInput | QuizAttemptUpsertWithWhereUniqueWithoutEnrollmentInput[]
    createMany?: QuizAttemptCreateManyEnrollmentInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutEnrollmentInput | QuizAttemptUpdateWithWhereUniqueWithoutEnrollmentInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutEnrollmentInput | QuizAttemptUpdateManyWithWhereWithoutEnrollmentInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type LessonProgressUncheckedUpdateManyWithoutEnrollmentNestedInput = {
    create?: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput> | LessonProgressCreateWithoutEnrollmentInput[] | LessonProgressUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: LessonProgressCreateOrConnectWithoutEnrollmentInput | LessonProgressCreateOrConnectWithoutEnrollmentInput[]
    upsert?: LessonProgressUpsertWithWhereUniqueWithoutEnrollmentInput | LessonProgressUpsertWithWhereUniqueWithoutEnrollmentInput[]
    createMany?: LessonProgressCreateManyEnrollmentInputEnvelope
    set?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    disconnect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    delete?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    connect?: LessonProgressWhereUniqueInput | LessonProgressWhereUniqueInput[]
    update?: LessonProgressUpdateWithWhereUniqueWithoutEnrollmentInput | LessonProgressUpdateWithWhereUniqueWithoutEnrollmentInput[]
    updateMany?: LessonProgressUpdateManyWithWhereWithoutEnrollmentInput | LessonProgressUpdateManyWithWhereWithoutEnrollmentInput[]
    deleteMany?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
  }

  export type QuizAttemptUncheckedUpdateManyWithoutEnrollmentNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput> | QuizAttemptCreateWithoutEnrollmentInput[] | QuizAttemptUncheckedCreateWithoutEnrollmentInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutEnrollmentInput | QuizAttemptCreateOrConnectWithoutEnrollmentInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutEnrollmentInput | QuizAttemptUpsertWithWhereUniqueWithoutEnrollmentInput[]
    createMany?: QuizAttemptCreateManyEnrollmentInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutEnrollmentInput | QuizAttemptUpdateWithWhereUniqueWithoutEnrollmentInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutEnrollmentInput | QuizAttemptUpdateManyWithWhereWithoutEnrollmentInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type CourseEnrollmentCreateNestedOneWithoutLessonProgressInput = {
    create?: XOR<CourseEnrollmentCreateWithoutLessonProgressInput, CourseEnrollmentUncheckedCreateWithoutLessonProgressInput>
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutLessonProgressInput
    connect?: CourseEnrollmentWhereUniqueInput
  }

  export type LessonCreateNestedOneWithoutProgressInput = {
    create?: XOR<LessonCreateWithoutProgressInput, LessonUncheckedCreateWithoutProgressInput>
    connectOrCreate?: LessonCreateOrConnectWithoutProgressInput
    connect?: LessonWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CourseEnrollmentUpdateOneRequiredWithoutLessonProgressNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutLessonProgressInput, CourseEnrollmentUncheckedCreateWithoutLessonProgressInput>
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutLessonProgressInput
    upsert?: CourseEnrollmentUpsertWithoutLessonProgressInput
    connect?: CourseEnrollmentWhereUniqueInput
    update?: XOR<XOR<CourseEnrollmentUpdateToOneWithWhereWithoutLessonProgressInput, CourseEnrollmentUpdateWithoutLessonProgressInput>, CourseEnrollmentUncheckedUpdateWithoutLessonProgressInput>
  }

  export type LessonUpdateOneRequiredWithoutProgressNestedInput = {
    create?: XOR<LessonCreateWithoutProgressInput, LessonUncheckedCreateWithoutProgressInput>
    connectOrCreate?: LessonCreateOrConnectWithoutProgressInput
    upsert?: LessonUpsertWithoutProgressInput
    connect?: LessonWhereUniqueInput
    update?: XOR<XOR<LessonUpdateToOneWithWhereWithoutProgressInput, LessonUpdateWithoutProgressInput>, LessonUncheckedUpdateWithoutProgressInput>
  }

  export type QuizAttemptCreateNestedManyWithoutQuizInput = {
    create?: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput> | QuizAttemptCreateWithoutQuizInput[] | QuizAttemptUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutQuizInput | QuizAttemptCreateOrConnectWithoutQuizInput[]
    createMany?: QuizAttemptCreateManyQuizInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type QuizQuestionCreateNestedManyWithoutQuizInput = {
    create?: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput> | QuizQuestionCreateWithoutQuizInput[] | QuizQuestionUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutQuizInput | QuizQuestionCreateOrConnectWithoutQuizInput[]
    createMany?: QuizQuestionCreateManyQuizInputEnvelope
    connect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
  }

  export type CourseCreateNestedOneWithoutQuizzesInput = {
    create?: XOR<CourseCreateWithoutQuizzesInput, CourseUncheckedCreateWithoutQuizzesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutQuizzesInput
    connect?: CourseWhereUniqueInput
  }

  export type LessonCreateNestedOneWithoutQuizzesInput = {
    create?: XOR<LessonCreateWithoutQuizzesInput, LessonUncheckedCreateWithoutQuizzesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutQuizzesInput
    connect?: LessonWhereUniqueInput
  }

  export type QuizAttemptUncheckedCreateNestedManyWithoutQuizInput = {
    create?: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput> | QuizAttemptCreateWithoutQuizInput[] | QuizAttemptUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutQuizInput | QuizAttemptCreateOrConnectWithoutQuizInput[]
    createMany?: QuizAttemptCreateManyQuizInputEnvelope
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
  }

  export type QuizQuestionUncheckedCreateNestedManyWithoutQuizInput = {
    create?: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput> | QuizQuestionCreateWithoutQuizInput[] | QuizQuestionUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutQuizInput | QuizQuestionCreateOrConnectWithoutQuizInput[]
    createMany?: QuizQuestionCreateManyQuizInputEnvelope
    connect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
  }

  export type QuizAttemptUpdateManyWithoutQuizNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput> | QuizAttemptCreateWithoutQuizInput[] | QuizAttemptUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutQuizInput | QuizAttemptCreateOrConnectWithoutQuizInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutQuizInput | QuizAttemptUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: QuizAttemptCreateManyQuizInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutQuizInput | QuizAttemptUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutQuizInput | QuizAttemptUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type QuizQuestionUpdateManyWithoutQuizNestedInput = {
    create?: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput> | QuizQuestionCreateWithoutQuizInput[] | QuizQuestionUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutQuizInput | QuizQuestionCreateOrConnectWithoutQuizInput[]
    upsert?: QuizQuestionUpsertWithWhereUniqueWithoutQuizInput | QuizQuestionUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: QuizQuestionCreateManyQuizInputEnvelope
    set?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    disconnect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    delete?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    connect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    update?: QuizQuestionUpdateWithWhereUniqueWithoutQuizInput | QuizQuestionUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: QuizQuestionUpdateManyWithWhereWithoutQuizInput | QuizQuestionUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: QuizQuestionScalarWhereInput | QuizQuestionScalarWhereInput[]
  }

  export type CourseUpdateOneWithoutQuizzesNestedInput = {
    create?: XOR<CourseCreateWithoutQuizzesInput, CourseUncheckedCreateWithoutQuizzesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutQuizzesInput
    upsert?: CourseUpsertWithoutQuizzesInput
    disconnect?: CourseWhereInput | boolean
    delete?: CourseWhereInput | boolean
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutQuizzesInput, CourseUpdateWithoutQuizzesInput>, CourseUncheckedUpdateWithoutQuizzesInput>
  }

  export type LessonUpdateOneWithoutQuizzesNestedInput = {
    create?: XOR<LessonCreateWithoutQuizzesInput, LessonUncheckedCreateWithoutQuizzesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutQuizzesInput
    upsert?: LessonUpsertWithoutQuizzesInput
    disconnect?: LessonWhereInput | boolean
    delete?: LessonWhereInput | boolean
    connect?: LessonWhereUniqueInput
    update?: XOR<XOR<LessonUpdateToOneWithWhereWithoutQuizzesInput, LessonUpdateWithoutQuizzesInput>, LessonUncheckedUpdateWithoutQuizzesInput>
  }

  export type QuizAttemptUncheckedUpdateManyWithoutQuizNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput> | QuizAttemptCreateWithoutQuizInput[] | QuizAttemptUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutQuizInput | QuizAttemptCreateOrConnectWithoutQuizInput[]
    upsert?: QuizAttemptUpsertWithWhereUniqueWithoutQuizInput | QuizAttemptUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: QuizAttemptCreateManyQuizInputEnvelope
    set?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    disconnect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    delete?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    connect?: QuizAttemptWhereUniqueInput | QuizAttemptWhereUniqueInput[]
    update?: QuizAttemptUpdateWithWhereUniqueWithoutQuizInput | QuizAttemptUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: QuizAttemptUpdateManyWithWhereWithoutQuizInput | QuizAttemptUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
  }

  export type QuizQuestionUncheckedUpdateManyWithoutQuizNestedInput = {
    create?: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput> | QuizQuestionCreateWithoutQuizInput[] | QuizQuestionUncheckedCreateWithoutQuizInput[]
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutQuizInput | QuizQuestionCreateOrConnectWithoutQuizInput[]
    upsert?: QuizQuestionUpsertWithWhereUniqueWithoutQuizInput | QuizQuestionUpsertWithWhereUniqueWithoutQuizInput[]
    createMany?: QuizQuestionCreateManyQuizInputEnvelope
    set?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    disconnect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    delete?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    connect?: QuizQuestionWhereUniqueInput | QuizQuestionWhereUniqueInput[]
    update?: QuizQuestionUpdateWithWhereUniqueWithoutQuizInput | QuizQuestionUpdateWithWhereUniqueWithoutQuizInput[]
    updateMany?: QuizQuestionUpdateManyWithWhereWithoutQuizInput | QuizQuestionUpdateManyWithWhereWithoutQuizInput[]
    deleteMany?: QuizQuestionScalarWhereInput | QuizQuestionScalarWhereInput[]
  }

  export type QuizQuestionCreateoptionsInput = {
    set: string[]
  }

  export type QuizAnswerCreateNestedManyWithoutQuestionInput = {
    create?: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput> | QuizAnswerCreateWithoutQuestionInput[] | QuizAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutQuestionInput | QuizAnswerCreateOrConnectWithoutQuestionInput[]
    createMany?: QuizAnswerCreateManyQuestionInputEnvelope
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
  }

  export type QuizCreateNestedOneWithoutQuestionsInput = {
    create?: XOR<QuizCreateWithoutQuestionsInput, QuizUncheckedCreateWithoutQuestionsInput>
    connectOrCreate?: QuizCreateOrConnectWithoutQuestionsInput
    connect?: QuizWhereUniqueInput
  }

  export type QuizAnswerUncheckedCreateNestedManyWithoutQuestionInput = {
    create?: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput> | QuizAnswerCreateWithoutQuestionInput[] | QuizAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutQuestionInput | QuizAnswerCreateOrConnectWithoutQuestionInput[]
    createMany?: QuizAnswerCreateManyQuestionInputEnvelope
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
  }

  export type EnumQuestionTypeFieldUpdateOperationsInput = {
    set?: $Enums.QuestionType
  }

  export type QuizQuestionUpdateoptionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type QuizAnswerUpdateManyWithoutQuestionNestedInput = {
    create?: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput> | QuizAnswerCreateWithoutQuestionInput[] | QuizAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutQuestionInput | QuizAnswerCreateOrConnectWithoutQuestionInput[]
    upsert?: QuizAnswerUpsertWithWhereUniqueWithoutQuestionInput | QuizAnswerUpsertWithWhereUniqueWithoutQuestionInput[]
    createMany?: QuizAnswerCreateManyQuestionInputEnvelope
    set?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    disconnect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    delete?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    update?: QuizAnswerUpdateWithWhereUniqueWithoutQuestionInput | QuizAnswerUpdateWithWhereUniqueWithoutQuestionInput[]
    updateMany?: QuizAnswerUpdateManyWithWhereWithoutQuestionInput | QuizAnswerUpdateManyWithWhereWithoutQuestionInput[]
    deleteMany?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
  }

  export type QuizUpdateOneRequiredWithoutQuestionsNestedInput = {
    create?: XOR<QuizCreateWithoutQuestionsInput, QuizUncheckedCreateWithoutQuestionsInput>
    connectOrCreate?: QuizCreateOrConnectWithoutQuestionsInput
    upsert?: QuizUpsertWithoutQuestionsInput
    connect?: QuizWhereUniqueInput
    update?: XOR<XOR<QuizUpdateToOneWithWhereWithoutQuestionsInput, QuizUpdateWithoutQuestionsInput>, QuizUncheckedUpdateWithoutQuestionsInput>
  }

  export type QuizAnswerUncheckedUpdateManyWithoutQuestionNestedInput = {
    create?: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput> | QuizAnswerCreateWithoutQuestionInput[] | QuizAnswerUncheckedCreateWithoutQuestionInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutQuestionInput | QuizAnswerCreateOrConnectWithoutQuestionInput[]
    upsert?: QuizAnswerUpsertWithWhereUniqueWithoutQuestionInput | QuizAnswerUpsertWithWhereUniqueWithoutQuestionInput[]
    createMany?: QuizAnswerCreateManyQuestionInputEnvelope
    set?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    disconnect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    delete?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    update?: QuizAnswerUpdateWithWhereUniqueWithoutQuestionInput | QuizAnswerUpdateWithWhereUniqueWithoutQuestionInput[]
    updateMany?: QuizAnswerUpdateManyWithWhereWithoutQuestionInput | QuizAnswerUpdateManyWithWhereWithoutQuestionInput[]
    deleteMany?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
  }

  export type QuizAnswerCreateNestedManyWithoutAttemptInput = {
    create?: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput> | QuizAnswerCreateWithoutAttemptInput[] | QuizAnswerUncheckedCreateWithoutAttemptInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutAttemptInput | QuizAnswerCreateOrConnectWithoutAttemptInput[]
    createMany?: QuizAnswerCreateManyAttemptInputEnvelope
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
  }

  export type CourseEnrollmentCreateNestedOneWithoutQuizAttemptsInput = {
    create?: XOR<CourseEnrollmentCreateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedCreateWithoutQuizAttemptsInput>
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutQuizAttemptsInput
    connect?: CourseEnrollmentWhereUniqueInput
  }

  export type QuizCreateNestedOneWithoutAttemptsInput = {
    create?: XOR<QuizCreateWithoutAttemptsInput, QuizUncheckedCreateWithoutAttemptsInput>
    connectOrCreate?: QuizCreateOrConnectWithoutAttemptsInput
    connect?: QuizWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutQuizAttemptsInput = {
    create?: XOR<ProfileCreateWithoutQuizAttemptsInput, ProfileUncheckedCreateWithoutQuizAttemptsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutQuizAttemptsInput
    connect?: ProfileWhereUniqueInput
  }

  export type QuizAnswerUncheckedCreateNestedManyWithoutAttemptInput = {
    create?: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput> | QuizAnswerCreateWithoutAttemptInput[] | QuizAnswerUncheckedCreateWithoutAttemptInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutAttemptInput | QuizAnswerCreateOrConnectWithoutAttemptInput[]
    createMany?: QuizAnswerCreateManyAttemptInputEnvelope
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
  }

  export type QuizAnswerUpdateManyWithoutAttemptNestedInput = {
    create?: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput> | QuizAnswerCreateWithoutAttemptInput[] | QuizAnswerUncheckedCreateWithoutAttemptInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutAttemptInput | QuizAnswerCreateOrConnectWithoutAttemptInput[]
    upsert?: QuizAnswerUpsertWithWhereUniqueWithoutAttemptInput | QuizAnswerUpsertWithWhereUniqueWithoutAttemptInput[]
    createMany?: QuizAnswerCreateManyAttemptInputEnvelope
    set?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    disconnect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    delete?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    update?: QuizAnswerUpdateWithWhereUniqueWithoutAttemptInput | QuizAnswerUpdateWithWhereUniqueWithoutAttemptInput[]
    updateMany?: QuizAnswerUpdateManyWithWhereWithoutAttemptInput | QuizAnswerUpdateManyWithWhereWithoutAttemptInput[]
    deleteMany?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
  }

  export type CourseEnrollmentUpdateOneWithoutQuizAttemptsNestedInput = {
    create?: XOR<CourseEnrollmentCreateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedCreateWithoutQuizAttemptsInput>
    connectOrCreate?: CourseEnrollmentCreateOrConnectWithoutQuizAttemptsInput
    upsert?: CourseEnrollmentUpsertWithoutQuizAttemptsInput
    disconnect?: CourseEnrollmentWhereInput | boolean
    delete?: CourseEnrollmentWhereInput | boolean
    connect?: CourseEnrollmentWhereUniqueInput
    update?: XOR<XOR<CourseEnrollmentUpdateToOneWithWhereWithoutQuizAttemptsInput, CourseEnrollmentUpdateWithoutQuizAttemptsInput>, CourseEnrollmentUncheckedUpdateWithoutQuizAttemptsInput>
  }

  export type QuizUpdateOneRequiredWithoutAttemptsNestedInput = {
    create?: XOR<QuizCreateWithoutAttemptsInput, QuizUncheckedCreateWithoutAttemptsInput>
    connectOrCreate?: QuizCreateOrConnectWithoutAttemptsInput
    upsert?: QuizUpsertWithoutAttemptsInput
    connect?: QuizWhereUniqueInput
    update?: XOR<XOR<QuizUpdateToOneWithWhereWithoutAttemptsInput, QuizUpdateWithoutAttemptsInput>, QuizUncheckedUpdateWithoutAttemptsInput>
  }

  export type ProfileUpdateOneRequiredWithoutQuizAttemptsNestedInput = {
    create?: XOR<ProfileCreateWithoutQuizAttemptsInput, ProfileUncheckedCreateWithoutQuizAttemptsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutQuizAttemptsInput
    upsert?: ProfileUpsertWithoutQuizAttemptsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutQuizAttemptsInput, ProfileUpdateWithoutQuizAttemptsInput>, ProfileUncheckedUpdateWithoutQuizAttemptsInput>
  }

  export type QuizAnswerUncheckedUpdateManyWithoutAttemptNestedInput = {
    create?: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput> | QuizAnswerCreateWithoutAttemptInput[] | QuizAnswerUncheckedCreateWithoutAttemptInput[]
    connectOrCreate?: QuizAnswerCreateOrConnectWithoutAttemptInput | QuizAnswerCreateOrConnectWithoutAttemptInput[]
    upsert?: QuizAnswerUpsertWithWhereUniqueWithoutAttemptInput | QuizAnswerUpsertWithWhereUniqueWithoutAttemptInput[]
    createMany?: QuizAnswerCreateManyAttemptInputEnvelope
    set?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    disconnect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    delete?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    connect?: QuizAnswerWhereUniqueInput | QuizAnswerWhereUniqueInput[]
    update?: QuizAnswerUpdateWithWhereUniqueWithoutAttemptInput | QuizAnswerUpdateWithWhereUniqueWithoutAttemptInput[]
    updateMany?: QuizAnswerUpdateManyWithWhereWithoutAttemptInput | QuizAnswerUpdateManyWithWhereWithoutAttemptInput[]
    deleteMany?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
  }

  export type QuizAttemptCreateNestedOneWithoutAnswersInput = {
    create?: XOR<QuizAttemptCreateWithoutAnswersInput, QuizAttemptUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutAnswersInput
    connect?: QuizAttemptWhereUniqueInput
  }

  export type QuizQuestionCreateNestedOneWithoutAnswersInput = {
    create?: XOR<QuizQuestionCreateWithoutAnswersInput, QuizQuestionUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutAnswersInput
    connect?: QuizQuestionWhereUniqueInput
  }

  export type QuizAttemptUpdateOneRequiredWithoutAnswersNestedInput = {
    create?: XOR<QuizAttemptCreateWithoutAnswersInput, QuizAttemptUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: QuizAttemptCreateOrConnectWithoutAnswersInput
    upsert?: QuizAttemptUpsertWithoutAnswersInput
    connect?: QuizAttemptWhereUniqueInput
    update?: XOR<XOR<QuizAttemptUpdateToOneWithWhereWithoutAnswersInput, QuizAttemptUpdateWithoutAnswersInput>, QuizAttemptUncheckedUpdateWithoutAnswersInput>
  }

  export type QuizQuestionUpdateOneRequiredWithoutAnswersNestedInput = {
    create?: XOR<QuizQuestionCreateWithoutAnswersInput, QuizQuestionUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: QuizQuestionCreateOrConnectWithoutAnswersInput
    upsert?: QuizQuestionUpsertWithoutAnswersInput
    connect?: QuizQuestionWhereUniqueInput
    update?: XOR<XOR<QuizQuestionUpdateToOneWithWhereWithoutAnswersInput, QuizQuestionUpdateWithoutAnswersInput>, QuizQuestionUncheckedUpdateWithoutAnswersInput>
  }

  export type CourseCreateNestedOneWithoutCertificatesInput = {
    create?: XOR<CourseCreateWithoutCertificatesInput, CourseUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutCertificatesInput
    connect?: CourseWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutCertificatesInput = {
    create?: XOR<ProfileCreateWithoutCertificatesInput, ProfileUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCertificatesInput
    connect?: ProfileWhereUniqueInput
  }

  export type CourseUpdateOneRequiredWithoutCertificatesNestedInput = {
    create?: XOR<CourseCreateWithoutCertificatesInput, CourseUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutCertificatesInput
    upsert?: CourseUpsertWithoutCertificatesInput
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutCertificatesInput, CourseUpdateWithoutCertificatesInput>, CourseUncheckedUpdateWithoutCertificatesInput>
  }

  export type ProfileUpdateOneRequiredWithoutCertificatesNestedInput = {
    create?: XOR<ProfileCreateWithoutCertificatesInput, ProfileUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCertificatesInput
    upsert?: ProfileUpsertWithoutCertificatesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutCertificatesInput, ProfileUpdateWithoutCertificatesInput>, ProfileUncheckedUpdateWithoutCertificatesInput>
  }

  export type LessonCreateNestedOneWithoutNotesInput = {
    create?: XOR<LessonCreateWithoutNotesInput, LessonUncheckedCreateWithoutNotesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutNotesInput
    connect?: LessonWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutStudentNotesInput = {
    create?: XOR<ProfileCreateWithoutStudentNotesInput, ProfileUncheckedCreateWithoutStudentNotesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutStudentNotesInput
    connect?: ProfileWhereUniqueInput
  }

  export type LessonUpdateOneRequiredWithoutNotesNestedInput = {
    create?: XOR<LessonCreateWithoutNotesInput, LessonUncheckedCreateWithoutNotesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutNotesInput
    upsert?: LessonUpsertWithoutNotesInput
    connect?: LessonWhereUniqueInput
    update?: XOR<XOR<LessonUpdateToOneWithWhereWithoutNotesInput, LessonUpdateWithoutNotesInput>, LessonUncheckedUpdateWithoutNotesInput>
  }

  export type ProfileUpdateOneRequiredWithoutStudentNotesNestedInput = {
    create?: XOR<ProfileCreateWithoutStudentNotesInput, ProfileUncheckedCreateWithoutStudentNotesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutStudentNotesInput
    upsert?: ProfileUpsertWithoutStudentNotesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutStudentNotesInput, ProfileUpdateWithoutStudentNotesInput>, ProfileUncheckedUpdateWithoutStudentNotesInput>
  }

  export type LessonCreateNestedOneWithoutDiscussionsInput = {
    create?: XOR<LessonCreateWithoutDiscussionsInput, LessonUncheckedCreateWithoutDiscussionsInput>
    connectOrCreate?: LessonCreateOrConnectWithoutDiscussionsInput
    connect?: LessonWhereUniqueInput
  }

  export type DiscussionCreateNestedOneWithoutRepliesInput = {
    create?: XOR<DiscussionCreateWithoutRepliesInput, DiscussionUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: DiscussionCreateOrConnectWithoutRepliesInput
    connect?: DiscussionWhereUniqueInput
  }

  export type DiscussionCreateNestedManyWithoutParentInput = {
    create?: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput> | DiscussionCreateWithoutParentInput[] | DiscussionUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutParentInput | DiscussionCreateOrConnectWithoutParentInput[]
    createMany?: DiscussionCreateManyParentInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutDiscussionsInput = {
    create?: XOR<ProfileCreateWithoutDiscussionsInput, ProfileUncheckedCreateWithoutDiscussionsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutDiscussionsInput
    connect?: ProfileWhereUniqueInput
  }

  export type DiscussionUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput> | DiscussionCreateWithoutParentInput[] | DiscussionUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutParentInput | DiscussionCreateOrConnectWithoutParentInput[]
    createMany?: DiscussionCreateManyParentInputEnvelope
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
  }

  export type LessonUpdateOneRequiredWithoutDiscussionsNestedInput = {
    create?: XOR<LessonCreateWithoutDiscussionsInput, LessonUncheckedCreateWithoutDiscussionsInput>
    connectOrCreate?: LessonCreateOrConnectWithoutDiscussionsInput
    upsert?: LessonUpsertWithoutDiscussionsInput
    connect?: LessonWhereUniqueInput
    update?: XOR<XOR<LessonUpdateToOneWithWhereWithoutDiscussionsInput, LessonUpdateWithoutDiscussionsInput>, LessonUncheckedUpdateWithoutDiscussionsInput>
  }

  export type DiscussionUpdateOneWithoutRepliesNestedInput = {
    create?: XOR<DiscussionCreateWithoutRepliesInput, DiscussionUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: DiscussionCreateOrConnectWithoutRepliesInput
    upsert?: DiscussionUpsertWithoutRepliesInput
    disconnect?: DiscussionWhereInput | boolean
    delete?: DiscussionWhereInput | boolean
    connect?: DiscussionWhereUniqueInput
    update?: XOR<XOR<DiscussionUpdateToOneWithWhereWithoutRepliesInput, DiscussionUpdateWithoutRepliesInput>, DiscussionUncheckedUpdateWithoutRepliesInput>
  }

  export type DiscussionUpdateManyWithoutParentNestedInput = {
    create?: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput> | DiscussionCreateWithoutParentInput[] | DiscussionUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutParentInput | DiscussionCreateOrConnectWithoutParentInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutParentInput | DiscussionUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: DiscussionCreateManyParentInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutParentInput | DiscussionUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutParentInput | DiscussionUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type ProfileUpdateOneRequiredWithoutDiscussionsNestedInput = {
    create?: XOR<ProfileCreateWithoutDiscussionsInput, ProfileUncheckedCreateWithoutDiscussionsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutDiscussionsInput
    upsert?: ProfileUpsertWithoutDiscussionsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutDiscussionsInput, ProfileUpdateWithoutDiscussionsInput>, ProfileUncheckedUpdateWithoutDiscussionsInput>
  }

  export type DiscussionUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput> | DiscussionCreateWithoutParentInput[] | DiscussionUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DiscussionCreateOrConnectWithoutParentInput | DiscussionCreateOrConnectWithoutParentInput[]
    upsert?: DiscussionUpsertWithWhereUniqueWithoutParentInput | DiscussionUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: DiscussionCreateManyParentInputEnvelope
    set?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    disconnect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    delete?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    connect?: DiscussionWhereUniqueInput | DiscussionWhereUniqueInput[]
    update?: DiscussionUpdateWithWhereUniqueWithoutParentInput | DiscussionUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: DiscussionUpdateManyWithWhereWithoutParentInput | DiscussionUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
  }

  export type EntrepreneurshipCreateimagesInput = {
    set: string[]
  }

  export type BusinessPlanCreateNestedOneWithoutEntrepreneurshipInput = {
    create?: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
    connectOrCreate?: BusinessPlanCreateOrConnectWithoutEntrepreneurshipInput
    connect?: BusinessPlanWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutEntrepreneurshipsInput = {
    create?: XOR<ProfileCreateWithoutEntrepreneurshipsInput, ProfileUncheckedCreateWithoutEntrepreneurshipsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutEntrepreneurshipsInput
    connect?: ProfileWhereUniqueInput
  }

  export type BusinessPlanUncheckedCreateNestedOneWithoutEntrepreneurshipInput = {
    create?: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
    connectOrCreate?: BusinessPlanCreateOrConnectWithoutEntrepreneurshipInput
    connect?: BusinessPlanWhereUniqueInput
  }

  export type EnumBusinessStageFieldUpdateOperationsInput = {
    set?: $Enums.BusinessStage
  }

  export type EntrepreneurshipUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BusinessPlanUpdateOneWithoutEntrepreneurshipNestedInput = {
    create?: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
    connectOrCreate?: BusinessPlanCreateOrConnectWithoutEntrepreneurshipInput
    upsert?: BusinessPlanUpsertWithoutEntrepreneurshipInput
    disconnect?: BusinessPlanWhereInput | boolean
    delete?: BusinessPlanWhereInput | boolean
    connect?: BusinessPlanWhereUniqueInput
    update?: XOR<XOR<BusinessPlanUpdateToOneWithWhereWithoutEntrepreneurshipInput, BusinessPlanUpdateWithoutEntrepreneurshipInput>, BusinessPlanUncheckedUpdateWithoutEntrepreneurshipInput>
  }

  export type ProfileUpdateOneRequiredWithoutEntrepreneurshipsNestedInput = {
    create?: XOR<ProfileCreateWithoutEntrepreneurshipsInput, ProfileUncheckedCreateWithoutEntrepreneurshipsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutEntrepreneurshipsInput
    upsert?: ProfileUpsertWithoutEntrepreneurshipsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutEntrepreneurshipsInput, ProfileUpdateWithoutEntrepreneurshipsInput>, ProfileUncheckedUpdateWithoutEntrepreneurshipsInput>
  }

  export type BusinessPlanUncheckedUpdateOneWithoutEntrepreneurshipNestedInput = {
    create?: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
    connectOrCreate?: BusinessPlanCreateOrConnectWithoutEntrepreneurshipInput
    upsert?: BusinessPlanUpsertWithoutEntrepreneurshipInput
    disconnect?: BusinessPlanWhereInput | boolean
    delete?: BusinessPlanWhereInput | boolean
    connect?: BusinessPlanWhereUniqueInput
    update?: XOR<XOR<BusinessPlanUpdateToOneWithWhereWithoutEntrepreneurshipInput, BusinessPlanUpdateWithoutEntrepreneurshipInput>, BusinessPlanUncheckedUpdateWithoutEntrepreneurshipInput>
  }

  export type BusinessPlanCreaterevenueStreamsInput = {
    set: string[]
  }

  export type BusinessPlanCreatemitigationStrategiesInput = {
    set: string[]
  }

  export type EntrepreneurshipCreateNestedOneWithoutBusinessPlanInput = {
    create?: XOR<EntrepreneurshipCreateWithoutBusinessPlanInput, EntrepreneurshipUncheckedCreateWithoutBusinessPlanInput>
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutBusinessPlanInput
    connect?: EntrepreneurshipWhereUniqueInput
  }

  export type BusinessPlanUpdaterevenueStreamsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BusinessPlanUpdatemitigationStrategiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EntrepreneurshipUpdateOneRequiredWithoutBusinessPlanNestedInput = {
    create?: XOR<EntrepreneurshipCreateWithoutBusinessPlanInput, EntrepreneurshipUncheckedCreateWithoutBusinessPlanInput>
    connectOrCreate?: EntrepreneurshipCreateOrConnectWithoutBusinessPlanInput
    upsert?: EntrepreneurshipUpsertWithoutBusinessPlanInput
    connect?: EntrepreneurshipWhereUniqueInput
    update?: XOR<XOR<EntrepreneurshipUpdateToOneWithWhereWithoutBusinessPlanInput, EntrepreneurshipUpdateWithoutBusinessPlanInput>, EntrepreneurshipUncheckedUpdateWithoutBusinessPlanInput>
  }

  export type NewsArticleCreatetagsInput = {
    set: string[]
  }

  export type NewsArticleCreatetargetAudienceInput = {
    set: string[]
  }

  export type ProfileCreateNestedOneWithoutNewsArticlesInput = {
    create?: XOR<ProfileCreateWithoutNewsArticlesInput, ProfileUncheckedCreateWithoutNewsArticlesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutNewsArticlesInput
    connect?: ProfileWhereUniqueInput
  }

  export type NewsCommentCreateNestedManyWithoutNewsInput = {
    create?: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput> | NewsCommentCreateWithoutNewsInput[] | NewsCommentUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutNewsInput | NewsCommentCreateOrConnectWithoutNewsInput[]
    createMany?: NewsCommentCreateManyNewsInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type NewsCommentUncheckedCreateNestedManyWithoutNewsInput = {
    create?: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput> | NewsCommentCreateWithoutNewsInput[] | NewsCommentUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutNewsInput | NewsCommentCreateOrConnectWithoutNewsInput[]
    createMany?: NewsCommentCreateManyNewsInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type EnumNewsTypeFieldUpdateOperationsInput = {
    set?: $Enums.NewsType
  }

  export type EnumNewsStatusFieldUpdateOperationsInput = {
    set?: $Enums.NewsStatus
  }

  export type EnumNewsPriorityFieldUpdateOperationsInput = {
    set?: $Enums.NewsPriority
  }

  export type NewsArticleUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NewsArticleUpdatetargetAudienceInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProfileUpdateOneRequiredWithoutNewsArticlesNestedInput = {
    create?: XOR<ProfileCreateWithoutNewsArticlesInput, ProfileUncheckedCreateWithoutNewsArticlesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutNewsArticlesInput
    upsert?: ProfileUpsertWithoutNewsArticlesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutNewsArticlesInput, ProfileUpdateWithoutNewsArticlesInput>, ProfileUncheckedUpdateWithoutNewsArticlesInput>
  }

  export type NewsCommentUpdateManyWithoutNewsNestedInput = {
    create?: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput> | NewsCommentCreateWithoutNewsInput[] | NewsCommentUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutNewsInput | NewsCommentCreateOrConnectWithoutNewsInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutNewsInput | NewsCommentUpsertWithWhereUniqueWithoutNewsInput[]
    createMany?: NewsCommentCreateManyNewsInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutNewsInput | NewsCommentUpdateWithWhereUniqueWithoutNewsInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutNewsInput | NewsCommentUpdateManyWithWhereWithoutNewsInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type NewsCommentUncheckedUpdateManyWithoutNewsNestedInput = {
    create?: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput> | NewsCommentCreateWithoutNewsInput[] | NewsCommentUncheckedCreateWithoutNewsInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutNewsInput | NewsCommentCreateOrConnectWithoutNewsInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutNewsInput | NewsCommentUpsertWithWhereUniqueWithoutNewsInput[]
    createMany?: NewsCommentCreateManyNewsInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutNewsInput | NewsCommentUpdateWithWhereUniqueWithoutNewsInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutNewsInput | NewsCommentUpdateManyWithWhereWithoutNewsInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type NewsArticleCreateNestedOneWithoutCommentsInput = {
    create?: XOR<NewsArticleCreateWithoutCommentsInput, NewsArticleUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: NewsArticleCreateOrConnectWithoutCommentsInput
    connect?: NewsArticleWhereUniqueInput
  }

  export type NewsCommentCreateNestedOneWithoutRepliesInput = {
    create?: XOR<NewsCommentCreateWithoutRepliesInput, NewsCommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: NewsCommentCreateOrConnectWithoutRepliesInput
    connect?: NewsCommentWhereUniqueInput
  }

  export type NewsCommentCreateNestedManyWithoutParentInput = {
    create?: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput> | NewsCommentCreateWithoutParentInput[] | NewsCommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutParentInput | NewsCommentCreateOrConnectWithoutParentInput[]
    createMany?: NewsCommentCreateManyParentInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutNewsCommentsInput = {
    create?: XOR<ProfileCreateWithoutNewsCommentsInput, ProfileUncheckedCreateWithoutNewsCommentsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutNewsCommentsInput
    connect?: ProfileWhereUniqueInput
  }

  export type NewsCommentUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput> | NewsCommentCreateWithoutParentInput[] | NewsCommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutParentInput | NewsCommentCreateOrConnectWithoutParentInput[]
    createMany?: NewsCommentCreateManyParentInputEnvelope
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
  }

  export type NewsArticleUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<NewsArticleCreateWithoutCommentsInput, NewsArticleUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: NewsArticleCreateOrConnectWithoutCommentsInput
    upsert?: NewsArticleUpsertWithoutCommentsInput
    connect?: NewsArticleWhereUniqueInput
    update?: XOR<XOR<NewsArticleUpdateToOneWithWhereWithoutCommentsInput, NewsArticleUpdateWithoutCommentsInput>, NewsArticleUncheckedUpdateWithoutCommentsInput>
  }

  export type NewsCommentUpdateOneWithoutRepliesNestedInput = {
    create?: XOR<NewsCommentCreateWithoutRepliesInput, NewsCommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: NewsCommentCreateOrConnectWithoutRepliesInput
    upsert?: NewsCommentUpsertWithoutRepliesInput
    disconnect?: NewsCommentWhereInput | boolean
    delete?: NewsCommentWhereInput | boolean
    connect?: NewsCommentWhereUniqueInput
    update?: XOR<XOR<NewsCommentUpdateToOneWithWhereWithoutRepliesInput, NewsCommentUpdateWithoutRepliesInput>, NewsCommentUncheckedUpdateWithoutRepliesInput>
  }

  export type NewsCommentUpdateManyWithoutParentNestedInput = {
    create?: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput> | NewsCommentCreateWithoutParentInput[] | NewsCommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutParentInput | NewsCommentCreateOrConnectWithoutParentInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutParentInput | NewsCommentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: NewsCommentCreateManyParentInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutParentInput | NewsCommentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutParentInput | NewsCommentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type ProfileUpdateOneRequiredWithoutNewsCommentsNestedInput = {
    create?: XOR<ProfileCreateWithoutNewsCommentsInput, ProfileUncheckedCreateWithoutNewsCommentsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutNewsCommentsInput
    upsert?: ProfileUpsertWithoutNewsCommentsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutNewsCommentsInput, ProfileUpdateWithoutNewsCommentsInput>, ProfileUncheckedUpdateWithoutNewsCommentsInput>
  }

  export type NewsCommentUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput> | NewsCommentCreateWithoutParentInput[] | NewsCommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: NewsCommentCreateOrConnectWithoutParentInput | NewsCommentCreateOrConnectWithoutParentInput[]
    upsert?: NewsCommentUpsertWithWhereUniqueWithoutParentInput | NewsCommentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: NewsCommentCreateManyParentInputEnvelope
    set?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    disconnect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    delete?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    connect?: NewsCommentWhereUniqueInput | NewsCommentWhereUniqueInput[]
    update?: NewsCommentUpdateWithWhereUniqueWithoutParentInput | NewsCommentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: NewsCommentUpdateManyWithWhereWithoutParentInput | NewsCommentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
  }

  export type ResourceCreatetagsInput = {
    set: string[]
  }

  export type ResourceUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CompanyCreateNestedManyWithoutCreatorInput = {
    create?: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput> | CompanyCreateWithoutCreatorInput[] | CompanyUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutCreatorInput | CompanyCreateOrConnectWithoutCreatorInput[]
    createMany?: CompanyCreateManyCreatorInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type InstitutionCreateNestedManyWithoutCreatorInput = {
    create?: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput> | InstitutionCreateWithoutCreatorInput[] | InstitutionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InstitutionCreateOrConnectWithoutCreatorInput | InstitutionCreateOrConnectWithoutCreatorInput[]
    createMany?: InstitutionCreateManyCreatorInputEnvelope
    connect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
  }

  export type MunicipalityCreateNestedManyWithoutCreatorInput = {
    create?: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput> | MunicipalityCreateWithoutCreatorInput[] | MunicipalityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCreatorInput | MunicipalityCreateOrConnectWithoutCreatorInput[]
    createMany?: MunicipalityCreateManyCreatorInputEnvelope
    connect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type CompanyUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput> | CompanyCreateWithoutCreatorInput[] | CompanyUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutCreatorInput | CompanyCreateOrConnectWithoutCreatorInput[]
    createMany?: CompanyCreateManyCreatorInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type InstitutionUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput> | InstitutionCreateWithoutCreatorInput[] | InstitutionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InstitutionCreateOrConnectWithoutCreatorInput | InstitutionCreateOrConnectWithoutCreatorInput[]
    createMany?: InstitutionCreateManyCreatorInputEnvelope
    connect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
  }

  export type MunicipalityUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput> | MunicipalityCreateWithoutCreatorInput[] | MunicipalityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCreatorInput | MunicipalityCreateOrConnectWithoutCreatorInput[]
    createMany?: MunicipalityCreateManyCreatorInputEnvelope
    connect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type CompanyUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput> | CompanyCreateWithoutCreatorInput[] | CompanyUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutCreatorInput | CompanyCreateOrConnectWithoutCreatorInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutCreatorInput | CompanyUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: CompanyCreateManyCreatorInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutCreatorInput | CompanyUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutCreatorInput | CompanyUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type InstitutionUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput> | InstitutionCreateWithoutCreatorInput[] | InstitutionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InstitutionCreateOrConnectWithoutCreatorInput | InstitutionCreateOrConnectWithoutCreatorInput[]
    upsert?: InstitutionUpsertWithWhereUniqueWithoutCreatorInput | InstitutionUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: InstitutionCreateManyCreatorInputEnvelope
    set?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    disconnect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    delete?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    connect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    update?: InstitutionUpdateWithWhereUniqueWithoutCreatorInput | InstitutionUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: InstitutionUpdateManyWithWhereWithoutCreatorInput | InstitutionUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: InstitutionScalarWhereInput | InstitutionScalarWhereInput[]
  }

  export type MunicipalityUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput> | MunicipalityCreateWithoutCreatorInput[] | MunicipalityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCreatorInput | MunicipalityCreateOrConnectWithoutCreatorInput[]
    upsert?: MunicipalityUpsertWithWhereUniqueWithoutCreatorInput | MunicipalityUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: MunicipalityCreateManyCreatorInputEnvelope
    set?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    disconnect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    delete?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    connect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    update?: MunicipalityUpdateWithWhereUniqueWithoutCreatorInput | MunicipalityUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: MunicipalityUpdateManyWithWhereWithoutCreatorInput | MunicipalityUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: MunicipalityScalarWhereInput | MunicipalityScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type CompanyUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput> | CompanyCreateWithoutCreatorInput[] | CompanyUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutCreatorInput | CompanyCreateOrConnectWithoutCreatorInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutCreatorInput | CompanyUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: CompanyCreateManyCreatorInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutCreatorInput | CompanyUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutCreatorInput | CompanyUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type InstitutionUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput> | InstitutionCreateWithoutCreatorInput[] | InstitutionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InstitutionCreateOrConnectWithoutCreatorInput | InstitutionCreateOrConnectWithoutCreatorInput[]
    upsert?: InstitutionUpsertWithWhereUniqueWithoutCreatorInput | InstitutionUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: InstitutionCreateManyCreatorInputEnvelope
    set?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    disconnect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    delete?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    connect?: InstitutionWhereUniqueInput | InstitutionWhereUniqueInput[]
    update?: InstitutionUpdateWithWhereUniqueWithoutCreatorInput | InstitutionUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: InstitutionUpdateManyWithWhereWithoutCreatorInput | InstitutionUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: InstitutionScalarWhereInput | InstitutionScalarWhereInput[]
  }

  export type MunicipalityUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput> | MunicipalityCreateWithoutCreatorInput[] | MunicipalityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCreatorInput | MunicipalityCreateOrConnectWithoutCreatorInput[]
    upsert?: MunicipalityUpsertWithWhereUniqueWithoutCreatorInput | MunicipalityUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: MunicipalityCreateManyCreatorInputEnvelope
    set?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    disconnect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    delete?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    connect?: MunicipalityWhereUniqueInput | MunicipalityWhereUniqueInput[]
    update?: MunicipalityUpdateWithWhereUniqueWithoutCreatorInput | MunicipalityUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: MunicipalityUpdateManyWithWhereWithoutCreatorInput | MunicipalityUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: MunicipalityScalarWhereInput | MunicipalityScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserCreateNestedOneWithoutCreatedInstitutionsInput = {
    create?: XOR<UserCreateWithoutCreatedInstitutionsInput, UserUncheckedCreateWithoutCreatedInstitutionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedInstitutionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumInstitutionTypeFieldUpdateOperationsInput = {
    set?: $Enums.InstitutionType
  }

  export type UserUpdateOneRequiredWithoutCreatedInstitutionsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedInstitutionsInput, UserUncheckedCreateWithoutCreatedInstitutionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedInstitutionsInput
    upsert?: UserUpsertWithoutCreatedInstitutionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedInstitutionsInput, UserUpdateWithoutCreatedInstitutionsInput>, UserUncheckedUpdateWithoutCreatedInstitutionsInput>
  }

  export type CompanyCreateNestedManyWithoutMunicipalityInput = {
    create?: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput> | CompanyCreateWithoutMunicipalityInput[] | CompanyUncheckedCreateWithoutMunicipalityInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutMunicipalityInput | CompanyCreateOrConnectWithoutMunicipalityInput[]
    createMany?: CompanyCreateManyMunicipalityInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedMunicipalitiesInput = {
    create?: XOR<UserCreateWithoutCreatedMunicipalitiesInput, UserUncheckedCreateWithoutCreatedMunicipalitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedMunicipalitiesInput
    connect?: UserWhereUniqueInput
  }

  export type CompanyUncheckedCreateNestedManyWithoutMunicipalityInput = {
    create?: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput> | CompanyCreateWithoutMunicipalityInput[] | CompanyUncheckedCreateWithoutMunicipalityInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutMunicipalityInput | CompanyCreateOrConnectWithoutMunicipalityInput[]
    createMany?: CompanyCreateManyMunicipalityInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type CompanyUpdateManyWithoutMunicipalityNestedInput = {
    create?: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput> | CompanyCreateWithoutMunicipalityInput[] | CompanyUncheckedCreateWithoutMunicipalityInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutMunicipalityInput | CompanyCreateOrConnectWithoutMunicipalityInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutMunicipalityInput | CompanyUpsertWithWhereUniqueWithoutMunicipalityInput[]
    createMany?: CompanyCreateManyMunicipalityInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutMunicipalityInput | CompanyUpdateWithWhereUniqueWithoutMunicipalityInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutMunicipalityInput | CompanyUpdateManyWithWhereWithoutMunicipalityInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutCreatedMunicipalitiesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedMunicipalitiesInput, UserUncheckedCreateWithoutCreatedMunicipalitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedMunicipalitiesInput
    upsert?: UserUpsertWithoutCreatedMunicipalitiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedMunicipalitiesInput, UserUpdateWithoutCreatedMunicipalitiesInput>, UserUncheckedUpdateWithoutCreatedMunicipalitiesInput>
  }

  export type CompanyUncheckedUpdateManyWithoutMunicipalityNestedInput = {
    create?: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput> | CompanyCreateWithoutMunicipalityInput[] | CompanyUncheckedCreateWithoutMunicipalityInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutMunicipalityInput | CompanyCreateOrConnectWithoutMunicipalityInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutMunicipalityInput | CompanyUpsertWithWhereUniqueWithoutMunicipalityInput[]
    createMany?: CompanyCreateManyMunicipalityInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutMunicipalityInput | CompanyUpdateWithWhereUniqueWithoutMunicipalityInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutMunicipalityInput | CompanyUpdateManyWithWhereWithoutMunicipalityInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatedCompaniesInput = {
    create?: XOR<UserCreateWithoutCreatedCompaniesInput, UserUncheckedCreateWithoutCreatedCompaniesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCompaniesInput
    connect?: UserWhereUniqueInput
  }

  export type MunicipalityCreateNestedOneWithoutCompaniesInput = {
    create?: XOR<MunicipalityCreateWithoutCompaniesInput, MunicipalityUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCompaniesInput
    connect?: MunicipalityWhereUniqueInput
  }

  export type JobOfferCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput> | JobOfferCreateWithoutCompanyInput[] | JobOfferUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobOfferCreateOrConnectWithoutCompanyInput | JobOfferCreateOrConnectWithoutCompanyInput[]
    createMany?: JobOfferCreateManyCompanyInputEnvelope
    connect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
  }

  export type ProfileCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput> | ProfileCreateWithoutCompanyInput[] | ProfileUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCompanyInput | ProfileCreateOrConnectWithoutCompanyInput[]
    createMany?: ProfileCreateManyCompanyInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type JobOfferUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput> | JobOfferCreateWithoutCompanyInput[] | JobOfferUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobOfferCreateOrConnectWithoutCompanyInput | JobOfferCreateOrConnectWithoutCompanyInput[]
    createMany?: JobOfferCreateManyCompanyInputEnvelope
    connect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput> | ProfileCreateWithoutCompanyInput[] | ProfileUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCompanyInput | ProfileCreateOrConnectWithoutCompanyInput[]
    createMany?: ProfileCreateManyCompanyInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutCreatedCompaniesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedCompaniesInput, UserUncheckedCreateWithoutCreatedCompaniesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCompaniesInput
    upsert?: UserUpsertWithoutCreatedCompaniesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedCompaniesInput, UserUpdateWithoutCreatedCompaniesInput>, UserUncheckedUpdateWithoutCreatedCompaniesInput>
  }

  export type MunicipalityUpdateOneRequiredWithoutCompaniesNestedInput = {
    create?: XOR<MunicipalityCreateWithoutCompaniesInput, MunicipalityUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: MunicipalityCreateOrConnectWithoutCompaniesInput
    upsert?: MunicipalityUpsertWithoutCompaniesInput
    connect?: MunicipalityWhereUniqueInput
    update?: XOR<XOR<MunicipalityUpdateToOneWithWhereWithoutCompaniesInput, MunicipalityUpdateWithoutCompaniesInput>, MunicipalityUncheckedUpdateWithoutCompaniesInput>
  }

  export type JobOfferUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput> | JobOfferCreateWithoutCompanyInput[] | JobOfferUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobOfferCreateOrConnectWithoutCompanyInput | JobOfferCreateOrConnectWithoutCompanyInput[]
    upsert?: JobOfferUpsertWithWhereUniqueWithoutCompanyInput | JobOfferUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobOfferCreateManyCompanyInputEnvelope
    set?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    disconnect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    delete?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    connect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    update?: JobOfferUpdateWithWhereUniqueWithoutCompanyInput | JobOfferUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobOfferUpdateManyWithWhereWithoutCompanyInput | JobOfferUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobOfferScalarWhereInput | JobOfferScalarWhereInput[]
  }

  export type ProfileUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput> | ProfileCreateWithoutCompanyInput[] | ProfileUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCompanyInput | ProfileCreateOrConnectWithoutCompanyInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutCompanyInput | ProfileUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ProfileCreateManyCompanyInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutCompanyInput | ProfileUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutCompanyInput | ProfileUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type JobOfferUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput> | JobOfferCreateWithoutCompanyInput[] | JobOfferUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobOfferCreateOrConnectWithoutCompanyInput | JobOfferCreateOrConnectWithoutCompanyInput[]
    upsert?: JobOfferUpsertWithWhereUniqueWithoutCompanyInput | JobOfferUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobOfferCreateManyCompanyInputEnvelope
    set?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    disconnect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    delete?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    connect?: JobOfferWhereUniqueInput | JobOfferWhereUniqueInput[]
    update?: JobOfferUpdateWithWhereUniqueWithoutCompanyInput | JobOfferUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobOfferUpdateManyWithWhereWithoutCompanyInput | JobOfferUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobOfferScalarWhereInput | JobOfferScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput> | ProfileCreateWithoutCompanyInput[] | ProfileUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutCompanyInput | ProfileCreateOrConnectWithoutCompanyInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutCompanyInput | ProfileUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ProfileCreateManyCompanyInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutCompanyInput | ProfileUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutCompanyInput | ProfileUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutContactsInput = {
    create?: XOR<ProfileCreateWithoutContactsInput, ProfileUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutContactsInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutContactOfInput = {
    create?: XOR<ProfileCreateWithoutContactOfInput, ProfileUncheckedCreateWithoutContactOfInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutContactOfInput
    connect?: ProfileWhereUniqueInput
  }

  export type EnumContactStatusFieldUpdateOperationsInput = {
    set?: $Enums.ContactStatus
  }

  export type ProfileUpdateOneRequiredWithoutContactsNestedInput = {
    create?: XOR<ProfileCreateWithoutContactsInput, ProfileUncheckedCreateWithoutContactsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutContactsInput
    upsert?: ProfileUpsertWithoutContactsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutContactsInput, ProfileUpdateWithoutContactsInput>, ProfileUncheckedUpdateWithoutContactsInput>
  }

  export type ProfileUpdateOneRequiredWithoutContactOfNestedInput = {
    create?: XOR<ProfileCreateWithoutContactOfInput, ProfileUncheckedCreateWithoutContactOfInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutContactOfInput
    upsert?: ProfileUpsertWithoutContactOfInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutContactOfInput, ProfileUpdateWithoutContactOfInput>, ProfileUncheckedUpdateWithoutContactOfInput>
  }

  export type ConversationCreateparticipantsInput = {
    set: string[]
  }

  export type MessageCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ConversationUpdateparticipantsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type MessageUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ConversationCreateNestedOneWithoutMessagesInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<ProfileCreateWithoutSentMessagesInput, ProfileUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSentMessagesInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<ProfileCreateWithoutReceivedMessagesInput, ProfileUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutReceivedMessagesInput
    connect?: ProfileWhereUniqueInput
  }

  export type ConversationUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    upsert?: ConversationUpsertWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
    update?: XOR<XOR<ConversationUpdateToOneWithWhereWithoutMessagesInput, ConversationUpdateWithoutMessagesInput>, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type ProfileUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<ProfileCreateWithoutSentMessagesInput, ProfileUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSentMessagesInput
    upsert?: ProfileUpsertWithoutSentMessagesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutSentMessagesInput, ProfileUpdateWithoutSentMessagesInput>, ProfileUncheckedUpdateWithoutSentMessagesInput>
  }

  export type ProfileUpdateOneRequiredWithoutReceivedMessagesNestedInput = {
    create?: XOR<ProfileCreateWithoutReceivedMessagesInput, ProfileUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutReceivedMessagesInput
    upsert?: ProfileUpsertWithoutReceivedMessagesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutReceivedMessagesInput, ProfileUpdateWithoutReceivedMessagesInput>, ProfileUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type LessonCreateNestedOneWithoutResourcesInput = {
    create?: XOR<LessonCreateWithoutResourcesInput, LessonUncheckedCreateWithoutResourcesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutResourcesInput
    connect?: LessonWhereUniqueInput
  }

  export type EnumResourceTypeFieldUpdateOperationsInput = {
    set?: $Enums.ResourceType
  }

  export type LessonUpdateOneRequiredWithoutResourcesNestedInput = {
    create?: XOR<LessonCreateWithoutResourcesInput, LessonUncheckedCreateWithoutResourcesInput>
    connectOrCreate?: LessonCreateOrConnectWithoutResourcesInput
    upsert?: LessonUpsertWithoutResourcesInput
    connect?: LessonWhereUniqueInput
    update?: XOR<XOR<LessonUpdateToOneWithWhereWithoutResourcesInput, LessonUpdateWithoutResourcesInput>, LessonUncheckedUpdateWithoutResourcesInput>
  }

  export type CourseModuleCreateNestedOneWithoutModuleCertificatesInput = {
    create?: XOR<CourseModuleCreateWithoutModuleCertificatesInput, CourseModuleUncheckedCreateWithoutModuleCertificatesInput>
    connectOrCreate?: CourseModuleCreateOrConnectWithoutModuleCertificatesInput
    connect?: CourseModuleWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutModuleCertificatesInput = {
    create?: XOR<ProfileCreateWithoutModuleCertificatesInput, ProfileUncheckedCreateWithoutModuleCertificatesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutModuleCertificatesInput
    connect?: ProfileWhereUniqueInput
  }

  export type CourseModuleUpdateOneRequiredWithoutModuleCertificatesNestedInput = {
    create?: XOR<CourseModuleCreateWithoutModuleCertificatesInput, CourseModuleUncheckedCreateWithoutModuleCertificatesInput>
    connectOrCreate?: CourseModuleCreateOrConnectWithoutModuleCertificatesInput
    upsert?: CourseModuleUpsertWithoutModuleCertificatesInput
    connect?: CourseModuleWhereUniqueInput
    update?: XOR<XOR<CourseModuleUpdateToOneWithWhereWithoutModuleCertificatesInput, CourseModuleUpdateWithoutModuleCertificatesInput>, CourseModuleUncheckedUpdateWithoutModuleCertificatesInput>
  }

  export type ProfileUpdateOneRequiredWithoutModuleCertificatesNestedInput = {
    create?: XOR<ProfileCreateWithoutModuleCertificatesInput, ProfileUncheckedCreateWithoutModuleCertificatesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutModuleCertificatesInput
    upsert?: ProfileUpsertWithoutModuleCertificatesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutModuleCertificatesInput, ProfileUpdateWithoutModuleCertificatesInput>, ProfileUncheckedUpdateWithoutModuleCertificatesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumEducationLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EducationLevel | EnumEducationLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEducationLevelNullableFilter<$PrismaModel> | $Enums.EducationLevel | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumCompanySizeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySize | EnumCompanySizeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeNullableFilter<$PrismaModel> | $Enums.CompanySize | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumEducationLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EducationLevel | EnumEducationLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EducationLevel[] | ListEnumEducationLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEducationLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.EducationLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEducationLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumEducationLevelNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumCompanySizeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanySize | EnumCompanySizeFieldRefInput<$PrismaModel> | null
    in?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.CompanySize[] | ListEnumCompanySizeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumCompanySizeNullableWithAggregatesFilter<$PrismaModel> | $Enums.CompanySize | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCompanySizeNullableFilter<$PrismaModel>
    _max?: NestedEnumCompanySizeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumContractTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumContractTypeFilter<$PrismaModel> | $Enums.ContractType
  }

  export type NestedEnumWorkModalityFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkModality | EnumWorkModalityFieldRefInput<$PrismaModel>
    in?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    notIn?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    not?: NestedEnumWorkModalityFilter<$PrismaModel> | $Enums.WorkModality
  }

  export type NestedEnumExperienceLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.ExperienceLevel | EnumExperienceLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumExperienceLevelFilter<$PrismaModel> | $Enums.ExperienceLevel
  }

  export type NestedEnumJobStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusFilter<$PrismaModel> | $Enums.JobStatus
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumContractTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContractType | EnumContractTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContractType[] | ListEnumContractTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumContractTypeWithAggregatesFilter<$PrismaModel> | $Enums.ContractType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContractTypeFilter<$PrismaModel>
    _max?: NestedEnumContractTypeFilter<$PrismaModel>
  }

  export type NestedEnumWorkModalityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WorkModality | EnumWorkModalityFieldRefInput<$PrismaModel>
    in?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    notIn?: $Enums.WorkModality[] | ListEnumWorkModalityFieldRefInput<$PrismaModel>
    not?: NestedEnumWorkModalityWithAggregatesFilter<$PrismaModel> | $Enums.WorkModality
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWorkModalityFilter<$PrismaModel>
    _max?: NestedEnumWorkModalityFilter<$PrismaModel>
  }

  export type NestedEnumExperienceLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ExperienceLevel | EnumExperienceLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ExperienceLevel[] | ListEnumExperienceLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumExperienceLevelWithAggregatesFilter<$PrismaModel> | $Enums.ExperienceLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumExperienceLevelFilter<$PrismaModel>
    _max?: NestedEnumExperienceLevelFilter<$PrismaModel>
  }

  export type NestedEnumJobStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JobStatus | EnumJobStatusFieldRefInput<$PrismaModel>
    in?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.JobStatus[] | ListEnumJobStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumJobStatusWithAggregatesFilter<$PrismaModel> | $Enums.JobStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJobStatusFilter<$PrismaModel>
    _max?: NestedEnumJobStatusFilter<$PrismaModel>
  }

  export type NestedEnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type NestedEnumSenderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SenderType | EnumSenderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSenderTypeFilter<$PrismaModel> | $Enums.SenderType
  }

  export type NestedEnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type NestedEnumMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusFilter<$PrismaModel> | $Enums.MessageStatus
  }

  export type NestedEnumSenderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SenderType | EnumSenderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SenderType[] | ListEnumSenderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSenderTypeWithAggregatesFilter<$PrismaModel> | $Enums.SenderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSenderTypeFilter<$PrismaModel>
    _max?: NestedEnumSenderTypeFilter<$PrismaModel>
  }

  export type NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.MessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumMessageStatusFilter<$PrismaModel>
  }

  export type NestedEnumCourseLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseLevel | EnumCourseLevelFieldRefInput<$PrismaModel>
    in?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseLevelFilter<$PrismaModel> | $Enums.CourseLevel
  }

  export type NestedEnumCourseCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseCategory | EnumCourseCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseCategoryFilter<$PrismaModel> | $Enums.CourseCategory
  }

  export type NestedEnumCourseLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseLevel | EnumCourseLevelFieldRefInput<$PrismaModel>
    in?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseLevel[] | ListEnumCourseLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseLevelWithAggregatesFilter<$PrismaModel> | $Enums.CourseLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCourseLevelFilter<$PrismaModel>
    _max?: NestedEnumCourseLevelFilter<$PrismaModel>
  }

  export type NestedEnumCourseCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CourseCategory | EnumCourseCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.CourseCategory[] | ListEnumCourseCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumCourseCategoryWithAggregatesFilter<$PrismaModel> | $Enums.CourseCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCourseCategoryFilter<$PrismaModel>
    _max?: NestedEnumCourseCategoryFilter<$PrismaModel>
  }

  export type NestedEnumLessonTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LessonType | EnumLessonTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLessonTypeFilter<$PrismaModel> | $Enums.LessonType
  }

  export type NestedEnumLessonTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LessonType | EnumLessonTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LessonType[] | ListEnumLessonTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLessonTypeWithAggregatesFilter<$PrismaModel> | $Enums.LessonType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLessonTypeFilter<$PrismaModel>
    _max?: NestedEnumLessonTypeFilter<$PrismaModel>
  }

  export type NestedEnumEnrollmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusFilter<$PrismaModel> | $Enums.EnrollmentStatus
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.EnrollmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
    _max?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumQuestionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.QuestionType | EnumQuestionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumQuestionTypeFilter<$PrismaModel> | $Enums.QuestionType
  }

  export type NestedEnumQuestionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.QuestionType | EnumQuestionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.QuestionType[] | ListEnumQuestionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumQuestionTypeWithAggregatesFilter<$PrismaModel> | $Enums.QuestionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumQuestionTypeFilter<$PrismaModel>
    _max?: NestedEnumQuestionTypeFilter<$PrismaModel>
  }

  export type NestedEnumBusinessStageFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessStage | EnumBusinessStageFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessStageFilter<$PrismaModel> | $Enums.BusinessStage
  }

  export type NestedEnumBusinessStageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessStage | EnumBusinessStageFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessStage[] | ListEnumBusinessStageFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessStageWithAggregatesFilter<$PrismaModel> | $Enums.BusinessStage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessStageFilter<$PrismaModel>
    _max?: NestedEnumBusinessStageFilter<$PrismaModel>
  }

  export type NestedEnumNewsTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsType | EnumNewsTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsTypeFilter<$PrismaModel> | $Enums.NewsType
  }

  export type NestedEnumNewsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsStatusFilter<$PrismaModel> | $Enums.NewsStatus
  }

  export type NestedEnumNewsPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsPriority | EnumNewsPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsPriorityFilter<$PrismaModel> | $Enums.NewsPriority
  }

  export type NestedEnumNewsTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsType | EnumNewsTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsType[] | ListEnumNewsTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsTypeWithAggregatesFilter<$PrismaModel> | $Enums.NewsType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsTypeFilter<$PrismaModel>
    _max?: NestedEnumNewsTypeFilter<$PrismaModel>
  }

  export type NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsStatus[] | ListEnumNewsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel> | $Enums.NewsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsStatusFilter<$PrismaModel>
    _max?: NestedEnumNewsStatusFilter<$PrismaModel>
  }

  export type NestedEnumNewsPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsPriority | EnumNewsPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NewsPriority[] | ListEnumNewsPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNewsPriorityWithAggregatesFilter<$PrismaModel> | $Enums.NewsPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsPriorityFilter<$PrismaModel>
    _max?: NestedEnumNewsPriorityFilter<$PrismaModel>
  }

  export type NestedEnumInstitutionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InstitutionType | EnumInstitutionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInstitutionTypeFilter<$PrismaModel> | $Enums.InstitutionType
  }

  export type NestedEnumInstitutionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InstitutionType | EnumInstitutionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InstitutionType[] | ListEnumInstitutionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInstitutionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InstitutionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInstitutionTypeFilter<$PrismaModel>
    _max?: NestedEnumInstitutionTypeFilter<$PrismaModel>
  }

  export type NestedEnumContactStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactStatus | EnumContactStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumContactStatusFilter<$PrismaModel> | $Enums.ContactStatus
  }

  export type NestedEnumContactStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactStatus | EnumContactStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContactStatus[] | ListEnumContactStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumContactStatusWithAggregatesFilter<$PrismaModel> | $Enums.ContactStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContactStatusFilter<$PrismaModel>
    _max?: NestedEnumContactStatusFilter<$PrismaModel>
  }

  export type NestedEnumResourceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ResourceType | EnumResourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumResourceTypeFilter<$PrismaModel> | $Enums.ResourceType
  }

  export type NestedEnumResourceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ResourceType | EnumResourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ResourceType[] | ListEnumResourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumResourceTypeWithAggregatesFilter<$PrismaModel> | $Enums.ResourceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumResourceTypeFilter<$PrismaModel>
    _max?: NestedEnumResourceTypeFilter<$PrismaModel>
  }

  export type ContactCreateWithoutUserInput = {
    id?: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ProfileCreateNestedOneWithoutContactOfInput
  }

  export type ContactUncheckedCreateWithoutUserInput = {
    id?: string
    contactId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactCreateOrConnectWithoutUserInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput>
  }

  export type ContactCreateManyUserInputEnvelope = {
    data: ContactCreateManyUserInput | ContactCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ContactCreateWithoutContactInput = {
    id?: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: ProfileCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutContactInput = {
    id?: string
    userId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactCreateOrConnectWithoutContactInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput>
  }

  export type ContactCreateManyContactInputEnvelope = {
    data: ContactCreateManyContactInput | ContactCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    receiver: ProfileCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    conversationId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutReceiverInput = {
    id?: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    sender: ProfileCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutReceiverInput = {
    id?: string
    conversationId: string
    senderId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateOrConnectWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageCreateManyReceiverInputEnvelope = {
    data: MessageCreateManyReceiverInput | MessageCreateManyReceiverInput[]
    skipDuplicates?: boolean
  }

  export type CertificateCreateWithoutUserInput = {
    id?: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
    course: CourseCreateNestedOneWithoutCertificatesInput
  }

  export type CertificateUncheckedCreateWithoutUserInput = {
    id?: string
    courseId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CertificateCreateOrConnectWithoutUserInput = {
    where: CertificateWhereUniqueInput
    create: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput>
  }

  export type CertificateCreateManyUserInputEnvelope = {
    data: CertificateCreateManyUserInput | CertificateCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CourseEnrollmentCreateWithoutStudentInput = {
    id?: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course: CourseCreateNestedOneWithoutEnrollmentsInput
    lessonProgress?: LessonProgressCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUncheckedCreateWithoutStudentInput = {
    id?: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentCreateOrConnectWithoutStudentInput = {
    where: CourseEnrollmentWhereUniqueInput
    create: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput>
  }

  export type CourseEnrollmentCreateManyStudentInputEnvelope = {
    data: CourseEnrollmentCreateManyStudentInput | CourseEnrollmentCreateManyStudentInput[]
    skipDuplicates?: boolean
  }

  export type CourseCreateWithoutInstructorInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentCreateNestedManyWithoutCourseInput
    modules?: CourseModuleCreateNestedManyWithoutCourseInput
    quizzes?: QuizCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateWithoutInstructorInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateUncheckedCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput
    modules?: CourseModuleUncheckedCreateNestedManyWithoutCourseInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutInstructorInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput>
  }

  export type CourseCreateManyInstructorInputEnvelope = {
    data: CourseCreateManyInstructorInput | CourseCreateManyInstructorInput[]
    skipDuplicates?: boolean
  }

  export type DiscussionCreateWithoutUserInput = {
    id?: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutDiscussionsInput
    parent?: DiscussionCreateNestedOneWithoutRepliesInput
    replies?: DiscussionCreateNestedManyWithoutParentInput
  }

  export type DiscussionUncheckedCreateWithoutUserInput = {
    id?: string
    lessonId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: DiscussionUncheckedCreateNestedManyWithoutParentInput
  }

  export type DiscussionCreateOrConnectWithoutUserInput = {
    where: DiscussionWhereUniqueInput
    create: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput>
  }

  export type DiscussionCreateManyUserInputEnvelope = {
    data: DiscussionCreateManyUserInput | DiscussionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EntrepreneurshipCreateWithoutOwnerInput = {
    id?: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    businessPlan?: BusinessPlanCreateNestedOneWithoutEntrepreneurshipInput
  }

  export type EntrepreneurshipUncheckedCreateWithoutOwnerInput = {
    id?: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    businessPlan?: BusinessPlanUncheckedCreateNestedOneWithoutEntrepreneurshipInput
  }

  export type EntrepreneurshipCreateOrConnectWithoutOwnerInput = {
    where: EntrepreneurshipWhereUniqueInput
    create: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput>
  }

  export type EntrepreneurshipCreateManyOwnerInputEnvelope = {
    data: EntrepreneurshipCreateManyOwnerInput | EntrepreneurshipCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type JobApplicationCreateWithoutApplicantInput = {
    id?: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    jobOffer: JobOfferCreateNestedOneWithoutApplicationsInput
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUncheckedCreateWithoutApplicantInput = {
    id?: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationCreateOrConnectWithoutApplicantInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput>
  }

  export type JobApplicationCreateManyApplicantInputEnvelope = {
    data: JobApplicationCreateManyApplicantInput | JobApplicationCreateManyApplicantInput[]
    skipDuplicates?: boolean
  }

  export type NewsArticleCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    comments?: NewsCommentCreateNestedManyWithoutNewsInput
  }

  export type NewsArticleUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    comments?: NewsCommentUncheckedCreateNestedManyWithoutNewsInput
  }

  export type NewsArticleCreateOrConnectWithoutAuthorInput = {
    where: NewsArticleWhereUniqueInput
    create: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput>
  }

  export type NewsArticleCreateManyAuthorInputEnvelope = {
    data: NewsArticleCreateManyAuthorInput | NewsArticleCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type NewsCommentCreateWithoutUserInput = {
    id?: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    news: NewsArticleCreateNestedOneWithoutCommentsInput
    parent?: NewsCommentCreateNestedOneWithoutRepliesInput
    replies?: NewsCommentCreateNestedManyWithoutParentInput
  }

  export type NewsCommentUncheckedCreateWithoutUserInput = {
    id?: string
    newsId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: NewsCommentUncheckedCreateNestedManyWithoutParentInput
  }

  export type NewsCommentCreateOrConnectWithoutUserInput = {
    where: NewsCommentWhereUniqueInput
    create: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput>
  }

  export type NewsCommentCreateManyUserInputEnvelope = {
    data: NewsCommentCreateManyUserInput | NewsCommentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutProfilesInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedCompaniesInput
    municipality: MunicipalityCreateNestedOneWithoutCompaniesInput
    jobOffers?: JobOfferCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutProfilesInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    jobOffers?: JobOfferUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutProfilesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutProfilesInput, CompanyUncheckedCreateWithoutProfilesInput>
  }

  export type QuizAttemptCreateWithoutStudentInput = {
    id?: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerCreateNestedManyWithoutAttemptInput
    enrollment?: CourseEnrollmentCreateNestedOneWithoutQuizAttemptsInput
    quiz: QuizCreateNestedOneWithoutAttemptsInput
  }

  export type QuizAttemptUncheckedCreateWithoutStudentInput = {
    id?: string
    enrollmentId?: string | null
    quizId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutAttemptInput
  }

  export type QuizAttemptCreateOrConnectWithoutStudentInput = {
    where: QuizAttemptWhereUniqueInput
    create: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput>
  }

  export type QuizAttemptCreateManyStudentInputEnvelope = {
    data: QuizAttemptCreateManyStudentInput | QuizAttemptCreateManyStudentInput[]
    skipDuplicates?: boolean
  }

  export type StudentNoteCreateWithoutUserInput = {
    id?: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutNotesInput
  }

  export type StudentNoteUncheckedCreateWithoutUserInput = {
    id?: string
    lessonId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudentNoteCreateOrConnectWithoutUserInput = {
    where: StudentNoteWhereUniqueInput
    create: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput>
  }

  export type StudentNoteCreateManyUserInputEnvelope = {
    data: StudentNoteCreateManyUserInput | StudentNoteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ModuleCertificateCreateWithoutStudentInput = {
    id?: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
    module: CourseModuleCreateNestedOneWithoutModuleCertificatesInput
  }

  export type ModuleCertificateUncheckedCreateWithoutStudentInput = {
    id?: string
    moduleId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type ModuleCertificateCreateOrConnectWithoutStudentInput = {
    where: ModuleCertificateWhereUniqueInput
    create: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput>
  }

  export type ModuleCertificateCreateManyStudentInputEnvelope = {
    data: ModuleCertificateCreateManyStudentInput | ModuleCertificateCreateManyStudentInput[]
    skipDuplicates?: boolean
  }

  export type ContactUpsertWithWhereUniqueWithoutUserInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutUserInput, ContactUncheckedUpdateWithoutUserInput>
    create: XOR<ContactCreateWithoutUserInput, ContactUncheckedCreateWithoutUserInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutUserInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutUserInput, ContactUncheckedUpdateWithoutUserInput>
  }

  export type ContactUpdateManyWithWhereWithoutUserInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutUserInput>
  }

  export type ContactScalarWhereInput = {
    AND?: ContactScalarWhereInput | ContactScalarWhereInput[]
    OR?: ContactScalarWhereInput[]
    NOT?: ContactScalarWhereInput | ContactScalarWhereInput[]
    id?: StringFilter<"Contact"> | string
    userId?: StringFilter<"Contact"> | string
    contactId?: StringFilter<"Contact"> | string
    status?: EnumContactStatusFilter<"Contact"> | $Enums.ContactStatus
    requestMessage?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
  }

  export type ContactUpsertWithWhereUniqueWithoutContactInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutContactInput, ContactUncheckedUpdateWithoutContactInput>
    create: XOR<ContactCreateWithoutContactInput, ContactUncheckedCreateWithoutContactInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutContactInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutContactInput, ContactUncheckedUpdateWithoutContactInput>
  }

  export type ContactUpdateManyWithWhereWithoutContactInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutContactInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
  }

  export type MessageUpsertWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
  }

  export type MessageUpdateManyWithWhereWithoutReceiverInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutReceiverInput>
  }

  export type CertificateUpsertWithWhereUniqueWithoutUserInput = {
    where: CertificateWhereUniqueInput
    update: XOR<CertificateUpdateWithoutUserInput, CertificateUncheckedUpdateWithoutUserInput>
    create: XOR<CertificateCreateWithoutUserInput, CertificateUncheckedCreateWithoutUserInput>
  }

  export type CertificateUpdateWithWhereUniqueWithoutUserInput = {
    where: CertificateWhereUniqueInput
    data: XOR<CertificateUpdateWithoutUserInput, CertificateUncheckedUpdateWithoutUserInput>
  }

  export type CertificateUpdateManyWithWhereWithoutUserInput = {
    where: CertificateScalarWhereInput
    data: XOR<CertificateUpdateManyMutationInput, CertificateUncheckedUpdateManyWithoutUserInput>
  }

  export type CertificateScalarWhereInput = {
    AND?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
    OR?: CertificateScalarWhereInput[]
    NOT?: CertificateScalarWhereInput | CertificateScalarWhereInput[]
    id?: StringFilter<"Certificate"> | string
    userId?: StringFilter<"Certificate"> | string
    courseId?: StringFilter<"Certificate"> | string
    template?: StringFilter<"Certificate"> | string
    issuedAt?: DateTimeFilter<"Certificate"> | Date | string
    verificationCode?: StringFilter<"Certificate"> | string
    digitalSignature?: StringFilter<"Certificate"> | string
    isValid?: BoolFilter<"Certificate"> | boolean
    url?: StringNullableFilter<"Certificate"> | string | null
  }

  export type CourseEnrollmentUpsertWithWhereUniqueWithoutStudentInput = {
    where: CourseEnrollmentWhereUniqueInput
    update: XOR<CourseEnrollmentUpdateWithoutStudentInput, CourseEnrollmentUncheckedUpdateWithoutStudentInput>
    create: XOR<CourseEnrollmentCreateWithoutStudentInput, CourseEnrollmentUncheckedCreateWithoutStudentInput>
  }

  export type CourseEnrollmentUpdateWithWhereUniqueWithoutStudentInput = {
    where: CourseEnrollmentWhereUniqueInput
    data: XOR<CourseEnrollmentUpdateWithoutStudentInput, CourseEnrollmentUncheckedUpdateWithoutStudentInput>
  }

  export type CourseEnrollmentUpdateManyWithWhereWithoutStudentInput = {
    where: CourseEnrollmentScalarWhereInput
    data: XOR<CourseEnrollmentUpdateManyMutationInput, CourseEnrollmentUncheckedUpdateManyWithoutStudentInput>
  }

  export type CourseEnrollmentScalarWhereInput = {
    AND?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
    OR?: CourseEnrollmentScalarWhereInput[]
    NOT?: CourseEnrollmentScalarWhereInput | CourseEnrollmentScalarWhereInput[]
    id?: StringFilter<"CourseEnrollment"> | string
    studentId?: StringFilter<"CourseEnrollment"> | string
    courseId?: StringFilter<"CourseEnrollment"> | string
    enrolledAt?: DateTimeFilter<"CourseEnrollment"> | Date | string
    startedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"CourseEnrollment"> | Date | string | null
    status?: EnumEnrollmentStatusFilter<"CourseEnrollment"> | $Enums.EnrollmentStatus
    progress?: DecimalFilter<"CourseEnrollment"> | Decimal | DecimalJsLike | number | string
    currentModuleId?: StringNullableFilter<"CourseEnrollment"> | string | null
    currentLessonId?: StringNullableFilter<"CourseEnrollment"> | string | null
    certificateUrl?: StringNullableFilter<"CourseEnrollment"> | string | null
    timeSpent?: IntFilter<"CourseEnrollment"> | number
    certificateIssued?: BoolFilter<"CourseEnrollment"> | boolean
    finalGrade?: IntNullableFilter<"CourseEnrollment"> | number | null
    moduleProgress?: JsonNullableFilter<"CourseEnrollment">
    quizResults?: JsonNullableFilter<"CourseEnrollment">
  }

  export type CourseUpsertWithWhereUniqueWithoutInstructorInput = {
    where: CourseWhereUniqueInput
    update: XOR<CourseUpdateWithoutInstructorInput, CourseUncheckedUpdateWithoutInstructorInput>
    create: XOR<CourseCreateWithoutInstructorInput, CourseUncheckedCreateWithoutInstructorInput>
  }

  export type CourseUpdateWithWhereUniqueWithoutInstructorInput = {
    where: CourseWhereUniqueInput
    data: XOR<CourseUpdateWithoutInstructorInput, CourseUncheckedUpdateWithoutInstructorInput>
  }

  export type CourseUpdateManyWithWhereWithoutInstructorInput = {
    where: CourseScalarWhereInput
    data: XOR<CourseUpdateManyMutationInput, CourseUncheckedUpdateManyWithoutInstructorInput>
  }

  export type CourseScalarWhereInput = {
    AND?: CourseScalarWhereInput | CourseScalarWhereInput[]
    OR?: CourseScalarWhereInput[]
    NOT?: CourseScalarWhereInput | CourseScalarWhereInput[]
    id?: StringFilter<"Course"> | string
    title?: StringFilter<"Course"> | string
    slug?: StringFilter<"Course"> | string
    description?: StringFilter<"Course"> | string
    shortDescription?: StringNullableFilter<"Course"> | string | null
    thumbnail?: StringNullableFilter<"Course"> | string | null
    videoPreview?: StringNullableFilter<"Course"> | string | null
    objectives?: StringNullableListFilter<"Course">
    prerequisites?: StringNullableListFilter<"Course">
    duration?: IntFilter<"Course"> | number
    level?: EnumCourseLevelFilter<"Course"> | $Enums.CourseLevel
    category?: EnumCourseCategoryFilter<"Course"> | $Enums.CourseCategory
    isMandatory?: BoolFilter<"Course"> | boolean
    isActive?: BoolFilter<"Course"> | boolean
    price?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFilter<"Course"> | number
    completionRate?: DecimalNullableFilter<"Course"> | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFilter<"Course"> | number
    totalQuizzes?: IntFilter<"Course"> | number
    totalResources?: IntFilter<"Course"> | number
    tags?: StringNullableListFilter<"Course">
    certification?: BoolFilter<"Course"> | boolean
    includedMaterials?: StringNullableListFilter<"Course">
    instructorId?: StringNullableFilter<"Course"> | string | null
    institutionName?: StringNullableFilter<"Course"> | string | null
    createdAt?: DateTimeFilter<"Course"> | Date | string
    updatedAt?: DateTimeFilter<"Course"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Course"> | Date | string | null
  }

  export type DiscussionUpsertWithWhereUniqueWithoutUserInput = {
    where: DiscussionWhereUniqueInput
    update: XOR<DiscussionUpdateWithoutUserInput, DiscussionUncheckedUpdateWithoutUserInput>
    create: XOR<DiscussionCreateWithoutUserInput, DiscussionUncheckedCreateWithoutUserInput>
  }

  export type DiscussionUpdateWithWhereUniqueWithoutUserInput = {
    where: DiscussionWhereUniqueInput
    data: XOR<DiscussionUpdateWithoutUserInput, DiscussionUncheckedUpdateWithoutUserInput>
  }

  export type DiscussionUpdateManyWithWhereWithoutUserInput = {
    where: DiscussionScalarWhereInput
    data: XOR<DiscussionUpdateManyMutationInput, DiscussionUncheckedUpdateManyWithoutUserInput>
  }

  export type DiscussionScalarWhereInput = {
    AND?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
    OR?: DiscussionScalarWhereInput[]
    NOT?: DiscussionScalarWhereInput | DiscussionScalarWhereInput[]
    id?: StringFilter<"Discussion"> | string
    lessonId?: StringFilter<"Discussion"> | string
    userId?: StringFilter<"Discussion"> | string
    content?: StringFilter<"Discussion"> | string
    parentId?: StringNullableFilter<"Discussion"> | string | null
    likes?: IntFilter<"Discussion"> | number
    createdAt?: DateTimeFilter<"Discussion"> | Date | string
    updatedAt?: DateTimeFilter<"Discussion"> | Date | string
  }

  export type EntrepreneurshipUpsertWithWhereUniqueWithoutOwnerInput = {
    where: EntrepreneurshipWhereUniqueInput
    update: XOR<EntrepreneurshipUpdateWithoutOwnerInput, EntrepreneurshipUncheckedUpdateWithoutOwnerInput>
    create: XOR<EntrepreneurshipCreateWithoutOwnerInput, EntrepreneurshipUncheckedCreateWithoutOwnerInput>
  }

  export type EntrepreneurshipUpdateWithWhereUniqueWithoutOwnerInput = {
    where: EntrepreneurshipWhereUniqueInput
    data: XOR<EntrepreneurshipUpdateWithoutOwnerInput, EntrepreneurshipUncheckedUpdateWithoutOwnerInput>
  }

  export type EntrepreneurshipUpdateManyWithWhereWithoutOwnerInput = {
    where: EntrepreneurshipScalarWhereInput
    data: XOR<EntrepreneurshipUpdateManyMutationInput, EntrepreneurshipUncheckedUpdateManyWithoutOwnerInput>
  }

  export type EntrepreneurshipScalarWhereInput = {
    AND?: EntrepreneurshipScalarWhereInput | EntrepreneurshipScalarWhereInput[]
    OR?: EntrepreneurshipScalarWhereInput[]
    NOT?: EntrepreneurshipScalarWhereInput | EntrepreneurshipScalarWhereInput[]
    id?: StringFilter<"Entrepreneurship"> | string
    ownerId?: StringFilter<"Entrepreneurship"> | string
    name?: StringFilter<"Entrepreneurship"> | string
    description?: StringFilter<"Entrepreneurship"> | string
    category?: StringFilter<"Entrepreneurship"> | string
    subcategory?: StringNullableFilter<"Entrepreneurship"> | string | null
    businessStage?: EnumBusinessStageFilter<"Entrepreneurship"> | $Enums.BusinessStage
    logo?: StringNullableFilter<"Entrepreneurship"> | string | null
    images?: StringNullableListFilter<"Entrepreneurship">
    website?: StringNullableFilter<"Entrepreneurship"> | string | null
    email?: StringNullableFilter<"Entrepreneurship"> | string | null
    phone?: StringNullableFilter<"Entrepreneurship"> | string | null
    address?: StringNullableFilter<"Entrepreneurship"> | string | null
    municipality?: StringFilter<"Entrepreneurship"> | string
    department?: StringFilter<"Entrepreneurship"> | string
    socialMedia?: JsonNullableFilter<"Entrepreneurship">
    founded?: DateTimeNullableFilter<"Entrepreneurship"> | Date | string | null
    employees?: IntNullableFilter<"Entrepreneurship"> | number | null
    annualRevenue?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    businessModel?: StringNullableFilter<"Entrepreneurship"> | string | null
    targetMarket?: StringNullableFilter<"Entrepreneurship"> | string | null
    isPublic?: BoolFilter<"Entrepreneurship"> | boolean
    isActive?: BoolFilter<"Entrepreneurship"> | boolean
    viewsCount?: IntFilter<"Entrepreneurship"> | number
    rating?: DecimalNullableFilter<"Entrepreneurship"> | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFilter<"Entrepreneurship"> | number
    createdAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
    updatedAt?: DateTimeFilter<"Entrepreneurship"> | Date | string
  }

  export type JobApplicationUpsertWithWhereUniqueWithoutApplicantInput = {
    where: JobApplicationWhereUniqueInput
    update: XOR<JobApplicationUpdateWithoutApplicantInput, JobApplicationUncheckedUpdateWithoutApplicantInput>
    create: XOR<JobApplicationCreateWithoutApplicantInput, JobApplicationUncheckedCreateWithoutApplicantInput>
  }

  export type JobApplicationUpdateWithWhereUniqueWithoutApplicantInput = {
    where: JobApplicationWhereUniqueInput
    data: XOR<JobApplicationUpdateWithoutApplicantInput, JobApplicationUncheckedUpdateWithoutApplicantInput>
  }

  export type JobApplicationUpdateManyWithWhereWithoutApplicantInput = {
    where: JobApplicationScalarWhereInput
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyWithoutApplicantInput>
  }

  export type JobApplicationScalarWhereInput = {
    AND?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
    OR?: JobApplicationScalarWhereInput[]
    NOT?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
    id?: StringFilter<"JobApplication"> | string
    applicantId?: StringFilter<"JobApplication"> | string
    jobOfferId?: StringFilter<"JobApplication"> | string
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    cvData?: JsonNullableFilter<"JobApplication">
    cvFile?: StringNullableFilter<"JobApplication"> | string | null
    coverLetterFile?: StringNullableFilter<"JobApplication"> | string | null
    profileImage?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    appliedAt?: DateTimeFilter<"JobApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
    notes?: StringNullableFilter<"JobApplication"> | string | null
    rating?: IntNullableFilter<"JobApplication"> | number | null
    decisionReason?: StringNullableFilter<"JobApplication"> | string | null
  }

  export type NewsArticleUpsertWithWhereUniqueWithoutAuthorInput = {
    where: NewsArticleWhereUniqueInput
    update: XOR<NewsArticleUpdateWithoutAuthorInput, NewsArticleUncheckedUpdateWithoutAuthorInput>
    create: XOR<NewsArticleCreateWithoutAuthorInput, NewsArticleUncheckedCreateWithoutAuthorInput>
  }

  export type NewsArticleUpdateWithWhereUniqueWithoutAuthorInput = {
    where: NewsArticleWhereUniqueInput
    data: XOR<NewsArticleUpdateWithoutAuthorInput, NewsArticleUncheckedUpdateWithoutAuthorInput>
  }

  export type NewsArticleUpdateManyWithWhereWithoutAuthorInput = {
    where: NewsArticleScalarWhereInput
    data: XOR<NewsArticleUpdateManyMutationInput, NewsArticleUncheckedUpdateManyWithoutAuthorInput>
  }

  export type NewsArticleScalarWhereInput = {
    AND?: NewsArticleScalarWhereInput | NewsArticleScalarWhereInput[]
    OR?: NewsArticleScalarWhereInput[]
    NOT?: NewsArticleScalarWhereInput | NewsArticleScalarWhereInput[]
    id?: StringFilter<"NewsArticle"> | string
    title?: StringFilter<"NewsArticle"> | string
    content?: StringFilter<"NewsArticle"> | string
    summary?: StringFilter<"NewsArticle"> | string
    imageUrl?: StringNullableFilter<"NewsArticle"> | string | null
    videoUrl?: StringNullableFilter<"NewsArticle"> | string | null
    authorId?: StringFilter<"NewsArticle"> | string
    authorName?: StringFilter<"NewsArticle"> | string
    authorType?: EnumNewsTypeFilter<"NewsArticle"> | $Enums.NewsType
    authorLogo?: StringNullableFilter<"NewsArticle"> | string | null
    status?: EnumNewsStatusFilter<"NewsArticle"> | $Enums.NewsStatus
    priority?: EnumNewsPriorityFilter<"NewsArticle"> | $Enums.NewsPriority
    featured?: BoolFilter<"NewsArticle"> | boolean
    tags?: StringNullableListFilter<"NewsArticle">
    category?: StringFilter<"NewsArticle"> | string
    publishedAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"NewsArticle"> | Date | string | null
    viewCount?: IntFilter<"NewsArticle"> | number
    likeCount?: IntFilter<"NewsArticle"> | number
    commentCount?: IntFilter<"NewsArticle"> | number
    targetAudience?: StringNullableListFilter<"NewsArticle">
    region?: StringNullableFilter<"NewsArticle"> | string | null
    relatedLinks?: JsonNullableFilter<"NewsArticle">
    createdAt?: DateTimeFilter<"NewsArticle"> | Date | string
    updatedAt?: DateTimeFilter<"NewsArticle"> | Date | string
  }

  export type NewsCommentUpsertWithWhereUniqueWithoutUserInput = {
    where: NewsCommentWhereUniqueInput
    update: XOR<NewsCommentUpdateWithoutUserInput, NewsCommentUncheckedUpdateWithoutUserInput>
    create: XOR<NewsCommentCreateWithoutUserInput, NewsCommentUncheckedCreateWithoutUserInput>
  }

  export type NewsCommentUpdateWithWhereUniqueWithoutUserInput = {
    where: NewsCommentWhereUniqueInput
    data: XOR<NewsCommentUpdateWithoutUserInput, NewsCommentUncheckedUpdateWithoutUserInput>
  }

  export type NewsCommentUpdateManyWithWhereWithoutUserInput = {
    where: NewsCommentScalarWhereInput
    data: XOR<NewsCommentUpdateManyMutationInput, NewsCommentUncheckedUpdateManyWithoutUserInput>
  }

  export type NewsCommentScalarWhereInput = {
    AND?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
    OR?: NewsCommentScalarWhereInput[]
    NOT?: NewsCommentScalarWhereInput | NewsCommentScalarWhereInput[]
    id?: StringFilter<"NewsComment"> | string
    newsId?: StringFilter<"NewsComment"> | string
    userId?: StringFilter<"NewsComment"> | string
    userName?: StringFilter<"NewsComment"> | string
    userAvatar?: StringNullableFilter<"NewsComment"> | string | null
    content?: StringFilter<"NewsComment"> | string
    parentId?: StringNullableFilter<"NewsComment"> | string | null
    likes?: IntFilter<"NewsComment"> | number
    createdAt?: DateTimeFilter<"NewsComment"> | Date | string
    updatedAt?: DateTimeFilter<"NewsComment"> | Date | string
  }

  export type CompanyUpsertWithoutProfilesInput = {
    update: XOR<CompanyUpdateWithoutProfilesInput, CompanyUncheckedUpdateWithoutProfilesInput>
    create: XOR<CompanyCreateWithoutProfilesInput, CompanyUncheckedCreateWithoutProfilesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutProfilesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutProfilesInput, CompanyUncheckedUpdateWithoutProfilesInput>
  }

  export type CompanyUpdateWithoutProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedCompaniesNestedInput
    municipality?: MunicipalityUpdateOneRequiredWithoutCompaniesNestedInput
    jobOffers?: JobOfferUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobOffers?: JobOfferUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type QuizAttemptUpsertWithWhereUniqueWithoutStudentInput = {
    where: QuizAttemptWhereUniqueInput
    update: XOR<QuizAttemptUpdateWithoutStudentInput, QuizAttemptUncheckedUpdateWithoutStudentInput>
    create: XOR<QuizAttemptCreateWithoutStudentInput, QuizAttemptUncheckedCreateWithoutStudentInput>
  }

  export type QuizAttemptUpdateWithWhereUniqueWithoutStudentInput = {
    where: QuizAttemptWhereUniqueInput
    data: XOR<QuizAttemptUpdateWithoutStudentInput, QuizAttemptUncheckedUpdateWithoutStudentInput>
  }

  export type QuizAttemptUpdateManyWithWhereWithoutStudentInput = {
    where: QuizAttemptScalarWhereInput
    data: XOR<QuizAttemptUpdateManyMutationInput, QuizAttemptUncheckedUpdateManyWithoutStudentInput>
  }

  export type QuizAttemptScalarWhereInput = {
    AND?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
    OR?: QuizAttemptScalarWhereInput[]
    NOT?: QuizAttemptScalarWhereInput | QuizAttemptScalarWhereInput[]
    id?: StringFilter<"QuizAttempt"> | string
    enrollmentId?: StringNullableFilter<"QuizAttempt"> | string | null
    quizId?: StringFilter<"QuizAttempt"> | string
    studentId?: StringFilter<"QuizAttempt"> | string
    startedAt?: DateTimeFilter<"QuizAttempt"> | Date | string
    completedAt?: DateTimeNullableFilter<"QuizAttempt"> | Date | string | null
    score?: IntNullableFilter<"QuizAttempt"> | number | null
    passed?: BoolNullableFilter<"QuizAttempt"> | boolean | null
    timeSpent?: IntFilter<"QuizAttempt"> | number
  }

  export type StudentNoteUpsertWithWhereUniqueWithoutUserInput = {
    where: StudentNoteWhereUniqueInput
    update: XOR<StudentNoteUpdateWithoutUserInput, StudentNoteUncheckedUpdateWithoutUserInput>
    create: XOR<StudentNoteCreateWithoutUserInput, StudentNoteUncheckedCreateWithoutUserInput>
  }

  export type StudentNoteUpdateWithWhereUniqueWithoutUserInput = {
    where: StudentNoteWhereUniqueInput
    data: XOR<StudentNoteUpdateWithoutUserInput, StudentNoteUncheckedUpdateWithoutUserInput>
  }

  export type StudentNoteUpdateManyWithWhereWithoutUserInput = {
    where: StudentNoteScalarWhereInput
    data: XOR<StudentNoteUpdateManyMutationInput, StudentNoteUncheckedUpdateManyWithoutUserInput>
  }

  export type StudentNoteScalarWhereInput = {
    AND?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
    OR?: StudentNoteScalarWhereInput[]
    NOT?: StudentNoteScalarWhereInput | StudentNoteScalarWhereInput[]
    id?: StringFilter<"StudentNote"> | string
    userId?: StringFilter<"StudentNote"> | string
    lessonId?: StringFilter<"StudentNote"> | string
    content?: StringFilter<"StudentNote"> | string
    timestamp?: IntNullableFilter<"StudentNote"> | number | null
    createdAt?: DateTimeFilter<"StudentNote"> | Date | string
    updatedAt?: DateTimeFilter<"StudentNote"> | Date | string
  }

  export type ModuleCertificateUpsertWithWhereUniqueWithoutStudentInput = {
    where: ModuleCertificateWhereUniqueInput
    update: XOR<ModuleCertificateUpdateWithoutStudentInput, ModuleCertificateUncheckedUpdateWithoutStudentInput>
    create: XOR<ModuleCertificateCreateWithoutStudentInput, ModuleCertificateUncheckedCreateWithoutStudentInput>
  }

  export type ModuleCertificateUpdateWithWhereUniqueWithoutStudentInput = {
    where: ModuleCertificateWhereUniqueInput
    data: XOR<ModuleCertificateUpdateWithoutStudentInput, ModuleCertificateUncheckedUpdateWithoutStudentInput>
  }

  export type ModuleCertificateUpdateManyWithWhereWithoutStudentInput = {
    where: ModuleCertificateScalarWhereInput
    data: XOR<ModuleCertificateUpdateManyMutationInput, ModuleCertificateUncheckedUpdateManyWithoutStudentInput>
  }

  export type ModuleCertificateScalarWhereInput = {
    AND?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
    OR?: ModuleCertificateScalarWhereInput[]
    NOT?: ModuleCertificateScalarWhereInput | ModuleCertificateScalarWhereInput[]
    id?: StringFilter<"ModuleCertificate"> | string
    moduleId?: StringFilter<"ModuleCertificate"> | string
    studentId?: StringFilter<"ModuleCertificate"> | string
    certificateUrl?: StringFilter<"ModuleCertificate"> | string
    issuedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
    grade?: IntNullableFilter<"ModuleCertificate"> | number | null
    completedAt?: DateTimeFilter<"ModuleCertificate"> | Date | string
  }

  export type JobApplicationCreateWithoutJobOfferInput = {
    id?: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    applicant: ProfileCreateNestedOneWithoutJobApplicationsInput
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUncheckedCreateWithoutJobOfferInput = {
    id?: string
    applicantId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutApplicationInput
    messages?: JobApplicationMessageUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationCreateOrConnectWithoutJobOfferInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput>
  }

  export type JobApplicationCreateManyJobOfferInputEnvelope = {
    data: JobApplicationCreateManyJobOfferInput | JobApplicationCreateManyJobOfferInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutJobOffersInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedCompaniesInput
    municipality: MunicipalityCreateNestedOneWithoutCompaniesInput
    profiles?: ProfileCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutJobOffersInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    profiles?: ProfileUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutJobOffersInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutJobOffersInput, CompanyUncheckedCreateWithoutJobOffersInput>
  }

  export type JobQuestionCreateWithoutJobOfferInput = {
    id?: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutQuestionInput
  }

  export type JobQuestionUncheckedCreateWithoutJobOfferInput = {
    id?: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutQuestionInput
  }

  export type JobQuestionCreateOrConnectWithoutJobOfferInput = {
    where: JobQuestionWhereUniqueInput
    create: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput>
  }

  export type JobQuestionCreateManyJobOfferInputEnvelope = {
    data: JobQuestionCreateManyJobOfferInput | JobQuestionCreateManyJobOfferInput[]
    skipDuplicates?: boolean
  }

  export type JobApplicationUpsertWithWhereUniqueWithoutJobOfferInput = {
    where: JobApplicationWhereUniqueInput
    update: XOR<JobApplicationUpdateWithoutJobOfferInput, JobApplicationUncheckedUpdateWithoutJobOfferInput>
    create: XOR<JobApplicationCreateWithoutJobOfferInput, JobApplicationUncheckedCreateWithoutJobOfferInput>
  }

  export type JobApplicationUpdateWithWhereUniqueWithoutJobOfferInput = {
    where: JobApplicationWhereUniqueInput
    data: XOR<JobApplicationUpdateWithoutJobOfferInput, JobApplicationUncheckedUpdateWithoutJobOfferInput>
  }

  export type JobApplicationUpdateManyWithWhereWithoutJobOfferInput = {
    where: JobApplicationScalarWhereInput
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyWithoutJobOfferInput>
  }

  export type CompanyUpsertWithoutJobOffersInput = {
    update: XOR<CompanyUpdateWithoutJobOffersInput, CompanyUncheckedUpdateWithoutJobOffersInput>
    create: XOR<CompanyCreateWithoutJobOffersInput, CompanyUncheckedCreateWithoutJobOffersInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutJobOffersInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutJobOffersInput, CompanyUncheckedUpdateWithoutJobOffersInput>
  }

  export type CompanyUpdateWithoutJobOffersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedCompaniesNestedInput
    municipality?: MunicipalityUpdateOneRequiredWithoutCompaniesNestedInput
    profiles?: ProfileUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutJobOffersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profiles?: ProfileUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type JobQuestionUpsertWithWhereUniqueWithoutJobOfferInput = {
    where: JobQuestionWhereUniqueInput
    update: XOR<JobQuestionUpdateWithoutJobOfferInput, JobQuestionUncheckedUpdateWithoutJobOfferInput>
    create: XOR<JobQuestionCreateWithoutJobOfferInput, JobQuestionUncheckedCreateWithoutJobOfferInput>
  }

  export type JobQuestionUpdateWithWhereUniqueWithoutJobOfferInput = {
    where: JobQuestionWhereUniqueInput
    data: XOR<JobQuestionUpdateWithoutJobOfferInput, JobQuestionUncheckedUpdateWithoutJobOfferInput>
  }

  export type JobQuestionUpdateManyWithWhereWithoutJobOfferInput = {
    where: JobQuestionScalarWhereInput
    data: XOR<JobQuestionUpdateManyMutationInput, JobQuestionUncheckedUpdateManyWithoutJobOfferInput>
  }

  export type JobQuestionScalarWhereInput = {
    AND?: JobQuestionScalarWhereInput | JobQuestionScalarWhereInput[]
    OR?: JobQuestionScalarWhereInput[]
    NOT?: JobQuestionScalarWhereInput | JobQuestionScalarWhereInput[]
    id?: StringFilter<"JobQuestion"> | string
    jobOfferId?: StringFilter<"JobQuestion"> | string
    question?: StringFilter<"JobQuestion"> | string
    type?: StringFilter<"JobQuestion"> | string
    required?: BoolFilter<"JobQuestion"> | boolean
    options?: StringNullableListFilter<"JobQuestion">
    orderIndex?: IntFilter<"JobQuestion"> | number
  }

  export type JobQuestionAnswerCreateWithoutQuestionInput = {
    id?: string
    answer: string
    application: JobApplicationCreateNestedOneWithoutQuestionAnswersInput
  }

  export type JobQuestionAnswerUncheckedCreateWithoutQuestionInput = {
    id?: string
    applicationId: string
    answer: string
  }

  export type JobQuestionAnswerCreateOrConnectWithoutQuestionInput = {
    where: JobQuestionAnswerWhereUniqueInput
    create: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput>
  }

  export type JobQuestionAnswerCreateManyQuestionInputEnvelope = {
    data: JobQuestionAnswerCreateManyQuestionInput | JobQuestionAnswerCreateManyQuestionInput[]
    skipDuplicates?: boolean
  }

  export type JobOfferCreateWithoutJobQuestionsInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationCreateNestedManyWithoutJobOfferInput
    company: CompanyCreateNestedOneWithoutJobOffersInput
  }

  export type JobOfferUncheckedCreateWithoutJobQuestionsInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationUncheckedCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferCreateOrConnectWithoutJobQuestionsInput = {
    where: JobOfferWhereUniqueInput
    create: XOR<JobOfferCreateWithoutJobQuestionsInput, JobOfferUncheckedCreateWithoutJobQuestionsInput>
  }

  export type JobQuestionAnswerUpsertWithWhereUniqueWithoutQuestionInput = {
    where: JobQuestionAnswerWhereUniqueInput
    update: XOR<JobQuestionAnswerUpdateWithoutQuestionInput, JobQuestionAnswerUncheckedUpdateWithoutQuestionInput>
    create: XOR<JobQuestionAnswerCreateWithoutQuestionInput, JobQuestionAnswerUncheckedCreateWithoutQuestionInput>
  }

  export type JobQuestionAnswerUpdateWithWhereUniqueWithoutQuestionInput = {
    where: JobQuestionAnswerWhereUniqueInput
    data: XOR<JobQuestionAnswerUpdateWithoutQuestionInput, JobQuestionAnswerUncheckedUpdateWithoutQuestionInput>
  }

  export type JobQuestionAnswerUpdateManyWithWhereWithoutQuestionInput = {
    where: JobQuestionAnswerScalarWhereInput
    data: XOR<JobQuestionAnswerUpdateManyMutationInput, JobQuestionAnswerUncheckedUpdateManyWithoutQuestionInput>
  }

  export type JobQuestionAnswerScalarWhereInput = {
    AND?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
    OR?: JobQuestionAnswerScalarWhereInput[]
    NOT?: JobQuestionAnswerScalarWhereInput | JobQuestionAnswerScalarWhereInput[]
    id?: StringFilter<"JobQuestionAnswer"> | string
    applicationId?: StringFilter<"JobQuestionAnswer"> | string
    questionId?: StringFilter<"JobQuestionAnswer"> | string
    answer?: StringFilter<"JobQuestionAnswer"> | string
  }

  export type JobOfferUpsertWithoutJobQuestionsInput = {
    update: XOR<JobOfferUpdateWithoutJobQuestionsInput, JobOfferUncheckedUpdateWithoutJobQuestionsInput>
    create: XOR<JobOfferCreateWithoutJobQuestionsInput, JobOfferUncheckedCreateWithoutJobQuestionsInput>
    where?: JobOfferWhereInput
  }

  export type JobOfferUpdateToOneWithWhereWithoutJobQuestionsInput = {
    where?: JobOfferWhereInput
    data: XOR<JobOfferUpdateWithoutJobQuestionsInput, JobOfferUncheckedUpdateWithoutJobQuestionsInput>
  }

  export type JobOfferUpdateWithoutJobQuestionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUpdateManyWithoutJobOfferNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobOffersNestedInput
  }

  export type JobOfferUncheckedUpdateWithoutJobQuestionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUncheckedUpdateManyWithoutJobOfferNestedInput
  }

  export type ProfileCreateWithoutJobApplicationsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutJobApplicationsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutJobApplicationsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
  }

  export type JobOfferCreateWithoutApplicationsInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutJobOffersInput
    jobQuestions?: JobQuestionCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferUncheckedCreateWithoutApplicationsInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    jobQuestions?: JobQuestionUncheckedCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferCreateOrConnectWithoutApplicationsInput = {
    where: JobOfferWhereUniqueInput
    create: XOR<JobOfferCreateWithoutApplicationsInput, JobOfferUncheckedCreateWithoutApplicationsInput>
  }

  export type JobQuestionAnswerCreateWithoutApplicationInput = {
    id?: string
    answer: string
    question: JobQuestionCreateNestedOneWithoutQuestionAnswersInput
  }

  export type JobQuestionAnswerUncheckedCreateWithoutApplicationInput = {
    id?: string
    questionId: string
    answer: string
  }

  export type JobQuestionAnswerCreateOrConnectWithoutApplicationInput = {
    where: JobQuestionAnswerWhereUniqueInput
    create: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput>
  }

  export type JobQuestionAnswerCreateManyApplicationInputEnvelope = {
    data: JobQuestionAnswerCreateManyApplicationInput | JobQuestionAnswerCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type JobApplicationMessageCreateWithoutApplicationInput = {
    id?: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type JobApplicationMessageUncheckedCreateWithoutApplicationInput = {
    id?: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type JobApplicationMessageCreateOrConnectWithoutApplicationInput = {
    where: JobApplicationMessageWhereUniqueInput
    create: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput>
  }

  export type JobApplicationMessageCreateManyApplicationInputEnvelope = {
    data: JobApplicationMessageCreateManyApplicationInput | JobApplicationMessageCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithoutJobApplicationsInput = {
    update: XOR<ProfileUpdateWithoutJobApplicationsInput, ProfileUncheckedUpdateWithoutJobApplicationsInput>
    create: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutJobApplicationsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutJobApplicationsInput, ProfileUncheckedUpdateWithoutJobApplicationsInput>
  }

  export type ProfileUpdateWithoutJobApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutJobApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type JobOfferUpsertWithoutApplicationsInput = {
    update: XOR<JobOfferUpdateWithoutApplicationsInput, JobOfferUncheckedUpdateWithoutApplicationsInput>
    create: XOR<JobOfferCreateWithoutApplicationsInput, JobOfferUncheckedCreateWithoutApplicationsInput>
    where?: JobOfferWhereInput
  }

  export type JobOfferUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: JobOfferWhereInput
    data: XOR<JobOfferUpdateWithoutApplicationsInput, JobOfferUncheckedUpdateWithoutApplicationsInput>
  }

  export type JobOfferUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutJobOffersNestedInput
    jobQuestions?: JobQuestionUpdateManyWithoutJobOfferNestedInput
  }

  export type JobOfferUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobQuestions?: JobQuestionUncheckedUpdateManyWithoutJobOfferNestedInput
  }

  export type JobQuestionAnswerUpsertWithWhereUniqueWithoutApplicationInput = {
    where: JobQuestionAnswerWhereUniqueInput
    update: XOR<JobQuestionAnswerUpdateWithoutApplicationInput, JobQuestionAnswerUncheckedUpdateWithoutApplicationInput>
    create: XOR<JobQuestionAnswerCreateWithoutApplicationInput, JobQuestionAnswerUncheckedCreateWithoutApplicationInput>
  }

  export type JobQuestionAnswerUpdateWithWhereUniqueWithoutApplicationInput = {
    where: JobQuestionAnswerWhereUniqueInput
    data: XOR<JobQuestionAnswerUpdateWithoutApplicationInput, JobQuestionAnswerUncheckedUpdateWithoutApplicationInput>
  }

  export type JobQuestionAnswerUpdateManyWithWhereWithoutApplicationInput = {
    where: JobQuestionAnswerScalarWhereInput
    data: XOR<JobQuestionAnswerUpdateManyMutationInput, JobQuestionAnswerUncheckedUpdateManyWithoutApplicationInput>
  }

  export type JobApplicationMessageUpsertWithWhereUniqueWithoutApplicationInput = {
    where: JobApplicationMessageWhereUniqueInput
    update: XOR<JobApplicationMessageUpdateWithoutApplicationInput, JobApplicationMessageUncheckedUpdateWithoutApplicationInput>
    create: XOR<JobApplicationMessageCreateWithoutApplicationInput, JobApplicationMessageUncheckedCreateWithoutApplicationInput>
  }

  export type JobApplicationMessageUpdateWithWhereUniqueWithoutApplicationInput = {
    where: JobApplicationMessageWhereUniqueInput
    data: XOR<JobApplicationMessageUpdateWithoutApplicationInput, JobApplicationMessageUncheckedUpdateWithoutApplicationInput>
  }

  export type JobApplicationMessageUpdateManyWithWhereWithoutApplicationInput = {
    where: JobApplicationMessageScalarWhereInput
    data: XOR<JobApplicationMessageUpdateManyMutationInput, JobApplicationMessageUncheckedUpdateManyWithoutApplicationInput>
  }

  export type JobApplicationMessageScalarWhereInput = {
    AND?: JobApplicationMessageScalarWhereInput | JobApplicationMessageScalarWhereInput[]
    OR?: JobApplicationMessageScalarWhereInput[]
    NOT?: JobApplicationMessageScalarWhereInput | JobApplicationMessageScalarWhereInput[]
    id?: StringFilter<"JobApplicationMessage"> | string
    applicationId?: StringFilter<"JobApplicationMessage"> | string
    senderId?: StringFilter<"JobApplicationMessage"> | string
    senderType?: EnumSenderTypeFilter<"JobApplicationMessage"> | $Enums.SenderType
    content?: StringFilter<"JobApplicationMessage"> | string
    messageType?: EnumMessageTypeFilter<"JobApplicationMessage"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"JobApplicationMessage"> | $Enums.MessageStatus
    createdAt?: DateTimeFilter<"JobApplicationMessage"> | Date | string
    readAt?: DateTimeNullableFilter<"JobApplicationMessage"> | Date | string | null
  }

  export type JobApplicationCreateWithoutQuestionAnswersInput = {
    id?: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    applicant: ProfileCreateNestedOneWithoutJobApplicationsInput
    jobOffer: JobOfferCreateNestedOneWithoutApplicationsInput
    messages?: JobApplicationMessageCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUncheckedCreateWithoutQuestionAnswersInput = {
    id?: string
    applicantId: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    messages?: JobApplicationMessageUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationCreateOrConnectWithoutQuestionAnswersInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutQuestionAnswersInput, JobApplicationUncheckedCreateWithoutQuestionAnswersInput>
  }

  export type JobQuestionCreateWithoutQuestionAnswersInput = {
    id?: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
    jobOffer: JobOfferCreateNestedOneWithoutJobQuestionsInput
  }

  export type JobQuestionUncheckedCreateWithoutQuestionAnswersInput = {
    id?: string
    jobOfferId: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
  }

  export type JobQuestionCreateOrConnectWithoutQuestionAnswersInput = {
    where: JobQuestionWhereUniqueInput
    create: XOR<JobQuestionCreateWithoutQuestionAnswersInput, JobQuestionUncheckedCreateWithoutQuestionAnswersInput>
  }

  export type JobApplicationUpsertWithoutQuestionAnswersInput = {
    update: XOR<JobApplicationUpdateWithoutQuestionAnswersInput, JobApplicationUncheckedUpdateWithoutQuestionAnswersInput>
    create: XOR<JobApplicationCreateWithoutQuestionAnswersInput, JobApplicationUncheckedCreateWithoutQuestionAnswersInput>
    where?: JobApplicationWhereInput
  }

  export type JobApplicationUpdateToOneWithWhereWithoutQuestionAnswersInput = {
    where?: JobApplicationWhereInput
    data: XOR<JobApplicationUpdateWithoutQuestionAnswersInput, JobApplicationUncheckedUpdateWithoutQuestionAnswersInput>
  }

  export type JobApplicationUpdateWithoutQuestionAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    applicant?: ProfileUpdateOneRequiredWithoutJobApplicationsNestedInput
    jobOffer?: JobOfferUpdateOneRequiredWithoutApplicationsNestedInput
    messages?: JobApplicationMessageUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutQuestionAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    messages?: JobApplicationMessageUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type JobQuestionUpsertWithoutQuestionAnswersInput = {
    update: XOR<JobQuestionUpdateWithoutQuestionAnswersInput, JobQuestionUncheckedUpdateWithoutQuestionAnswersInput>
    create: XOR<JobQuestionCreateWithoutQuestionAnswersInput, JobQuestionUncheckedCreateWithoutQuestionAnswersInput>
    where?: JobQuestionWhereInput
  }

  export type JobQuestionUpdateToOneWithWhereWithoutQuestionAnswersInput = {
    where?: JobQuestionWhereInput
    data: XOR<JobQuestionUpdateWithoutQuestionAnswersInput, JobQuestionUncheckedUpdateWithoutQuestionAnswersInput>
  }

  export type JobQuestionUpdateWithoutQuestionAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
    jobOffer?: JobOfferUpdateOneRequiredWithoutJobQuestionsNestedInput
  }

  export type JobQuestionUncheckedUpdateWithoutQuestionAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type JobApplicationCreateWithoutMessagesInput = {
    id?: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    applicant: ProfileCreateNestedOneWithoutJobApplicationsInput
    jobOffer: JobOfferCreateNestedOneWithoutApplicationsInput
    questionAnswers?: JobQuestionAnswerCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationUncheckedCreateWithoutMessagesInput = {
    id?: string
    applicantId: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
    questionAnswers?: JobQuestionAnswerUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type JobApplicationCreateOrConnectWithoutMessagesInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutMessagesInput, JobApplicationUncheckedCreateWithoutMessagesInput>
  }

  export type JobApplicationUpsertWithoutMessagesInput = {
    update: XOR<JobApplicationUpdateWithoutMessagesInput, JobApplicationUncheckedUpdateWithoutMessagesInput>
    create: XOR<JobApplicationCreateWithoutMessagesInput, JobApplicationUncheckedCreateWithoutMessagesInput>
    where?: JobApplicationWhereInput
  }

  export type JobApplicationUpdateToOneWithWhereWithoutMessagesInput = {
    where?: JobApplicationWhereInput
    data: XOR<JobApplicationUpdateWithoutMessagesInput, JobApplicationUncheckedUpdateWithoutMessagesInput>
  }

  export type JobApplicationUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    applicant?: ProfileUpdateOneRequiredWithoutJobApplicationsNestedInput
    jobOffer?: JobOfferUpdateOneRequiredWithoutApplicationsNestedInput
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type CertificateCreateWithoutCourseInput = {
    id?: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
    user: ProfileCreateNestedOneWithoutCertificatesInput
  }

  export type CertificateUncheckedCreateWithoutCourseInput = {
    id?: string
    userId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CertificateCreateOrConnectWithoutCourseInput = {
    where: CertificateWhereUniqueInput
    create: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput>
  }

  export type CertificateCreateManyCourseInputEnvelope = {
    data: CertificateCreateManyCourseInput | CertificateCreateManyCourseInput[]
    skipDuplicates?: boolean
  }

  export type CourseEnrollmentCreateWithoutCourseInput = {
    id?: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    student: ProfileCreateNestedOneWithoutCourseEnrollmentsInput
    lessonProgress?: LessonProgressCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUncheckedCreateWithoutCourseInput = {
    id?: string
    studentId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedCreateNestedManyWithoutEnrollmentInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentCreateOrConnectWithoutCourseInput = {
    where: CourseEnrollmentWhereUniqueInput
    create: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput>
  }

  export type CourseEnrollmentCreateManyCourseInputEnvelope = {
    data: CourseEnrollmentCreateManyCourseInput | CourseEnrollmentCreateManyCourseInput[]
    skipDuplicates?: boolean
  }

  export type CourseModuleCreateWithoutCourseInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    lessons?: LessonCreateNestedManyWithoutModuleInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleUncheckedCreateWithoutCourseInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    lessons?: LessonUncheckedCreateNestedManyWithoutModuleInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleCreateOrConnectWithoutCourseInput = {
    where: CourseModuleWhereUniqueInput
    create: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput>
  }

  export type CourseModuleCreateManyCourseInputEnvelope = {
    data: CourseModuleCreateManyCourseInput | CourseModuleCreateManyCourseInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutInstructedCoursesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutInstructedCoursesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutInstructedCoursesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutInstructedCoursesInput, ProfileUncheckedCreateWithoutInstructedCoursesInput>
  }

  export type QuizCreateWithoutCourseInput = {
    id?: string
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionCreateNestedManyWithoutQuizInput
    lesson?: LessonCreateNestedOneWithoutQuizzesInput
  }

  export type QuizUncheckedCreateWithoutCourseInput = {
    id?: string
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptUncheckedCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionUncheckedCreateNestedManyWithoutQuizInput
  }

  export type QuizCreateOrConnectWithoutCourseInput = {
    where: QuizWhereUniqueInput
    create: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput>
  }

  export type QuizCreateManyCourseInputEnvelope = {
    data: QuizCreateManyCourseInput | QuizCreateManyCourseInput[]
    skipDuplicates?: boolean
  }

  export type CertificateUpsertWithWhereUniqueWithoutCourseInput = {
    where: CertificateWhereUniqueInput
    update: XOR<CertificateUpdateWithoutCourseInput, CertificateUncheckedUpdateWithoutCourseInput>
    create: XOR<CertificateCreateWithoutCourseInput, CertificateUncheckedCreateWithoutCourseInput>
  }

  export type CertificateUpdateWithWhereUniqueWithoutCourseInput = {
    where: CertificateWhereUniqueInput
    data: XOR<CertificateUpdateWithoutCourseInput, CertificateUncheckedUpdateWithoutCourseInput>
  }

  export type CertificateUpdateManyWithWhereWithoutCourseInput = {
    where: CertificateScalarWhereInput
    data: XOR<CertificateUpdateManyMutationInput, CertificateUncheckedUpdateManyWithoutCourseInput>
  }

  export type CourseEnrollmentUpsertWithWhereUniqueWithoutCourseInput = {
    where: CourseEnrollmentWhereUniqueInput
    update: XOR<CourseEnrollmentUpdateWithoutCourseInput, CourseEnrollmentUncheckedUpdateWithoutCourseInput>
    create: XOR<CourseEnrollmentCreateWithoutCourseInput, CourseEnrollmentUncheckedCreateWithoutCourseInput>
  }

  export type CourseEnrollmentUpdateWithWhereUniqueWithoutCourseInput = {
    where: CourseEnrollmentWhereUniqueInput
    data: XOR<CourseEnrollmentUpdateWithoutCourseInput, CourseEnrollmentUncheckedUpdateWithoutCourseInput>
  }

  export type CourseEnrollmentUpdateManyWithWhereWithoutCourseInput = {
    where: CourseEnrollmentScalarWhereInput
    data: XOR<CourseEnrollmentUpdateManyMutationInput, CourseEnrollmentUncheckedUpdateManyWithoutCourseInput>
  }

  export type CourseModuleUpsertWithWhereUniqueWithoutCourseInput = {
    where: CourseModuleWhereUniqueInput
    update: XOR<CourseModuleUpdateWithoutCourseInput, CourseModuleUncheckedUpdateWithoutCourseInput>
    create: XOR<CourseModuleCreateWithoutCourseInput, CourseModuleUncheckedCreateWithoutCourseInput>
  }

  export type CourseModuleUpdateWithWhereUniqueWithoutCourseInput = {
    where: CourseModuleWhereUniqueInput
    data: XOR<CourseModuleUpdateWithoutCourseInput, CourseModuleUncheckedUpdateWithoutCourseInput>
  }

  export type CourseModuleUpdateManyWithWhereWithoutCourseInput = {
    where: CourseModuleScalarWhereInput
    data: XOR<CourseModuleUpdateManyMutationInput, CourseModuleUncheckedUpdateManyWithoutCourseInput>
  }

  export type CourseModuleScalarWhereInput = {
    AND?: CourseModuleScalarWhereInput | CourseModuleScalarWhereInput[]
    OR?: CourseModuleScalarWhereInput[]
    NOT?: CourseModuleScalarWhereInput | CourseModuleScalarWhereInput[]
    id?: StringFilter<"CourseModule"> | string
    courseId?: StringFilter<"CourseModule"> | string
    title?: StringFilter<"CourseModule"> | string
    description?: StringNullableFilter<"CourseModule"> | string | null
    orderIndex?: IntFilter<"CourseModule"> | number
    estimatedDuration?: IntFilter<"CourseModule"> | number
    isLocked?: BoolFilter<"CourseModule"> | boolean
    prerequisites?: StringNullableListFilter<"CourseModule">
    hasCertificate?: BoolFilter<"CourseModule"> | boolean
    certificateTemplate?: StringNullableFilter<"CourseModule"> | string | null
  }

  export type ProfileUpsertWithoutInstructedCoursesInput = {
    update: XOR<ProfileUpdateWithoutInstructedCoursesInput, ProfileUncheckedUpdateWithoutInstructedCoursesInput>
    create: XOR<ProfileCreateWithoutInstructedCoursesInput, ProfileUncheckedCreateWithoutInstructedCoursesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutInstructedCoursesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutInstructedCoursesInput, ProfileUncheckedUpdateWithoutInstructedCoursesInput>
  }

  export type ProfileUpdateWithoutInstructedCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutInstructedCoursesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type QuizUpsertWithWhereUniqueWithoutCourseInput = {
    where: QuizWhereUniqueInput
    update: XOR<QuizUpdateWithoutCourseInput, QuizUncheckedUpdateWithoutCourseInput>
    create: XOR<QuizCreateWithoutCourseInput, QuizUncheckedCreateWithoutCourseInput>
  }

  export type QuizUpdateWithWhereUniqueWithoutCourseInput = {
    where: QuizWhereUniqueInput
    data: XOR<QuizUpdateWithoutCourseInput, QuizUncheckedUpdateWithoutCourseInput>
  }

  export type QuizUpdateManyWithWhereWithoutCourseInput = {
    where: QuizScalarWhereInput
    data: XOR<QuizUpdateManyMutationInput, QuizUncheckedUpdateManyWithoutCourseInput>
  }

  export type QuizScalarWhereInput = {
    AND?: QuizScalarWhereInput | QuizScalarWhereInput[]
    OR?: QuizScalarWhereInput[]
    NOT?: QuizScalarWhereInput | QuizScalarWhereInput[]
    id?: StringFilter<"Quiz"> | string
    courseId?: StringNullableFilter<"Quiz"> | string | null
    lessonId?: StringNullableFilter<"Quiz"> | string | null
    title?: StringFilter<"Quiz"> | string
    description?: StringNullableFilter<"Quiz"> | string | null
    timeLimit?: IntNullableFilter<"Quiz"> | number | null
    passingScore?: IntFilter<"Quiz"> | number
    showCorrectAnswers?: BoolFilter<"Quiz"> | boolean
    isActive?: BoolFilter<"Quiz"> | boolean
  }

  export type CourseCreateWithoutModulesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentCreateNestedManyWithoutCourseInput
    instructor?: ProfileCreateNestedOneWithoutInstructedCoursesInput
    quizzes?: QuizCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateWithoutModulesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateUncheckedCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutModulesInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutModulesInput, CourseUncheckedCreateWithoutModulesInput>
  }

  export type LessonCreateWithoutModuleInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutModuleInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutModuleInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput>
  }

  export type LessonCreateManyModuleInputEnvelope = {
    data: LessonCreateManyModuleInput | LessonCreateManyModuleInput[]
    skipDuplicates?: boolean
  }

  export type ModuleCertificateCreateWithoutModuleInput = {
    id?: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
    student: ProfileCreateNestedOneWithoutModuleCertificatesInput
  }

  export type ModuleCertificateUncheckedCreateWithoutModuleInput = {
    id?: string
    studentId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type ModuleCertificateCreateOrConnectWithoutModuleInput = {
    where: ModuleCertificateWhereUniqueInput
    create: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput>
  }

  export type ModuleCertificateCreateManyModuleInputEnvelope = {
    data: ModuleCertificateCreateManyModuleInput | ModuleCertificateCreateManyModuleInput[]
    skipDuplicates?: boolean
  }

  export type CourseUpsertWithoutModulesInput = {
    update: XOR<CourseUpdateWithoutModulesInput, CourseUncheckedUpdateWithoutModulesInput>
    create: XOR<CourseCreateWithoutModulesInput, CourseUncheckedCreateWithoutModulesInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutModulesInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutModulesInput, CourseUncheckedUpdateWithoutModulesInput>
  }

  export type CourseUpdateWithoutModulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUpdateManyWithoutCourseNestedInput
    instructor?: ProfileUpdateOneWithoutInstructedCoursesNestedInput
    quizzes?: QuizUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateWithoutModulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUncheckedUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type LessonUpsertWithWhereUniqueWithoutModuleInput = {
    where: LessonWhereUniqueInput
    update: XOR<LessonUpdateWithoutModuleInput, LessonUncheckedUpdateWithoutModuleInput>
    create: XOR<LessonCreateWithoutModuleInput, LessonUncheckedCreateWithoutModuleInput>
  }

  export type LessonUpdateWithWhereUniqueWithoutModuleInput = {
    where: LessonWhereUniqueInput
    data: XOR<LessonUpdateWithoutModuleInput, LessonUncheckedUpdateWithoutModuleInput>
  }

  export type LessonUpdateManyWithWhereWithoutModuleInput = {
    where: LessonScalarWhereInput
    data: XOR<LessonUpdateManyMutationInput, LessonUncheckedUpdateManyWithoutModuleInput>
  }

  export type LessonScalarWhereInput = {
    AND?: LessonScalarWhereInput | LessonScalarWhereInput[]
    OR?: LessonScalarWhereInput[]
    NOT?: LessonScalarWhereInput | LessonScalarWhereInput[]
    id?: StringFilter<"Lesson"> | string
    moduleId?: StringFilter<"Lesson"> | string
    title?: StringFilter<"Lesson"> | string
    description?: StringNullableFilter<"Lesson"> | string | null
    content?: StringFilter<"Lesson"> | string
    contentType?: EnumLessonTypeFilter<"Lesson"> | $Enums.LessonType
    videoUrl?: StringNullableFilter<"Lesson"> | string | null
    duration?: IntNullableFilter<"Lesson"> | number | null
    orderIndex?: IntFilter<"Lesson"> | number
    isRequired?: BoolFilter<"Lesson"> | boolean
    isPreview?: BoolFilter<"Lesson"> | boolean
    attachments?: JsonNullableFilter<"Lesson">
  }

  export type ModuleCertificateUpsertWithWhereUniqueWithoutModuleInput = {
    where: ModuleCertificateWhereUniqueInput
    update: XOR<ModuleCertificateUpdateWithoutModuleInput, ModuleCertificateUncheckedUpdateWithoutModuleInput>
    create: XOR<ModuleCertificateCreateWithoutModuleInput, ModuleCertificateUncheckedCreateWithoutModuleInput>
  }

  export type ModuleCertificateUpdateWithWhereUniqueWithoutModuleInput = {
    where: ModuleCertificateWhereUniqueInput
    data: XOR<ModuleCertificateUpdateWithoutModuleInput, ModuleCertificateUncheckedUpdateWithoutModuleInput>
  }

  export type ModuleCertificateUpdateManyWithWhereWithoutModuleInput = {
    where: ModuleCertificateScalarWhereInput
    data: XOR<ModuleCertificateUpdateManyMutationInput, ModuleCertificateUncheckedUpdateManyWithoutModuleInput>
  }

  export type LessonResourceCreateWithoutLessonInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
  }

  export type LessonResourceUncheckedCreateWithoutLessonInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
  }

  export type LessonResourceCreateOrConnectWithoutLessonInput = {
    where: LessonResourceWhereUniqueInput
    create: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput>
  }

  export type LessonResourceCreateManyLessonInputEnvelope = {
    data: LessonResourceCreateManyLessonInput | LessonResourceCreateManyLessonInput[]
    skipDuplicates?: boolean
  }

  export type DiscussionCreateWithoutLessonInput = {
    id?: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DiscussionCreateNestedOneWithoutRepliesInput
    replies?: DiscussionCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutDiscussionsInput
  }

  export type DiscussionUncheckedCreateWithoutLessonInput = {
    id?: string
    userId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: DiscussionUncheckedCreateNestedManyWithoutParentInput
  }

  export type DiscussionCreateOrConnectWithoutLessonInput = {
    where: DiscussionWhereUniqueInput
    create: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput>
  }

  export type DiscussionCreateManyLessonInputEnvelope = {
    data: DiscussionCreateManyLessonInput | DiscussionCreateManyLessonInput[]
    skipDuplicates?: boolean
  }

  export type LessonProgressCreateWithoutLessonInput = {
    id?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
    enrollment: CourseEnrollmentCreateNestedOneWithoutLessonProgressInput
  }

  export type LessonProgressUncheckedCreateWithoutLessonInput = {
    id?: string
    enrollmentId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type LessonProgressCreateOrConnectWithoutLessonInput = {
    where: LessonProgressWhereUniqueInput
    create: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput>
  }

  export type LessonProgressCreateManyLessonInputEnvelope = {
    data: LessonProgressCreateManyLessonInput | LessonProgressCreateManyLessonInput[]
    skipDuplicates?: boolean
  }

  export type CourseModuleCreateWithoutLessonsInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    course: CourseCreateNestedOneWithoutModulesInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleUncheckedCreateWithoutLessonsInput = {
    id?: string
    courseId: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleCreateOrConnectWithoutLessonsInput = {
    where: CourseModuleWhereUniqueInput
    create: XOR<CourseModuleCreateWithoutLessonsInput, CourseModuleUncheckedCreateWithoutLessonsInput>
  }

  export type QuizCreateWithoutLessonInput = {
    id?: string
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionCreateNestedManyWithoutQuizInput
    course?: CourseCreateNestedOneWithoutQuizzesInput
  }

  export type QuizUncheckedCreateWithoutLessonInput = {
    id?: string
    courseId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptUncheckedCreateNestedManyWithoutQuizInput
    questions?: QuizQuestionUncheckedCreateNestedManyWithoutQuizInput
  }

  export type QuizCreateOrConnectWithoutLessonInput = {
    where: QuizWhereUniqueInput
    create: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput>
  }

  export type QuizCreateManyLessonInputEnvelope = {
    data: QuizCreateManyLessonInput | QuizCreateManyLessonInput[]
    skipDuplicates?: boolean
  }

  export type StudentNoteCreateWithoutLessonInput = {
    id?: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: ProfileCreateNestedOneWithoutStudentNotesInput
  }

  export type StudentNoteUncheckedCreateWithoutLessonInput = {
    id?: string
    userId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudentNoteCreateOrConnectWithoutLessonInput = {
    where: StudentNoteWhereUniqueInput
    create: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput>
  }

  export type StudentNoteCreateManyLessonInputEnvelope = {
    data: StudentNoteCreateManyLessonInput | StudentNoteCreateManyLessonInput[]
    skipDuplicates?: boolean
  }

  export type LessonResourceUpsertWithWhereUniqueWithoutLessonInput = {
    where: LessonResourceWhereUniqueInput
    update: XOR<LessonResourceUpdateWithoutLessonInput, LessonResourceUncheckedUpdateWithoutLessonInput>
    create: XOR<LessonResourceCreateWithoutLessonInput, LessonResourceUncheckedCreateWithoutLessonInput>
  }

  export type LessonResourceUpdateWithWhereUniqueWithoutLessonInput = {
    where: LessonResourceWhereUniqueInput
    data: XOR<LessonResourceUpdateWithoutLessonInput, LessonResourceUncheckedUpdateWithoutLessonInput>
  }

  export type LessonResourceUpdateManyWithWhereWithoutLessonInput = {
    where: LessonResourceScalarWhereInput
    data: XOR<LessonResourceUpdateManyMutationInput, LessonResourceUncheckedUpdateManyWithoutLessonInput>
  }

  export type LessonResourceScalarWhereInput = {
    AND?: LessonResourceScalarWhereInput | LessonResourceScalarWhereInput[]
    OR?: LessonResourceScalarWhereInput[]
    NOT?: LessonResourceScalarWhereInput | LessonResourceScalarWhereInput[]
    id?: StringFilter<"LessonResource"> | string
    lessonId?: StringFilter<"LessonResource"> | string
    title?: StringFilter<"LessonResource"> | string
    description?: StringNullableFilter<"LessonResource"> | string | null
    type?: EnumResourceTypeFilter<"LessonResource"> | $Enums.ResourceType
    url?: StringFilter<"LessonResource"> | string
    filePath?: StringNullableFilter<"LessonResource"> | string | null
    fileSize?: IntNullableFilter<"LessonResource"> | number | null
    orderIndex?: IntFilter<"LessonResource"> | number
    isDownloadable?: BoolFilter<"LessonResource"> | boolean
    createdAt?: DateTimeFilter<"LessonResource"> | Date | string
  }

  export type DiscussionUpsertWithWhereUniqueWithoutLessonInput = {
    where: DiscussionWhereUniqueInput
    update: XOR<DiscussionUpdateWithoutLessonInput, DiscussionUncheckedUpdateWithoutLessonInput>
    create: XOR<DiscussionCreateWithoutLessonInput, DiscussionUncheckedCreateWithoutLessonInput>
  }

  export type DiscussionUpdateWithWhereUniqueWithoutLessonInput = {
    where: DiscussionWhereUniqueInput
    data: XOR<DiscussionUpdateWithoutLessonInput, DiscussionUncheckedUpdateWithoutLessonInput>
  }

  export type DiscussionUpdateManyWithWhereWithoutLessonInput = {
    where: DiscussionScalarWhereInput
    data: XOR<DiscussionUpdateManyMutationInput, DiscussionUncheckedUpdateManyWithoutLessonInput>
  }

  export type LessonProgressUpsertWithWhereUniqueWithoutLessonInput = {
    where: LessonProgressWhereUniqueInput
    update: XOR<LessonProgressUpdateWithoutLessonInput, LessonProgressUncheckedUpdateWithoutLessonInput>
    create: XOR<LessonProgressCreateWithoutLessonInput, LessonProgressUncheckedCreateWithoutLessonInput>
  }

  export type LessonProgressUpdateWithWhereUniqueWithoutLessonInput = {
    where: LessonProgressWhereUniqueInput
    data: XOR<LessonProgressUpdateWithoutLessonInput, LessonProgressUncheckedUpdateWithoutLessonInput>
  }

  export type LessonProgressUpdateManyWithWhereWithoutLessonInput = {
    where: LessonProgressScalarWhereInput
    data: XOR<LessonProgressUpdateManyMutationInput, LessonProgressUncheckedUpdateManyWithoutLessonInput>
  }

  export type LessonProgressScalarWhereInput = {
    AND?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
    OR?: LessonProgressScalarWhereInput[]
    NOT?: LessonProgressScalarWhereInput | LessonProgressScalarWhereInput[]
    id?: StringFilter<"LessonProgress"> | string
    enrollmentId?: StringFilter<"LessonProgress"> | string
    lessonId?: StringFilter<"LessonProgress"> | string
    isCompleted?: BoolFilter<"LessonProgress"> | boolean
    completedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
    timeSpent?: IntFilter<"LessonProgress"> | number
    videoProgress?: FloatFilter<"LessonProgress"> | number
    lastWatchedAt?: DateTimeNullableFilter<"LessonProgress"> | Date | string | null
  }

  export type CourseModuleUpsertWithoutLessonsInput = {
    update: XOR<CourseModuleUpdateWithoutLessonsInput, CourseModuleUncheckedUpdateWithoutLessonsInput>
    create: XOR<CourseModuleCreateWithoutLessonsInput, CourseModuleUncheckedCreateWithoutLessonsInput>
    where?: CourseModuleWhereInput
  }

  export type CourseModuleUpdateToOneWithWhereWithoutLessonsInput = {
    where?: CourseModuleWhereInput
    data: XOR<CourseModuleUpdateWithoutLessonsInput, CourseModuleUncheckedUpdateWithoutLessonsInput>
  }

  export type CourseModuleUpdateWithoutLessonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    course?: CourseUpdateOneRequiredWithoutModulesNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleUncheckedUpdateWithoutLessonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutModuleNestedInput
  }

  export type QuizUpsertWithWhereUniqueWithoutLessonInput = {
    where: QuizWhereUniqueInput
    update: XOR<QuizUpdateWithoutLessonInput, QuizUncheckedUpdateWithoutLessonInput>
    create: XOR<QuizCreateWithoutLessonInput, QuizUncheckedCreateWithoutLessonInput>
  }

  export type QuizUpdateWithWhereUniqueWithoutLessonInput = {
    where: QuizWhereUniqueInput
    data: XOR<QuizUpdateWithoutLessonInput, QuizUncheckedUpdateWithoutLessonInput>
  }

  export type QuizUpdateManyWithWhereWithoutLessonInput = {
    where: QuizScalarWhereInput
    data: XOR<QuizUpdateManyMutationInput, QuizUncheckedUpdateManyWithoutLessonInput>
  }

  export type StudentNoteUpsertWithWhereUniqueWithoutLessonInput = {
    where: StudentNoteWhereUniqueInput
    update: XOR<StudentNoteUpdateWithoutLessonInput, StudentNoteUncheckedUpdateWithoutLessonInput>
    create: XOR<StudentNoteCreateWithoutLessonInput, StudentNoteUncheckedCreateWithoutLessonInput>
  }

  export type StudentNoteUpdateWithWhereUniqueWithoutLessonInput = {
    where: StudentNoteWhereUniqueInput
    data: XOR<StudentNoteUpdateWithoutLessonInput, StudentNoteUncheckedUpdateWithoutLessonInput>
  }

  export type StudentNoteUpdateManyWithWhereWithoutLessonInput = {
    where: StudentNoteScalarWhereInput
    data: XOR<StudentNoteUpdateManyMutationInput, StudentNoteUncheckedUpdateManyWithoutLessonInput>
  }

  export type CourseCreateWithoutEnrollmentsInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateCreateNestedManyWithoutCourseInput
    modules?: CourseModuleCreateNestedManyWithoutCourseInput
    instructor?: ProfileCreateNestedOneWithoutInstructedCoursesInput
    quizzes?: QuizCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateWithoutEnrollmentsInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateUncheckedCreateNestedManyWithoutCourseInput
    modules?: CourseModuleUncheckedCreateNestedManyWithoutCourseInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutEnrollmentsInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutEnrollmentsInput, CourseUncheckedCreateWithoutEnrollmentsInput>
  }

  export type ProfileCreateWithoutCourseEnrollmentsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutCourseEnrollmentsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutCourseEnrollmentsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCourseEnrollmentsInput, ProfileUncheckedCreateWithoutCourseEnrollmentsInput>
  }

  export type LessonProgressCreateWithoutEnrollmentInput = {
    id?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
    lesson: LessonCreateNestedOneWithoutProgressInput
  }

  export type LessonProgressUncheckedCreateWithoutEnrollmentInput = {
    id?: string
    lessonId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type LessonProgressCreateOrConnectWithoutEnrollmentInput = {
    where: LessonProgressWhereUniqueInput
    create: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput>
  }

  export type LessonProgressCreateManyEnrollmentInputEnvelope = {
    data: LessonProgressCreateManyEnrollmentInput | LessonProgressCreateManyEnrollmentInput[]
    skipDuplicates?: boolean
  }

  export type QuizAttemptCreateWithoutEnrollmentInput = {
    id?: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerCreateNestedManyWithoutAttemptInput
    quiz: QuizCreateNestedOneWithoutAttemptsInput
    student: ProfileCreateNestedOneWithoutQuizAttemptsInput
  }

  export type QuizAttemptUncheckedCreateWithoutEnrollmentInput = {
    id?: string
    quizId: string
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutAttemptInput
  }

  export type QuizAttemptCreateOrConnectWithoutEnrollmentInput = {
    where: QuizAttemptWhereUniqueInput
    create: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput>
  }

  export type QuizAttemptCreateManyEnrollmentInputEnvelope = {
    data: QuizAttemptCreateManyEnrollmentInput | QuizAttemptCreateManyEnrollmentInput[]
    skipDuplicates?: boolean
  }

  export type CourseUpsertWithoutEnrollmentsInput = {
    update: XOR<CourseUpdateWithoutEnrollmentsInput, CourseUncheckedUpdateWithoutEnrollmentsInput>
    create: XOR<CourseCreateWithoutEnrollmentsInput, CourseUncheckedCreateWithoutEnrollmentsInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutEnrollmentsInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutEnrollmentsInput, CourseUncheckedUpdateWithoutEnrollmentsInput>
  }

  export type CourseUpdateWithoutEnrollmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUpdateManyWithoutCourseNestedInput
    instructor?: ProfileUpdateOneWithoutInstructedCoursesNestedInput
    quizzes?: QuizUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateWithoutEnrollmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUncheckedUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUncheckedUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type ProfileUpsertWithoutCourseEnrollmentsInput = {
    update: XOR<ProfileUpdateWithoutCourseEnrollmentsInput, ProfileUncheckedUpdateWithoutCourseEnrollmentsInput>
    create: XOR<ProfileCreateWithoutCourseEnrollmentsInput, ProfileUncheckedCreateWithoutCourseEnrollmentsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutCourseEnrollmentsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutCourseEnrollmentsInput, ProfileUncheckedUpdateWithoutCourseEnrollmentsInput>
  }

  export type ProfileUpdateWithoutCourseEnrollmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCourseEnrollmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type LessonProgressUpsertWithWhereUniqueWithoutEnrollmentInput = {
    where: LessonProgressWhereUniqueInput
    update: XOR<LessonProgressUpdateWithoutEnrollmentInput, LessonProgressUncheckedUpdateWithoutEnrollmentInput>
    create: XOR<LessonProgressCreateWithoutEnrollmentInput, LessonProgressUncheckedCreateWithoutEnrollmentInput>
  }

  export type LessonProgressUpdateWithWhereUniqueWithoutEnrollmentInput = {
    where: LessonProgressWhereUniqueInput
    data: XOR<LessonProgressUpdateWithoutEnrollmentInput, LessonProgressUncheckedUpdateWithoutEnrollmentInput>
  }

  export type LessonProgressUpdateManyWithWhereWithoutEnrollmentInput = {
    where: LessonProgressScalarWhereInput
    data: XOR<LessonProgressUpdateManyMutationInput, LessonProgressUncheckedUpdateManyWithoutEnrollmentInput>
  }

  export type QuizAttemptUpsertWithWhereUniqueWithoutEnrollmentInput = {
    where: QuizAttemptWhereUniqueInput
    update: XOR<QuizAttemptUpdateWithoutEnrollmentInput, QuizAttemptUncheckedUpdateWithoutEnrollmentInput>
    create: XOR<QuizAttemptCreateWithoutEnrollmentInput, QuizAttemptUncheckedCreateWithoutEnrollmentInput>
  }

  export type QuizAttemptUpdateWithWhereUniqueWithoutEnrollmentInput = {
    where: QuizAttemptWhereUniqueInput
    data: XOR<QuizAttemptUpdateWithoutEnrollmentInput, QuizAttemptUncheckedUpdateWithoutEnrollmentInput>
  }

  export type QuizAttemptUpdateManyWithWhereWithoutEnrollmentInput = {
    where: QuizAttemptScalarWhereInput
    data: XOR<QuizAttemptUpdateManyMutationInput, QuizAttemptUncheckedUpdateManyWithoutEnrollmentInput>
  }

  export type CourseEnrollmentCreateWithoutLessonProgressInput = {
    id?: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course: CourseCreateNestedOneWithoutEnrollmentsInput
    student: ProfileCreateNestedOneWithoutCourseEnrollmentsInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUncheckedCreateWithoutLessonProgressInput = {
    id?: string
    studentId: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentCreateOrConnectWithoutLessonProgressInput = {
    where: CourseEnrollmentWhereUniqueInput
    create: XOR<CourseEnrollmentCreateWithoutLessonProgressInput, CourseEnrollmentUncheckedCreateWithoutLessonProgressInput>
  }

  export type LessonCreateWithoutProgressInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutProgressInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutProgressInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutProgressInput, LessonUncheckedCreateWithoutProgressInput>
  }

  export type CourseEnrollmentUpsertWithoutLessonProgressInput = {
    update: XOR<CourseEnrollmentUpdateWithoutLessonProgressInput, CourseEnrollmentUncheckedUpdateWithoutLessonProgressInput>
    create: XOR<CourseEnrollmentCreateWithoutLessonProgressInput, CourseEnrollmentUncheckedCreateWithoutLessonProgressInput>
    where?: CourseEnrollmentWhereInput
  }

  export type CourseEnrollmentUpdateToOneWithWhereWithoutLessonProgressInput = {
    where?: CourseEnrollmentWhereInput
    data: XOR<CourseEnrollmentUpdateWithoutLessonProgressInput, CourseEnrollmentUncheckedUpdateWithoutLessonProgressInput>
  }

  export type CourseEnrollmentUpdateWithoutLessonProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course?: CourseUpdateOneRequiredWithoutEnrollmentsNestedInput
    student?: ProfileUpdateOneRequiredWithoutCourseEnrollmentsNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateWithoutLessonProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutEnrollmentNestedInput
  }

  export type LessonUpsertWithoutProgressInput = {
    update: XOR<LessonUpdateWithoutProgressInput, LessonUncheckedUpdateWithoutProgressInput>
    create: XOR<LessonCreateWithoutProgressInput, LessonUncheckedCreateWithoutProgressInput>
    where?: LessonWhereInput
  }

  export type LessonUpdateToOneWithWhereWithoutProgressInput = {
    where?: LessonWhereInput
    data: XOR<LessonUpdateWithoutProgressInput, LessonUncheckedUpdateWithoutProgressInput>
  }

  export type LessonUpdateWithoutProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type QuizAttemptCreateWithoutQuizInput = {
    id?: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerCreateNestedManyWithoutAttemptInput
    enrollment?: CourseEnrollmentCreateNestedOneWithoutQuizAttemptsInput
    student: ProfileCreateNestedOneWithoutQuizAttemptsInput
  }

  export type QuizAttemptUncheckedCreateWithoutQuizInput = {
    id?: string
    enrollmentId?: string | null
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutAttemptInput
  }

  export type QuizAttemptCreateOrConnectWithoutQuizInput = {
    where: QuizAttemptWhereUniqueInput
    create: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput>
  }

  export type QuizAttemptCreateManyQuizInputEnvelope = {
    data: QuizAttemptCreateManyQuizInput | QuizAttemptCreateManyQuizInput[]
    skipDuplicates?: boolean
  }

  export type QuizQuestionCreateWithoutQuizInput = {
    id?: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
    answers?: QuizAnswerCreateNestedManyWithoutQuestionInput
  }

  export type QuizQuestionUncheckedCreateWithoutQuizInput = {
    id?: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
    answers?: QuizAnswerUncheckedCreateNestedManyWithoutQuestionInput
  }

  export type QuizQuestionCreateOrConnectWithoutQuizInput = {
    where: QuizQuestionWhereUniqueInput
    create: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput>
  }

  export type QuizQuestionCreateManyQuizInputEnvelope = {
    data: QuizQuestionCreateManyQuizInput | QuizQuestionCreateManyQuizInput[]
    skipDuplicates?: boolean
  }

  export type CourseCreateWithoutQuizzesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentCreateNestedManyWithoutCourseInput
    modules?: CourseModuleCreateNestedManyWithoutCourseInput
    instructor?: ProfileCreateNestedOneWithoutInstructedCoursesInput
  }

  export type CourseUncheckedCreateWithoutQuizzesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    certificates?: CertificateUncheckedCreateNestedManyWithoutCourseInput
    enrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput
    modules?: CourseModuleUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutQuizzesInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutQuizzesInput, CourseUncheckedCreateWithoutQuizzesInput>
  }

  export type LessonCreateWithoutQuizzesInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutQuizzesInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutQuizzesInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutQuizzesInput, LessonUncheckedCreateWithoutQuizzesInput>
  }

  export type QuizAttemptUpsertWithWhereUniqueWithoutQuizInput = {
    where: QuizAttemptWhereUniqueInput
    update: XOR<QuizAttemptUpdateWithoutQuizInput, QuizAttemptUncheckedUpdateWithoutQuizInput>
    create: XOR<QuizAttemptCreateWithoutQuizInput, QuizAttemptUncheckedCreateWithoutQuizInput>
  }

  export type QuizAttemptUpdateWithWhereUniqueWithoutQuizInput = {
    where: QuizAttemptWhereUniqueInput
    data: XOR<QuizAttemptUpdateWithoutQuizInput, QuizAttemptUncheckedUpdateWithoutQuizInput>
  }

  export type QuizAttemptUpdateManyWithWhereWithoutQuizInput = {
    where: QuizAttemptScalarWhereInput
    data: XOR<QuizAttemptUpdateManyMutationInput, QuizAttemptUncheckedUpdateManyWithoutQuizInput>
  }

  export type QuizQuestionUpsertWithWhereUniqueWithoutQuizInput = {
    where: QuizQuestionWhereUniqueInput
    update: XOR<QuizQuestionUpdateWithoutQuizInput, QuizQuestionUncheckedUpdateWithoutQuizInput>
    create: XOR<QuizQuestionCreateWithoutQuizInput, QuizQuestionUncheckedCreateWithoutQuizInput>
  }

  export type QuizQuestionUpdateWithWhereUniqueWithoutQuizInput = {
    where: QuizQuestionWhereUniqueInput
    data: XOR<QuizQuestionUpdateWithoutQuizInput, QuizQuestionUncheckedUpdateWithoutQuizInput>
  }

  export type QuizQuestionUpdateManyWithWhereWithoutQuizInput = {
    where: QuizQuestionScalarWhereInput
    data: XOR<QuizQuestionUpdateManyMutationInput, QuizQuestionUncheckedUpdateManyWithoutQuizInput>
  }

  export type QuizQuestionScalarWhereInput = {
    AND?: QuizQuestionScalarWhereInput | QuizQuestionScalarWhereInput[]
    OR?: QuizQuestionScalarWhereInput[]
    NOT?: QuizQuestionScalarWhereInput | QuizQuestionScalarWhereInput[]
    id?: StringFilter<"QuizQuestion"> | string
    quizId?: StringFilter<"QuizQuestion"> | string
    question?: StringFilter<"QuizQuestion"> | string
    type?: EnumQuestionTypeFilter<"QuizQuestion"> | $Enums.QuestionType
    options?: StringNullableListFilter<"QuizQuestion">
    correctAnswer?: StringFilter<"QuizQuestion"> | string
    explanation?: StringNullableFilter<"QuizQuestion"> | string | null
    points?: IntFilter<"QuizQuestion"> | number
    orderIndex?: IntFilter<"QuizQuestion"> | number
  }

  export type CourseUpsertWithoutQuizzesInput = {
    update: XOR<CourseUpdateWithoutQuizzesInput, CourseUncheckedUpdateWithoutQuizzesInput>
    create: XOR<CourseCreateWithoutQuizzesInput, CourseUncheckedCreateWithoutQuizzesInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutQuizzesInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutQuizzesInput, CourseUncheckedUpdateWithoutQuizzesInput>
  }

  export type CourseUpdateWithoutQuizzesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUpdateManyWithoutCourseNestedInput
    instructor?: ProfileUpdateOneWithoutInstructedCoursesNestedInput
  }

  export type CourseUncheckedUpdateWithoutQuizzesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUncheckedUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type LessonUpsertWithoutQuizzesInput = {
    update: XOR<LessonUpdateWithoutQuizzesInput, LessonUncheckedUpdateWithoutQuizzesInput>
    create: XOR<LessonCreateWithoutQuizzesInput, LessonUncheckedCreateWithoutQuizzesInput>
    where?: LessonWhereInput
  }

  export type LessonUpdateToOneWithWhereWithoutQuizzesInput = {
    where?: LessonWhereInput
    data: XOR<LessonUpdateWithoutQuizzesInput, LessonUncheckedUpdateWithoutQuizzesInput>
  }

  export type LessonUpdateWithoutQuizzesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutQuizzesInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type QuizAnswerCreateWithoutQuestionInput = {
    id?: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
    attempt: QuizAttemptCreateNestedOneWithoutAnswersInput
  }

  export type QuizAnswerUncheckedCreateWithoutQuestionInput = {
    id?: string
    attemptId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerCreateOrConnectWithoutQuestionInput = {
    where: QuizAnswerWhereUniqueInput
    create: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput>
  }

  export type QuizAnswerCreateManyQuestionInputEnvelope = {
    data: QuizAnswerCreateManyQuestionInput | QuizAnswerCreateManyQuestionInput[]
    skipDuplicates?: boolean
  }

  export type QuizCreateWithoutQuestionsInput = {
    id?: string
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptCreateNestedManyWithoutQuizInput
    course?: CourseCreateNestedOneWithoutQuizzesInput
    lesson?: LessonCreateNestedOneWithoutQuizzesInput
  }

  export type QuizUncheckedCreateWithoutQuestionsInput = {
    id?: string
    courseId?: string | null
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    attempts?: QuizAttemptUncheckedCreateNestedManyWithoutQuizInput
  }

  export type QuizCreateOrConnectWithoutQuestionsInput = {
    where: QuizWhereUniqueInput
    create: XOR<QuizCreateWithoutQuestionsInput, QuizUncheckedCreateWithoutQuestionsInput>
  }

  export type QuizAnswerUpsertWithWhereUniqueWithoutQuestionInput = {
    where: QuizAnswerWhereUniqueInput
    update: XOR<QuizAnswerUpdateWithoutQuestionInput, QuizAnswerUncheckedUpdateWithoutQuestionInput>
    create: XOR<QuizAnswerCreateWithoutQuestionInput, QuizAnswerUncheckedCreateWithoutQuestionInput>
  }

  export type QuizAnswerUpdateWithWhereUniqueWithoutQuestionInput = {
    where: QuizAnswerWhereUniqueInput
    data: XOR<QuizAnswerUpdateWithoutQuestionInput, QuizAnswerUncheckedUpdateWithoutQuestionInput>
  }

  export type QuizAnswerUpdateManyWithWhereWithoutQuestionInput = {
    where: QuizAnswerScalarWhereInput
    data: XOR<QuizAnswerUpdateManyMutationInput, QuizAnswerUncheckedUpdateManyWithoutQuestionInput>
  }

  export type QuizAnswerScalarWhereInput = {
    AND?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
    OR?: QuizAnswerScalarWhereInput[]
    NOT?: QuizAnswerScalarWhereInput | QuizAnswerScalarWhereInput[]
    id?: StringFilter<"QuizAnswer"> | string
    attemptId?: StringFilter<"QuizAnswer"> | string
    questionId?: StringFilter<"QuizAnswer"> | string
    answer?: StringFilter<"QuizAnswer"> | string
    isCorrect?: BoolFilter<"QuizAnswer"> | boolean
    timeSpent?: IntFilter<"QuizAnswer"> | number
  }

  export type QuizUpsertWithoutQuestionsInput = {
    update: XOR<QuizUpdateWithoutQuestionsInput, QuizUncheckedUpdateWithoutQuestionsInput>
    create: XOR<QuizCreateWithoutQuestionsInput, QuizUncheckedCreateWithoutQuestionsInput>
    where?: QuizWhereInput
  }

  export type QuizUpdateToOneWithWhereWithoutQuestionsInput = {
    where?: QuizWhereInput
    data: XOR<QuizUpdateWithoutQuestionsInput, QuizUncheckedUpdateWithoutQuestionsInput>
  }

  export type QuizUpdateWithoutQuestionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUpdateManyWithoutQuizNestedInput
    course?: CourseUpdateOneWithoutQuizzesNestedInput
    lesson?: LessonUpdateOneWithoutQuizzesNestedInput
  }

  export type QuizUncheckedUpdateWithoutQuestionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type QuizAnswerCreateWithoutAttemptInput = {
    id?: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
    question: QuizQuestionCreateNestedOneWithoutAnswersInput
  }

  export type QuizAnswerUncheckedCreateWithoutAttemptInput = {
    id?: string
    questionId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerCreateOrConnectWithoutAttemptInput = {
    where: QuizAnswerWhereUniqueInput
    create: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput>
  }

  export type QuizAnswerCreateManyAttemptInputEnvelope = {
    data: QuizAnswerCreateManyAttemptInput | QuizAnswerCreateManyAttemptInput[]
    skipDuplicates?: boolean
  }

  export type CourseEnrollmentCreateWithoutQuizAttemptsInput = {
    id?: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course: CourseCreateNestedOneWithoutEnrollmentsInput
    student: ProfileCreateNestedOneWithoutCourseEnrollmentsInput
    lessonProgress?: LessonProgressCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentUncheckedCreateWithoutQuizAttemptsInput = {
    id?: string
    studentId: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedCreateNestedManyWithoutEnrollmentInput
  }

  export type CourseEnrollmentCreateOrConnectWithoutQuizAttemptsInput = {
    where: CourseEnrollmentWhereUniqueInput
    create: XOR<CourseEnrollmentCreateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedCreateWithoutQuizAttemptsInput>
  }

  export type QuizCreateWithoutAttemptsInput = {
    id?: string
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    questions?: QuizQuestionCreateNestedManyWithoutQuizInput
    course?: CourseCreateNestedOneWithoutQuizzesInput
    lesson?: LessonCreateNestedOneWithoutQuizzesInput
  }

  export type QuizUncheckedCreateWithoutAttemptsInput = {
    id?: string
    courseId?: string | null
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
    questions?: QuizQuestionUncheckedCreateNestedManyWithoutQuizInput
  }

  export type QuizCreateOrConnectWithoutAttemptsInput = {
    where: QuizWhereUniqueInput
    create: XOR<QuizCreateWithoutAttemptsInput, QuizUncheckedCreateWithoutAttemptsInput>
  }

  export type ProfileCreateWithoutQuizAttemptsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutQuizAttemptsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutQuizAttemptsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutQuizAttemptsInput, ProfileUncheckedCreateWithoutQuizAttemptsInput>
  }

  export type QuizAnswerUpsertWithWhereUniqueWithoutAttemptInput = {
    where: QuizAnswerWhereUniqueInput
    update: XOR<QuizAnswerUpdateWithoutAttemptInput, QuizAnswerUncheckedUpdateWithoutAttemptInput>
    create: XOR<QuizAnswerCreateWithoutAttemptInput, QuizAnswerUncheckedCreateWithoutAttemptInput>
  }

  export type QuizAnswerUpdateWithWhereUniqueWithoutAttemptInput = {
    where: QuizAnswerWhereUniqueInput
    data: XOR<QuizAnswerUpdateWithoutAttemptInput, QuizAnswerUncheckedUpdateWithoutAttemptInput>
  }

  export type QuizAnswerUpdateManyWithWhereWithoutAttemptInput = {
    where: QuizAnswerScalarWhereInput
    data: XOR<QuizAnswerUpdateManyMutationInput, QuizAnswerUncheckedUpdateManyWithoutAttemptInput>
  }

  export type CourseEnrollmentUpsertWithoutQuizAttemptsInput = {
    update: XOR<CourseEnrollmentUpdateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedUpdateWithoutQuizAttemptsInput>
    create: XOR<CourseEnrollmentCreateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedCreateWithoutQuizAttemptsInput>
    where?: CourseEnrollmentWhereInput
  }

  export type CourseEnrollmentUpdateToOneWithWhereWithoutQuizAttemptsInput = {
    where?: CourseEnrollmentWhereInput
    data: XOR<CourseEnrollmentUpdateWithoutQuizAttemptsInput, CourseEnrollmentUncheckedUpdateWithoutQuizAttemptsInput>
  }

  export type CourseEnrollmentUpdateWithoutQuizAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course?: CourseUpdateOneRequiredWithoutEnrollmentsNestedInput
    student?: ProfileUpdateOneRequiredWithoutCourseEnrollmentsNestedInput
    lessonProgress?: LessonProgressUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateWithoutQuizAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedUpdateManyWithoutEnrollmentNestedInput
  }

  export type QuizUpsertWithoutAttemptsInput = {
    update: XOR<QuizUpdateWithoutAttemptsInput, QuizUncheckedUpdateWithoutAttemptsInput>
    create: XOR<QuizCreateWithoutAttemptsInput, QuizUncheckedCreateWithoutAttemptsInput>
    where?: QuizWhereInput
  }

  export type QuizUpdateToOneWithWhereWithoutAttemptsInput = {
    where?: QuizWhereInput
    data: XOR<QuizUpdateWithoutAttemptsInput, QuizUncheckedUpdateWithoutAttemptsInput>
  }

  export type QuizUpdateWithoutAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    questions?: QuizQuestionUpdateManyWithoutQuizNestedInput
    course?: CourseUpdateOneWithoutQuizzesNestedInput
    lesson?: LessonUpdateOneWithoutQuizzesNestedInput
  }

  export type QuizUncheckedUpdateWithoutAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    questions?: QuizQuestionUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type ProfileUpsertWithoutQuizAttemptsInput = {
    update: XOR<ProfileUpdateWithoutQuizAttemptsInput, ProfileUncheckedUpdateWithoutQuizAttemptsInput>
    create: XOR<ProfileCreateWithoutQuizAttemptsInput, ProfileUncheckedCreateWithoutQuizAttemptsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutQuizAttemptsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutQuizAttemptsInput, ProfileUncheckedUpdateWithoutQuizAttemptsInput>
  }

  export type ProfileUpdateWithoutQuizAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutQuizAttemptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type QuizAttemptCreateWithoutAnswersInput = {
    id?: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
    enrollment?: CourseEnrollmentCreateNestedOneWithoutQuizAttemptsInput
    quiz: QuizCreateNestedOneWithoutAttemptsInput
    student: ProfileCreateNestedOneWithoutQuizAttemptsInput
  }

  export type QuizAttemptUncheckedCreateWithoutAnswersInput = {
    id?: string
    enrollmentId?: string | null
    quizId: string
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
  }

  export type QuizAttemptCreateOrConnectWithoutAnswersInput = {
    where: QuizAttemptWhereUniqueInput
    create: XOR<QuizAttemptCreateWithoutAnswersInput, QuizAttemptUncheckedCreateWithoutAnswersInput>
  }

  export type QuizQuestionCreateWithoutAnswersInput = {
    id?: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
    quiz: QuizCreateNestedOneWithoutQuestionsInput
  }

  export type QuizQuestionUncheckedCreateWithoutAnswersInput = {
    id?: string
    quizId: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
  }

  export type QuizQuestionCreateOrConnectWithoutAnswersInput = {
    where: QuizQuestionWhereUniqueInput
    create: XOR<QuizQuestionCreateWithoutAnswersInput, QuizQuestionUncheckedCreateWithoutAnswersInput>
  }

  export type QuizAttemptUpsertWithoutAnswersInput = {
    update: XOR<QuizAttemptUpdateWithoutAnswersInput, QuizAttemptUncheckedUpdateWithoutAnswersInput>
    create: XOR<QuizAttemptCreateWithoutAnswersInput, QuizAttemptUncheckedCreateWithoutAnswersInput>
    where?: QuizAttemptWhereInput
  }

  export type QuizAttemptUpdateToOneWithWhereWithoutAnswersInput = {
    where?: QuizAttemptWhereInput
    data: XOR<QuizAttemptUpdateWithoutAnswersInput, QuizAttemptUncheckedUpdateWithoutAnswersInput>
  }

  export type QuizAttemptUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    enrollment?: CourseEnrollmentUpdateOneWithoutQuizAttemptsNestedInput
    quiz?: QuizUpdateOneRequiredWithoutAttemptsNestedInput
    student?: ProfileUpdateOneRequiredWithoutQuizAttemptsNestedInput
  }

  export type QuizAttemptUncheckedUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    quizId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizQuestionUpsertWithoutAnswersInput = {
    update: XOR<QuizQuestionUpdateWithoutAnswersInput, QuizQuestionUncheckedUpdateWithoutAnswersInput>
    create: XOR<QuizQuestionCreateWithoutAnswersInput, QuizQuestionUncheckedCreateWithoutAnswersInput>
    where?: QuizQuestionWhereInput
  }

  export type QuizQuestionUpdateToOneWithWhereWithoutAnswersInput = {
    where?: QuizQuestionWhereInput
    data: XOR<QuizQuestionUpdateWithoutAnswersInput, QuizQuestionUncheckedUpdateWithoutAnswersInput>
  }

  export type QuizQuestionUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
    quiz?: QuizUpdateOneRequiredWithoutQuestionsNestedInput
  }

  export type QuizQuestionUncheckedUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    quizId?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type CourseCreateWithoutCertificatesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    enrollments?: CourseEnrollmentCreateNestedManyWithoutCourseInput
    modules?: CourseModuleCreateNestedManyWithoutCourseInput
    instructor?: ProfileCreateNestedOneWithoutInstructedCoursesInput
    quizzes?: QuizCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateWithoutCertificatesInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    instructorId?: string | null
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    enrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutCourseInput
    modules?: CourseModuleUncheckedCreateNestedManyWithoutCourseInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutCertificatesInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutCertificatesInput, CourseUncheckedCreateWithoutCertificatesInput>
  }

  export type ProfileCreateWithoutCertificatesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutCertificatesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutCertificatesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCertificatesInput, ProfileUncheckedCreateWithoutCertificatesInput>
  }

  export type CourseUpsertWithoutCertificatesInput = {
    update: XOR<CourseUpdateWithoutCertificatesInput, CourseUncheckedUpdateWithoutCertificatesInput>
    create: XOR<CourseCreateWithoutCertificatesInput, CourseUncheckedCreateWithoutCertificatesInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutCertificatesInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutCertificatesInput, CourseUncheckedUpdateWithoutCertificatesInput>
  }

  export type CourseUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    enrollments?: CourseEnrollmentUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUpdateManyWithoutCourseNestedInput
    instructor?: ProfileUpdateOneWithoutInstructedCoursesNestedInput
    quizzes?: QuizUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    instructorId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    enrollments?: CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUncheckedUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type ProfileUpsertWithoutCertificatesInput = {
    update: XOR<ProfileUpdateWithoutCertificatesInput, ProfileUncheckedUpdateWithoutCertificatesInput>
    create: XOR<ProfileCreateWithoutCertificatesInput, ProfileUncheckedCreateWithoutCertificatesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutCertificatesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutCertificatesInput, ProfileUncheckedUpdateWithoutCertificatesInput>
  }

  export type ProfileUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type LessonCreateWithoutNotesInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutNotesInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutNotesInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutNotesInput, LessonUncheckedCreateWithoutNotesInput>
  }

  export type ProfileCreateWithoutStudentNotesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutStudentNotesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutStudentNotesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutStudentNotesInput, ProfileUncheckedCreateWithoutStudentNotesInput>
  }

  export type LessonUpsertWithoutNotesInput = {
    update: XOR<LessonUpdateWithoutNotesInput, LessonUncheckedUpdateWithoutNotesInput>
    create: XOR<LessonCreateWithoutNotesInput, LessonUncheckedCreateWithoutNotesInput>
    where?: LessonWhereInput
  }

  export type LessonUpdateToOneWithWhereWithoutNotesInput = {
    where?: LessonWhereInput
    data: XOR<LessonUpdateWithoutNotesInput, LessonUncheckedUpdateWithoutNotesInput>
  }

  export type LessonUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type ProfileUpsertWithoutStudentNotesInput = {
    update: XOR<ProfileUpdateWithoutStudentNotesInput, ProfileUncheckedUpdateWithoutStudentNotesInput>
    create: XOR<ProfileCreateWithoutStudentNotesInput, ProfileUncheckedCreateWithoutStudentNotesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutStudentNotesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutStudentNotesInput, ProfileUncheckedUpdateWithoutStudentNotesInput>
  }

  export type ProfileUpdateWithoutStudentNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutStudentNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type LessonCreateWithoutDiscussionsInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutDiscussionsInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutDiscussionsInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutDiscussionsInput, LessonUncheckedCreateWithoutDiscussionsInput>
  }

  export type DiscussionCreateWithoutRepliesInput = {
    id?: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutDiscussionsInput
    parent?: DiscussionCreateNestedOneWithoutRepliesInput
    user: ProfileCreateNestedOneWithoutDiscussionsInput
  }

  export type DiscussionUncheckedCreateWithoutRepliesInput = {
    id?: string
    lessonId: string
    userId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DiscussionCreateOrConnectWithoutRepliesInput = {
    where: DiscussionWhereUniqueInput
    create: XOR<DiscussionCreateWithoutRepliesInput, DiscussionUncheckedCreateWithoutRepliesInput>
  }

  export type DiscussionCreateWithoutParentInput = {
    id?: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    lesson: LessonCreateNestedOneWithoutDiscussionsInput
    replies?: DiscussionCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutDiscussionsInput
  }

  export type DiscussionUncheckedCreateWithoutParentInput = {
    id?: string
    lessonId: string
    userId: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: DiscussionUncheckedCreateNestedManyWithoutParentInput
  }

  export type DiscussionCreateOrConnectWithoutParentInput = {
    where: DiscussionWhereUniqueInput
    create: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput>
  }

  export type DiscussionCreateManyParentInputEnvelope = {
    data: DiscussionCreateManyParentInput | DiscussionCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutDiscussionsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutDiscussionsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutDiscussionsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutDiscussionsInput, ProfileUncheckedCreateWithoutDiscussionsInput>
  }

  export type LessonUpsertWithoutDiscussionsInput = {
    update: XOR<LessonUpdateWithoutDiscussionsInput, LessonUncheckedUpdateWithoutDiscussionsInput>
    create: XOR<LessonCreateWithoutDiscussionsInput, LessonUncheckedCreateWithoutDiscussionsInput>
    where?: LessonWhereInput
  }

  export type LessonUpdateToOneWithWhereWithoutDiscussionsInput = {
    where?: LessonWhereInput
    data: XOR<LessonUpdateWithoutDiscussionsInput, LessonUncheckedUpdateWithoutDiscussionsInput>
  }

  export type LessonUpdateWithoutDiscussionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutDiscussionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type DiscussionUpsertWithoutRepliesInput = {
    update: XOR<DiscussionUpdateWithoutRepliesInput, DiscussionUncheckedUpdateWithoutRepliesInput>
    create: XOR<DiscussionCreateWithoutRepliesInput, DiscussionUncheckedCreateWithoutRepliesInput>
    where?: DiscussionWhereInput
  }

  export type DiscussionUpdateToOneWithWhereWithoutRepliesInput = {
    where?: DiscussionWhereInput
    data: XOR<DiscussionUpdateWithoutRepliesInput, DiscussionUncheckedUpdateWithoutRepliesInput>
  }

  export type DiscussionUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutDiscussionsNestedInput
    parent?: DiscussionUpdateOneWithoutRepliesNestedInput
    user?: ProfileUpdateOneRequiredWithoutDiscussionsNestedInput
  }

  export type DiscussionUncheckedUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscussionUpsertWithWhereUniqueWithoutParentInput = {
    where: DiscussionWhereUniqueInput
    update: XOR<DiscussionUpdateWithoutParentInput, DiscussionUncheckedUpdateWithoutParentInput>
    create: XOR<DiscussionCreateWithoutParentInput, DiscussionUncheckedCreateWithoutParentInput>
  }

  export type DiscussionUpdateWithWhereUniqueWithoutParentInput = {
    where: DiscussionWhereUniqueInput
    data: XOR<DiscussionUpdateWithoutParentInput, DiscussionUncheckedUpdateWithoutParentInput>
  }

  export type DiscussionUpdateManyWithWhereWithoutParentInput = {
    where: DiscussionScalarWhereInput
    data: XOR<DiscussionUpdateManyMutationInput, DiscussionUncheckedUpdateManyWithoutParentInput>
  }

  export type ProfileUpsertWithoutDiscussionsInput = {
    update: XOR<ProfileUpdateWithoutDiscussionsInput, ProfileUncheckedUpdateWithoutDiscussionsInput>
    create: XOR<ProfileCreateWithoutDiscussionsInput, ProfileUncheckedCreateWithoutDiscussionsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutDiscussionsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutDiscussionsInput, ProfileUncheckedUpdateWithoutDiscussionsInput>
  }

  export type ProfileUpdateWithoutDiscussionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutDiscussionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type BusinessPlanCreateWithoutEntrepreneurshipInput = {
    id?: string
    executiveSummary?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    marketAnalysis?: string | null
    targetMarket?: string | null
    competitiveAnalysis?: string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanCreaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: string | null
    pricingStrategy?: string | null
    salesStrategy?: string | null
    initialInvestment?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: number | null
    roi?: Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: string | null
    mitigationStrategies?: BusinessPlanCreatemitigationStrategiesInput | string[]
    operationalPlan?: string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: boolean
    lastSection?: string | null
    completionPercentage?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput = {
    id?: string
    executiveSummary?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    marketAnalysis?: string | null
    targetMarket?: string | null
    competitiveAnalysis?: string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanCreaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: string | null
    pricingStrategy?: string | null
    salesStrategy?: string | null
    initialInvestment?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: number | null
    roi?: Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: string | null
    mitigationStrategies?: BusinessPlanCreatemitigationStrategiesInput | string[]
    operationalPlan?: string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: boolean
    lastSection?: string | null
    completionPercentage?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessPlanCreateOrConnectWithoutEntrepreneurshipInput = {
    where: BusinessPlanWhereUniqueInput
    create: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
  }

  export type ProfileCreateWithoutEntrepreneurshipsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutEntrepreneurshipsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutEntrepreneurshipsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutEntrepreneurshipsInput, ProfileUncheckedCreateWithoutEntrepreneurshipsInput>
  }

  export type BusinessPlanUpsertWithoutEntrepreneurshipInput = {
    update: XOR<BusinessPlanUpdateWithoutEntrepreneurshipInput, BusinessPlanUncheckedUpdateWithoutEntrepreneurshipInput>
    create: XOR<BusinessPlanCreateWithoutEntrepreneurshipInput, BusinessPlanUncheckedCreateWithoutEntrepreneurshipInput>
    where?: BusinessPlanWhereInput
  }

  export type BusinessPlanUpdateToOneWithWhereWithoutEntrepreneurshipInput = {
    where?: BusinessPlanWhereInput
    data: XOR<BusinessPlanUpdateWithoutEntrepreneurshipInput, BusinessPlanUncheckedUpdateWithoutEntrepreneurshipInput>
  }

  export type BusinessPlanUpdateWithoutEntrepreneurshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessPlanUncheckedUpdateWithoutEntrepreneurshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    executiveSummary?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    marketAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    competitiveAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    businessModelCanvas?: NullableJsonNullValueInput | InputJsonValue
    revenueStreams?: BusinessPlanUpdaterevenueStreamsInput | string[]
    costStructure?: NullableJsonNullValueInput | InputJsonValue
    marketingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    pricingStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    salesStrategy?: NullableStringFieldUpdateOperationsInput | string | null
    initialInvestment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    revenueProjection?: NullableJsonNullValueInput | InputJsonValue
    breakEvenPoint?: NullableIntFieldUpdateOperationsInput | number | null
    roi?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    riskAnalysis?: NullableStringFieldUpdateOperationsInput | string | null
    mitigationStrategies?: BusinessPlanUpdatemitigationStrategiesInput | string[]
    operationalPlan?: NullableStringFieldUpdateOperationsInput | string | null
    managementTeam?: NullableJsonNullValueInput | InputJsonValue
    tripleImpactAssessment?: NullableJsonNullValueInput | InputJsonValue
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    lastSection?: NullableStringFieldUpdateOperationsInput | string | null
    completionPercentage?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileUpsertWithoutEntrepreneurshipsInput = {
    update: XOR<ProfileUpdateWithoutEntrepreneurshipsInput, ProfileUncheckedUpdateWithoutEntrepreneurshipsInput>
    create: XOR<ProfileCreateWithoutEntrepreneurshipsInput, ProfileUncheckedCreateWithoutEntrepreneurshipsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutEntrepreneurshipsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutEntrepreneurshipsInput, ProfileUncheckedUpdateWithoutEntrepreneurshipsInput>
  }

  export type ProfileUpdateWithoutEntrepreneurshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutEntrepreneurshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type EntrepreneurshipCreateWithoutBusinessPlanInput = {
    id?: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: ProfileCreateNestedOneWithoutEntrepreneurshipsInput
  }

  export type EntrepreneurshipUncheckedCreateWithoutBusinessPlanInput = {
    id?: string
    ownerId: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EntrepreneurshipCreateOrConnectWithoutBusinessPlanInput = {
    where: EntrepreneurshipWhereUniqueInput
    create: XOR<EntrepreneurshipCreateWithoutBusinessPlanInput, EntrepreneurshipUncheckedCreateWithoutBusinessPlanInput>
  }

  export type EntrepreneurshipUpsertWithoutBusinessPlanInput = {
    update: XOR<EntrepreneurshipUpdateWithoutBusinessPlanInput, EntrepreneurshipUncheckedUpdateWithoutBusinessPlanInput>
    create: XOR<EntrepreneurshipCreateWithoutBusinessPlanInput, EntrepreneurshipUncheckedCreateWithoutBusinessPlanInput>
    where?: EntrepreneurshipWhereInput
  }

  export type EntrepreneurshipUpdateToOneWithWhereWithoutBusinessPlanInput = {
    where?: EntrepreneurshipWhereInput
    data: XOR<EntrepreneurshipUpdateWithoutBusinessPlanInput, EntrepreneurshipUncheckedUpdateWithoutBusinessPlanInput>
  }

  export type EntrepreneurshipUpdateWithoutBusinessPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: ProfileUpdateOneRequiredWithoutEntrepreneurshipsNestedInput
  }

  export type EntrepreneurshipUncheckedUpdateWithoutBusinessPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileCreateWithoutNewsArticlesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutNewsArticlesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutNewsArticlesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutNewsArticlesInput, ProfileUncheckedCreateWithoutNewsArticlesInput>
  }

  export type NewsCommentCreateWithoutNewsInput = {
    id?: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: NewsCommentCreateNestedOneWithoutRepliesInput
    replies?: NewsCommentCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutNewsCommentsInput
  }

  export type NewsCommentUncheckedCreateWithoutNewsInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: NewsCommentUncheckedCreateNestedManyWithoutParentInput
  }

  export type NewsCommentCreateOrConnectWithoutNewsInput = {
    where: NewsCommentWhereUniqueInput
    create: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput>
  }

  export type NewsCommentCreateManyNewsInputEnvelope = {
    data: NewsCommentCreateManyNewsInput | NewsCommentCreateManyNewsInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithoutNewsArticlesInput = {
    update: XOR<ProfileUpdateWithoutNewsArticlesInput, ProfileUncheckedUpdateWithoutNewsArticlesInput>
    create: XOR<ProfileCreateWithoutNewsArticlesInput, ProfileUncheckedCreateWithoutNewsArticlesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutNewsArticlesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutNewsArticlesInput, ProfileUncheckedUpdateWithoutNewsArticlesInput>
  }

  export type ProfileUpdateWithoutNewsArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutNewsArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type NewsCommentUpsertWithWhereUniqueWithoutNewsInput = {
    where: NewsCommentWhereUniqueInput
    update: XOR<NewsCommentUpdateWithoutNewsInput, NewsCommentUncheckedUpdateWithoutNewsInput>
    create: XOR<NewsCommentCreateWithoutNewsInput, NewsCommentUncheckedCreateWithoutNewsInput>
  }

  export type NewsCommentUpdateWithWhereUniqueWithoutNewsInput = {
    where: NewsCommentWhereUniqueInput
    data: XOR<NewsCommentUpdateWithoutNewsInput, NewsCommentUncheckedUpdateWithoutNewsInput>
  }

  export type NewsCommentUpdateManyWithWhereWithoutNewsInput = {
    where: NewsCommentScalarWhereInput
    data: XOR<NewsCommentUpdateManyMutationInput, NewsCommentUncheckedUpdateManyWithoutNewsInput>
  }

  export type NewsArticleCreateWithoutCommentsInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    author: ProfileCreateNestedOneWithoutNewsArticlesInput
  }

  export type NewsArticleUncheckedCreateWithoutCommentsInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorId: string
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsArticleCreateOrConnectWithoutCommentsInput = {
    where: NewsArticleWhereUniqueInput
    create: XOR<NewsArticleCreateWithoutCommentsInput, NewsArticleUncheckedCreateWithoutCommentsInput>
  }

  export type NewsCommentCreateWithoutRepliesInput = {
    id?: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    news: NewsArticleCreateNestedOneWithoutCommentsInput
    parent?: NewsCommentCreateNestedOneWithoutRepliesInput
    user: ProfileCreateNestedOneWithoutNewsCommentsInput
  }

  export type NewsCommentUncheckedCreateWithoutRepliesInput = {
    id?: string
    newsId: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsCommentCreateOrConnectWithoutRepliesInput = {
    where: NewsCommentWhereUniqueInput
    create: XOR<NewsCommentCreateWithoutRepliesInput, NewsCommentUncheckedCreateWithoutRepliesInput>
  }

  export type NewsCommentCreateWithoutParentInput = {
    id?: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    news: NewsArticleCreateNestedOneWithoutCommentsInput
    replies?: NewsCommentCreateNestedManyWithoutParentInput
    user: ProfileCreateNestedOneWithoutNewsCommentsInput
  }

  export type NewsCommentUncheckedCreateWithoutParentInput = {
    id?: string
    newsId: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: NewsCommentUncheckedCreateNestedManyWithoutParentInput
  }

  export type NewsCommentCreateOrConnectWithoutParentInput = {
    where: NewsCommentWhereUniqueInput
    create: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput>
  }

  export type NewsCommentCreateManyParentInputEnvelope = {
    data: NewsCommentCreateManyParentInput | NewsCommentCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutNewsCommentsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutNewsCommentsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutNewsCommentsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutNewsCommentsInput, ProfileUncheckedCreateWithoutNewsCommentsInput>
  }

  export type NewsArticleUpsertWithoutCommentsInput = {
    update: XOR<NewsArticleUpdateWithoutCommentsInput, NewsArticleUncheckedUpdateWithoutCommentsInput>
    create: XOR<NewsArticleCreateWithoutCommentsInput, NewsArticleUncheckedCreateWithoutCommentsInput>
    where?: NewsArticleWhereInput
  }

  export type NewsArticleUpdateToOneWithWhereWithoutCommentsInput = {
    where?: NewsArticleWhereInput
    data: XOR<NewsArticleUpdateWithoutCommentsInput, NewsArticleUncheckedUpdateWithoutCommentsInput>
  }

  export type NewsArticleUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: ProfileUpdateOneRequiredWithoutNewsArticlesNestedInput
  }

  export type NewsArticleUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentUpsertWithoutRepliesInput = {
    update: XOR<NewsCommentUpdateWithoutRepliesInput, NewsCommentUncheckedUpdateWithoutRepliesInput>
    create: XOR<NewsCommentCreateWithoutRepliesInput, NewsCommentUncheckedCreateWithoutRepliesInput>
    where?: NewsCommentWhereInput
  }

  export type NewsCommentUpdateToOneWithWhereWithoutRepliesInput = {
    where?: NewsCommentWhereInput
    data: XOR<NewsCommentUpdateWithoutRepliesInput, NewsCommentUncheckedUpdateWithoutRepliesInput>
  }

  export type NewsCommentUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    news?: NewsArticleUpdateOneRequiredWithoutCommentsNestedInput
    parent?: NewsCommentUpdateOneWithoutRepliesNestedInput
    user?: ProfileUpdateOneRequiredWithoutNewsCommentsNestedInput
  }

  export type NewsCommentUncheckedUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentUpsertWithWhereUniqueWithoutParentInput = {
    where: NewsCommentWhereUniqueInput
    update: XOR<NewsCommentUpdateWithoutParentInput, NewsCommentUncheckedUpdateWithoutParentInput>
    create: XOR<NewsCommentCreateWithoutParentInput, NewsCommentUncheckedCreateWithoutParentInput>
  }

  export type NewsCommentUpdateWithWhereUniqueWithoutParentInput = {
    where: NewsCommentWhereUniqueInput
    data: XOR<NewsCommentUpdateWithoutParentInput, NewsCommentUncheckedUpdateWithoutParentInput>
  }

  export type NewsCommentUpdateManyWithWhereWithoutParentInput = {
    where: NewsCommentScalarWhereInput
    data: XOR<NewsCommentUpdateManyMutationInput, NewsCommentUncheckedUpdateManyWithoutParentInput>
  }

  export type ProfileUpsertWithoutNewsCommentsInput = {
    update: XOR<ProfileUpdateWithoutNewsCommentsInput, ProfileUncheckedUpdateWithoutNewsCommentsInput>
    create: XOR<ProfileCreateWithoutNewsCommentsInput, ProfileUncheckedCreateWithoutNewsCommentsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutNewsCommentsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutNewsCommentsInput, ProfileUncheckedUpdateWithoutNewsCommentsInput>
  }

  export type ProfileUpdateWithoutNewsCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutNewsCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type CompanyCreateWithoutCreatorInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdAt?: Date | string
    updatedAt?: Date | string
    municipality: MunicipalityCreateNestedOneWithoutCompaniesInput
    jobOffers?: JobOfferCreateNestedManyWithoutCompanyInput
    profiles?: ProfileCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutCreatorInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    jobOffers?: JobOfferUncheckedCreateNestedManyWithoutCompanyInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutCreatorInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput>
  }

  export type CompanyCreateManyCreatorInputEnvelope = {
    data: CompanyCreateManyCreatorInput | CompanyCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type InstitutionCreateWithoutCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InstitutionUncheckedCreateWithoutCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InstitutionCreateOrConnectWithoutCreatorInput = {
    where: InstitutionWhereUniqueInput
    create: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput>
  }

  export type InstitutionCreateManyCreatorInputEnvelope = {
    data: InstitutionCreateManyCreatorInput | InstitutionCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type MunicipalityCreateWithoutCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companies?: CompanyCreateNestedManyWithoutMunicipalityInput
  }

  export type MunicipalityUncheckedCreateWithoutCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companies?: CompanyUncheckedCreateNestedManyWithoutMunicipalityInput
  }

  export type MunicipalityCreateOrConnectWithoutCreatorInput = {
    where: MunicipalityWhereUniqueInput
    create: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput>
  }

  export type MunicipalityCreateManyCreatorInputEnvelope = {
    data: MunicipalityCreateManyCreatorInput | MunicipalityCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithWhereUniqueWithoutCreatorInput = {
    where: CompanyWhereUniqueInput
    update: XOR<CompanyUpdateWithoutCreatorInput, CompanyUncheckedUpdateWithoutCreatorInput>
    create: XOR<CompanyCreateWithoutCreatorInput, CompanyUncheckedCreateWithoutCreatorInput>
  }

  export type CompanyUpdateWithWhereUniqueWithoutCreatorInput = {
    where: CompanyWhereUniqueInput
    data: XOR<CompanyUpdateWithoutCreatorInput, CompanyUncheckedUpdateWithoutCreatorInput>
  }

  export type CompanyUpdateManyWithWhereWithoutCreatorInput = {
    where: CompanyScalarWhereInput
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyWithoutCreatorInput>
  }

  export type CompanyScalarWhereInput = {
    AND?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    OR?: CompanyScalarWhereInput[]
    NOT?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    id?: StringFilter<"Company"> | string
    name?: StringFilter<"Company"> | string
    description?: StringNullableFilter<"Company"> | string | null
    taxId?: StringNullableFilter<"Company"> | string | null
    legalRepresentative?: StringNullableFilter<"Company"> | string | null
    businessSector?: StringNullableFilter<"Company"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Company"> | $Enums.CompanySize | null
    website?: StringNullableFilter<"Company"> | string | null
    email?: StringNullableFilter<"Company"> | string | null
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    foundedYear?: IntNullableFilter<"Company"> | number | null
    isActive?: BoolFilter<"Company"> | boolean
    username?: StringFilter<"Company"> | string
    password?: StringFilter<"Company"> | string
    loginEmail?: StringFilter<"Company"> | string
    municipalityId?: StringFilter<"Company"> | string
    createdBy?: StringFilter<"Company"> | string
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
  }

  export type InstitutionUpsertWithWhereUniqueWithoutCreatorInput = {
    where: InstitutionWhereUniqueInput
    update: XOR<InstitutionUpdateWithoutCreatorInput, InstitutionUncheckedUpdateWithoutCreatorInput>
    create: XOR<InstitutionCreateWithoutCreatorInput, InstitutionUncheckedCreateWithoutCreatorInput>
  }

  export type InstitutionUpdateWithWhereUniqueWithoutCreatorInput = {
    where: InstitutionWhereUniqueInput
    data: XOR<InstitutionUpdateWithoutCreatorInput, InstitutionUncheckedUpdateWithoutCreatorInput>
  }

  export type InstitutionUpdateManyWithWhereWithoutCreatorInput = {
    where: InstitutionScalarWhereInput
    data: XOR<InstitutionUpdateManyMutationInput, InstitutionUncheckedUpdateManyWithoutCreatorInput>
  }

  export type InstitutionScalarWhereInput = {
    AND?: InstitutionScalarWhereInput | InstitutionScalarWhereInput[]
    OR?: InstitutionScalarWhereInput[]
    NOT?: InstitutionScalarWhereInput | InstitutionScalarWhereInput[]
    id?: StringFilter<"Institution"> | string
    name?: StringFilter<"Institution"> | string
    department?: StringFilter<"Institution"> | string
    region?: StringNullableFilter<"Institution"> | string | null
    population?: IntNullableFilter<"Institution"> | number | null
    mayorName?: StringNullableFilter<"Institution"> | string | null
    mayorEmail?: StringNullableFilter<"Institution"> | string | null
    mayorPhone?: StringNullableFilter<"Institution"> | string | null
    address?: StringNullableFilter<"Institution"> | string | null
    website?: StringNullableFilter<"Institution"> | string | null
    isActive?: BoolFilter<"Institution"> | boolean
    username?: StringFilter<"Institution"> | string
    password?: StringFilter<"Institution"> | string
    email?: StringFilter<"Institution"> | string
    phone?: StringNullableFilter<"Institution"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Institution"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Institution"> | string | null
    primaryColor?: StringNullableFilter<"Institution"> | string | null
    secondaryColor?: StringNullableFilter<"Institution"> | string | null
    createdBy?: StringFilter<"Institution"> | string
    createdAt?: DateTimeFilter<"Institution"> | Date | string
    updatedAt?: DateTimeFilter<"Institution"> | Date | string
  }

  export type MunicipalityUpsertWithWhereUniqueWithoutCreatorInput = {
    where: MunicipalityWhereUniqueInput
    update: XOR<MunicipalityUpdateWithoutCreatorInput, MunicipalityUncheckedUpdateWithoutCreatorInput>
    create: XOR<MunicipalityCreateWithoutCreatorInput, MunicipalityUncheckedCreateWithoutCreatorInput>
  }

  export type MunicipalityUpdateWithWhereUniqueWithoutCreatorInput = {
    where: MunicipalityWhereUniqueInput
    data: XOR<MunicipalityUpdateWithoutCreatorInput, MunicipalityUncheckedUpdateWithoutCreatorInput>
  }

  export type MunicipalityUpdateManyWithWhereWithoutCreatorInput = {
    where: MunicipalityScalarWhereInput
    data: XOR<MunicipalityUpdateManyMutationInput, MunicipalityUncheckedUpdateManyWithoutCreatorInput>
  }

  export type MunicipalityScalarWhereInput = {
    AND?: MunicipalityScalarWhereInput | MunicipalityScalarWhereInput[]
    OR?: MunicipalityScalarWhereInput[]
    NOT?: MunicipalityScalarWhereInput | MunicipalityScalarWhereInput[]
    id?: StringFilter<"Municipality"> | string
    name?: StringFilter<"Municipality"> | string
    department?: StringFilter<"Municipality"> | string
    region?: StringNullableFilter<"Municipality"> | string | null
    population?: IntNullableFilter<"Municipality"> | number | null
    mayorName?: StringNullableFilter<"Municipality"> | string | null
    mayorEmail?: StringNullableFilter<"Municipality"> | string | null
    mayorPhone?: StringNullableFilter<"Municipality"> | string | null
    address?: StringNullableFilter<"Municipality"> | string | null
    website?: StringNullableFilter<"Municipality"> | string | null
    isActive?: BoolFilter<"Municipality"> | boolean
    username?: StringFilter<"Municipality"> | string
    password?: StringFilter<"Municipality"> | string
    email?: StringFilter<"Municipality"> | string
    phone?: StringNullableFilter<"Municipality"> | string | null
    institutionType?: EnumInstitutionTypeFilter<"Municipality"> | $Enums.InstitutionType
    customType?: StringNullableFilter<"Municipality"> | string | null
    primaryColor?: StringNullableFilter<"Municipality"> | string | null
    secondaryColor?: StringNullableFilter<"Municipality"> | string | null
    createdBy?: StringFilter<"Municipality"> | string
    createdAt?: DateTimeFilter<"Municipality"> | Date | string
    updatedAt?: DateTimeFilter<"Municipality"> | Date | string
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    revoked?: BoolFilter<"RefreshToken"> | boolean
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type UserCreateWithoutRefreshTokensInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityCreateNestedManyWithoutCreatorInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyUncheckedCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionUncheckedCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityUncheckedCreateNestedManyWithoutCreatorInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUpdateManyWithoutCreatorNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUncheckedUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUncheckedUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUncheckedUpdateManyWithoutCreatorNestedInput
  }

  export type UserCreateWithoutCreatedInstitutionsInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedInstitutionsInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyUncheckedCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityUncheckedCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedInstitutionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedInstitutionsInput, UserUncheckedCreateWithoutCreatedInstitutionsInput>
  }

  export type UserUpsertWithoutCreatedInstitutionsInput = {
    update: XOR<UserUpdateWithoutCreatedInstitutionsInput, UserUncheckedUpdateWithoutCreatedInstitutionsInput>
    create: XOR<UserCreateWithoutCreatedInstitutionsInput, UserUncheckedCreateWithoutCreatedInstitutionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedInstitutionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedInstitutionsInput, UserUncheckedUpdateWithoutCreatedInstitutionsInput>
  }

  export type UserUpdateWithoutCreatedInstitutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedInstitutionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUncheckedUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUncheckedUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CompanyCreateWithoutMunicipalityInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedCompaniesInput
    jobOffers?: JobOfferCreateNestedManyWithoutCompanyInput
    profiles?: ProfileCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMunicipalityInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
    jobOffers?: JobOfferUncheckedCreateNestedManyWithoutCompanyInput
    profiles?: ProfileUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMunicipalityInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput>
  }

  export type CompanyCreateManyMunicipalityInputEnvelope = {
    data: CompanyCreateManyMunicipalityInput | CompanyCreateManyMunicipalityInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedMunicipalitiesInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedMunicipalitiesInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdCompanies?: CompanyUncheckedCreateNestedManyWithoutCreatorInput
    createdInstitutions?: InstitutionUncheckedCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedMunicipalitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedMunicipalitiesInput, UserUncheckedCreateWithoutCreatedMunicipalitiesInput>
  }

  export type CompanyUpsertWithWhereUniqueWithoutMunicipalityInput = {
    where: CompanyWhereUniqueInput
    update: XOR<CompanyUpdateWithoutMunicipalityInput, CompanyUncheckedUpdateWithoutMunicipalityInput>
    create: XOR<CompanyCreateWithoutMunicipalityInput, CompanyUncheckedCreateWithoutMunicipalityInput>
  }

  export type CompanyUpdateWithWhereUniqueWithoutMunicipalityInput = {
    where: CompanyWhereUniqueInput
    data: XOR<CompanyUpdateWithoutMunicipalityInput, CompanyUncheckedUpdateWithoutMunicipalityInput>
  }

  export type CompanyUpdateManyWithWhereWithoutMunicipalityInput = {
    where: CompanyScalarWhereInput
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyWithoutMunicipalityInput>
  }

  export type UserUpsertWithoutCreatedMunicipalitiesInput = {
    update: XOR<UserUpdateWithoutCreatedMunicipalitiesInput, UserUncheckedUpdateWithoutCreatedMunicipalitiesInput>
    create: XOR<UserCreateWithoutCreatedMunicipalitiesInput, UserUncheckedCreateWithoutCreatedMunicipalitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedMunicipalitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedMunicipalitiesInput, UserUncheckedUpdateWithoutCreatedMunicipalitiesInput>
  }

  export type UserUpdateWithoutCreatedMunicipalitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedMunicipalitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdCompanies?: CompanyUncheckedUpdateManyWithoutCreatorNestedInput
    createdInstitutions?: InstitutionUncheckedUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutCreatedCompaniesInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdInstitutions?: InstitutionCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedCompaniesInput = {
    id?: string
    username: string
    password: string
    role: $Enums.UserRole
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdInstitutions?: InstitutionUncheckedCreateNestedManyWithoutCreatorInput
    createdMunicipalities?: MunicipalityUncheckedCreateNestedManyWithoutCreatorInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedCompaniesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedCompaniesInput, UserUncheckedCreateWithoutCreatedCompaniesInput>
  }

  export type MunicipalityCreateWithoutCompaniesInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutCreatedMunicipalitiesInput
  }

  export type MunicipalityUncheckedCreateWithoutCompaniesInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MunicipalityCreateOrConnectWithoutCompaniesInput = {
    where: MunicipalityWhereUniqueInput
    create: XOR<MunicipalityCreateWithoutCompaniesInput, MunicipalityUncheckedCreateWithoutCompaniesInput>
  }

  export type JobOfferCreateWithoutCompanyInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationCreateNestedManyWithoutJobOfferInput
    jobQuestions?: JobQuestionCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferUncheckedCreateWithoutCompanyInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: JobApplicationUncheckedCreateNestedManyWithoutJobOfferInput
    jobQuestions?: JobQuestionUncheckedCreateNestedManyWithoutJobOfferInput
  }

  export type JobOfferCreateOrConnectWithoutCompanyInput = {
    where: JobOfferWhereUniqueInput
    create: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput>
  }

  export type JobOfferCreateManyCompanyInputEnvelope = {
    data: JobOfferCreateManyCompanyInput | JobOfferCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutCompanyInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutCompanyInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutCompanyInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput>
  }

  export type ProfileCreateManyCompanyInputEnvelope = {
    data: ProfileCreateManyCompanyInput | ProfileCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreatedCompaniesInput = {
    update: XOR<UserUpdateWithoutCreatedCompaniesInput, UserUncheckedUpdateWithoutCreatedCompaniesInput>
    create: XOR<UserCreateWithoutCreatedCompaniesInput, UserUncheckedCreateWithoutCreatedCompaniesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedCompaniesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedCompaniesInput, UserUncheckedUpdateWithoutCreatedCompaniesInput>
  }

  export type UserUpdateWithoutCreatedCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdInstitutions?: InstitutionUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdInstitutions?: InstitutionUncheckedUpdateManyWithoutCreatorNestedInput
    createdMunicipalities?: MunicipalityUncheckedUpdateManyWithoutCreatorNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type MunicipalityUpsertWithoutCompaniesInput = {
    update: XOR<MunicipalityUpdateWithoutCompaniesInput, MunicipalityUncheckedUpdateWithoutCompaniesInput>
    create: XOR<MunicipalityCreateWithoutCompaniesInput, MunicipalityUncheckedCreateWithoutCompaniesInput>
    where?: MunicipalityWhereInput
  }

  export type MunicipalityUpdateToOneWithWhereWithoutCompaniesInput = {
    where?: MunicipalityWhereInput
    data: XOR<MunicipalityUpdateWithoutCompaniesInput, MunicipalityUncheckedUpdateWithoutCompaniesInput>
  }

  export type MunicipalityUpdateWithoutCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedMunicipalitiesNestedInput
  }

  export type MunicipalityUncheckedUpdateWithoutCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobOfferUpsertWithWhereUniqueWithoutCompanyInput = {
    where: JobOfferWhereUniqueInput
    update: XOR<JobOfferUpdateWithoutCompanyInput, JobOfferUncheckedUpdateWithoutCompanyInput>
    create: XOR<JobOfferCreateWithoutCompanyInput, JobOfferUncheckedCreateWithoutCompanyInput>
  }

  export type JobOfferUpdateWithWhereUniqueWithoutCompanyInput = {
    where: JobOfferWhereUniqueInput
    data: XOR<JobOfferUpdateWithoutCompanyInput, JobOfferUncheckedUpdateWithoutCompanyInput>
  }

  export type JobOfferUpdateManyWithWhereWithoutCompanyInput = {
    where: JobOfferScalarWhereInput
    data: XOR<JobOfferUpdateManyMutationInput, JobOfferUncheckedUpdateManyWithoutCompanyInput>
  }

  export type JobOfferScalarWhereInput = {
    AND?: JobOfferScalarWhereInput | JobOfferScalarWhereInput[]
    OR?: JobOfferScalarWhereInput[]
    NOT?: JobOfferScalarWhereInput | JobOfferScalarWhereInput[]
    id?: StringFilter<"JobOffer"> | string
    title?: StringFilter<"JobOffer"> | string
    description?: StringFilter<"JobOffer"> | string
    requirements?: StringFilter<"JobOffer"> | string
    benefits?: StringNullableFilter<"JobOffer"> | string | null
    salaryMin?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryMax?: DecimalNullableFilter<"JobOffer"> | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: StringNullableFilter<"JobOffer"> | string | null
    contractType?: EnumContractTypeFilter<"JobOffer"> | $Enums.ContractType
    workSchedule?: StringFilter<"JobOffer"> | string
    workModality?: EnumWorkModalityFilter<"JobOffer"> | $Enums.WorkModality
    location?: StringFilter<"JobOffer"> | string
    latitude?: FloatNullableFilter<"JobOffer"> | number | null
    longitude?: FloatNullableFilter<"JobOffer"> | number | null
    images?: StringNullableListFilter<"JobOffer">
    logo?: StringNullableFilter<"JobOffer"> | string | null
    municipality?: StringFilter<"JobOffer"> | string
    department?: StringFilter<"JobOffer"> | string
    experienceLevel?: EnumExperienceLevelFilter<"JobOffer"> | $Enums.ExperienceLevel
    educationRequired?: EnumEducationLevelNullableFilter<"JobOffer"> | $Enums.EducationLevel | null
    skillsRequired?: StringNullableListFilter<"JobOffer">
    desiredSkills?: StringNullableListFilter<"JobOffer">
    applicationDeadline?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    isActive?: BoolFilter<"JobOffer"> | boolean
    status?: EnumJobStatusFilter<"JobOffer"> | $Enums.JobStatus
    viewsCount?: IntFilter<"JobOffer"> | number
    applicationsCount?: IntFilter<"JobOffer"> | number
    featured?: BoolFilter<"JobOffer"> | boolean
    expiresAt?: DateTimeNullableFilter<"JobOffer"> | Date | string | null
    publishedAt?: DateTimeFilter<"JobOffer"> | Date | string
    companyId?: StringFilter<"JobOffer"> | string
    createdAt?: DateTimeFilter<"JobOffer"> | Date | string
    updatedAt?: DateTimeFilter<"JobOffer"> | Date | string
  }

  export type ProfileUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutCompanyInput, ProfileUncheckedUpdateWithoutCompanyInput>
    create: XOR<ProfileCreateWithoutCompanyInput, ProfileUncheckedCreateWithoutCompanyInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutCompanyInput, ProfileUncheckedUpdateWithoutCompanyInput>
  }

  export type ProfileUpdateManyWithWhereWithoutCompanyInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ProfileScalarWhereInput = {
    AND?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    OR?: ProfileScalarWhereInput[]
    NOT?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    id?: StringFilter<"Profile"> | string
    userId?: StringFilter<"Profile"> | string
    avatarUrl?: StringNullableFilter<"Profile"> | string | null
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    active?: BoolFilter<"Profile"> | boolean
    status?: EnumUserStatusFilter<"Profile"> | $Enums.UserStatus
    role?: EnumUserRoleFilter<"Profile"> | $Enums.UserRole
    firstName?: StringNullableFilter<"Profile"> | string | null
    lastName?: StringNullableFilter<"Profile"> | string | null
    email?: StringNullableFilter<"Profile"> | string | null
    phone?: StringNullableFilter<"Profile"> | string | null
    address?: StringNullableFilter<"Profile"> | string | null
    municipality?: StringNullableFilter<"Profile"> | string | null
    department?: StringNullableFilter<"Profile"> | string | null
    country?: StringNullableFilter<"Profile"> | string | null
    birthDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    gender?: StringNullableFilter<"Profile"> | string | null
    documentType?: StringNullableFilter<"Profile"> | string | null
    documentNumber?: StringNullableFilter<"Profile"> | string | null
    educationLevel?: EnumEducationLevelNullableFilter<"Profile"> | $Enums.EducationLevel | null
    currentInstitution?: StringNullableFilter<"Profile"> | string | null
    graduationYear?: IntNullableFilter<"Profile"> | number | null
    isStudying?: BoolNullableFilter<"Profile"> | boolean | null
    educationHistory?: JsonNullableFilter<"Profile">
    currentDegree?: StringNullableFilter<"Profile"> | string | null
    universityName?: StringNullableFilter<"Profile"> | string | null
    universityStartDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityEndDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    universityStatus?: StringNullableFilter<"Profile"> | string | null
    gpa?: FloatNullableFilter<"Profile"> | number | null
    academicAchievements?: JsonNullableFilter<"Profile">
    skills?: StringNullableListFilter<"Profile">
    interests?: StringNullableListFilter<"Profile">
    workExperience?: JsonNullableFilter<"Profile">
    companyName?: StringNullableFilter<"Profile"> | string | null
    taxId?: StringNullableFilter<"Profile"> | string | null
    legalRepresentative?: StringNullableFilter<"Profile"> | string | null
    businessSector?: StringNullableFilter<"Profile"> | string | null
    companySize?: EnumCompanySizeNullableFilter<"Profile"> | $Enums.CompanySize | null
    companyDescription?: StringNullableFilter<"Profile"> | string | null
    website?: StringNullableFilter<"Profile"> | string | null
    foundedYear?: IntNullableFilter<"Profile"> | number | null
    institutionName?: StringNullableFilter<"Profile"> | string | null
    institutionType?: StringNullableFilter<"Profile"> | string | null
    serviceArea?: StringNullableFilter<"Profile"> | string | null
    specialization?: StringNullableListFilter<"Profile">
    institutionDescription?: StringNullableFilter<"Profile"> | string | null
    profileCompletion?: IntFilter<"Profile"> | number
    lastLoginAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    parentalConsent?: BoolFilter<"Profile"> | boolean
    parentEmail?: StringNullableFilter<"Profile"> | string | null
    consentDate?: DateTimeNullableFilter<"Profile"> | Date | string | null
    achievements?: JsonNullableFilter<"Profile">
    jobTitle?: StringNullableFilter<"Profile"> | string | null
    addressLine?: StringNullableFilter<"Profile"> | string | null
    cityState?: StringNullableFilter<"Profile"> | string | null
    languages?: JsonNullableFilter<"Profile">
    websites?: JsonNullableFilter<"Profile">
    skillsWithLevel?: JsonNullableFilter<"Profile">
    extracurricularActivities?: JsonNullableFilter<"Profile">
    projects?: JsonNullableFilter<"Profile">
    coverLetterRecipient?: JsonNullableFilter<"Profile">
    coverLetterSubject?: StringNullableFilter<"Profile"> | string | null
    coverLetterContent?: StringNullableFilter<"Profile"> | string | null
    coverLetterTemplate?: StringNullableFilter<"Profile"> | string | null
    companyId?: StringNullableFilter<"Profile"> | string | null
  }

  export type ProfileCreateWithoutContactsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutContactsInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutContactsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutContactsInput, ProfileUncheckedCreateWithoutContactsInput>
  }

  export type ProfileCreateWithoutContactOfInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutContactOfInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutContactOfInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutContactOfInput, ProfileUncheckedCreateWithoutContactOfInput>
  }

  export type ProfileUpsertWithoutContactsInput = {
    update: XOR<ProfileUpdateWithoutContactsInput, ProfileUncheckedUpdateWithoutContactsInput>
    create: XOR<ProfileCreateWithoutContactsInput, ProfileUncheckedCreateWithoutContactsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutContactsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutContactsInput, ProfileUncheckedUpdateWithoutContactsInput>
  }

  export type ProfileUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUpsertWithoutContactOfInput = {
    update: XOR<ProfileUpdateWithoutContactOfInput, ProfileUncheckedUpdateWithoutContactOfInput>
    create: XOR<ProfileCreateWithoutContactOfInput, ProfileUncheckedCreateWithoutContactOfInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutContactOfInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutContactOfInput, ProfileUncheckedUpdateWithoutContactOfInput>
  }

  export type ProfileUpdateWithoutContactOfInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutContactOfInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type MessageCreateWithoutConversationInput = {
    id?: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
    sender: ProfileCreateNestedOneWithoutSentMessagesInput
    receiver: ProfileCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutConversationInput = {
    id?: string
    senderId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateOrConnectWithoutConversationInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageCreateManyConversationInputEnvelope = {
    data: MessageCreateManyConversationInput | MessageCreateManyConversationInput[]
    skipDuplicates?: boolean
  }

  export type MessageUpsertWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
  }

  export type MessageUpdateManyWithWhereWithoutConversationInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutConversationInput>
  }

  export type ConversationCreateWithoutMessagesInput = {
    id?: string
    participants?: ConversationCreateparticipantsInput | string[]
    lastMessageContent?: string | null
    lastMessageTime?: Date | string | null
    unreadCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConversationUncheckedCreateWithoutMessagesInput = {
    id?: string
    participants?: ConversationCreateparticipantsInput | string[]
    lastMessageContent?: string | null
    lastMessageTime?: Date | string | null
    unreadCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConversationCreateOrConnectWithoutMessagesInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
  }

  export type ProfileCreateWithoutSentMessagesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutSentMessagesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutSentMessagesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutSentMessagesInput, ProfileUncheckedCreateWithoutSentMessagesInput>
  }

  export type ProfileCreateWithoutReceivedMessagesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateCreateNestedManyWithoutStudentInput
  }

  export type ProfileUncheckedCreateWithoutReceivedMessagesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
    moduleCertificates?: ModuleCertificateUncheckedCreateNestedManyWithoutStudentInput
  }

  export type ProfileCreateOrConnectWithoutReceivedMessagesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutReceivedMessagesInput, ProfileUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type ConversationUpsertWithoutMessagesInput = {
    update: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    where?: ConversationWhereInput
  }

  export type ConversationUpdateToOneWithWhereWithoutMessagesInput = {
    where?: ConversationWhereInput
    data: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type ConversationUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    participants?: ConversationUpdateparticipantsInput | string[]
    lastMessageContent?: NullableStringFieldUpdateOperationsInput | string | null
    lastMessageTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unreadCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileUpsertWithoutSentMessagesInput = {
    update: XOR<ProfileUpdateWithoutSentMessagesInput, ProfileUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<ProfileCreateWithoutSentMessagesInput, ProfileUncheckedCreateWithoutSentMessagesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutSentMessagesInput, ProfileUncheckedUpdateWithoutSentMessagesInput>
  }

  export type ProfileUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUpsertWithoutReceivedMessagesInput = {
    update: XOR<ProfileUpdateWithoutReceivedMessagesInput, ProfileUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<ProfileCreateWithoutReceivedMessagesInput, ProfileUncheckedCreateWithoutReceivedMessagesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutReceivedMessagesInput, ProfileUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type ProfileUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type LessonCreateWithoutResourcesInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    discussions?: DiscussionCreateNestedManyWithoutLessonInput
    progress?: LessonProgressCreateNestedManyWithoutLessonInput
    module: CourseModuleCreateNestedOneWithoutLessonsInput
    quizzes?: QuizCreateNestedManyWithoutLessonInput
    notes?: StudentNoteCreateNestedManyWithoutLessonInput
  }

  export type LessonUncheckedCreateWithoutResourcesInput = {
    id?: string
    moduleId: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    discussions?: DiscussionUncheckedCreateNestedManyWithoutLessonInput
    progress?: LessonProgressUncheckedCreateNestedManyWithoutLessonInput
    quizzes?: QuizUncheckedCreateNestedManyWithoutLessonInput
    notes?: StudentNoteUncheckedCreateNestedManyWithoutLessonInput
  }

  export type LessonCreateOrConnectWithoutResourcesInput = {
    where: LessonWhereUniqueInput
    create: XOR<LessonCreateWithoutResourcesInput, LessonUncheckedCreateWithoutResourcesInput>
  }

  export type LessonUpsertWithoutResourcesInput = {
    update: XOR<LessonUpdateWithoutResourcesInput, LessonUncheckedUpdateWithoutResourcesInput>
    create: XOR<LessonCreateWithoutResourcesInput, LessonUncheckedCreateWithoutResourcesInput>
    where?: LessonWhereInput
  }

  export type LessonUpdateToOneWithWhereWithoutResourcesInput = {
    where?: LessonWhereInput
    data: XOR<LessonUpdateWithoutResourcesInput, LessonUncheckedUpdateWithoutResourcesInput>
  }

  export type LessonUpdateWithoutResourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    module?: CourseModuleUpdateOneRequiredWithoutLessonsNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutResourcesInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type CourseModuleCreateWithoutModuleCertificatesInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    course: CourseCreateNestedOneWithoutModulesInput
    lessons?: LessonCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleUncheckedCreateWithoutModuleCertificatesInput = {
    id?: string
    courseId: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
    lessons?: LessonUncheckedCreateNestedManyWithoutModuleInput
  }

  export type CourseModuleCreateOrConnectWithoutModuleCertificatesInput = {
    where: CourseModuleWhereUniqueInput
    create: XOR<CourseModuleCreateWithoutModuleCertificatesInput, CourseModuleUncheckedCreateWithoutModuleCertificatesInput>
  }

  export type ProfileCreateWithoutModuleCertificatesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    contacts?: ContactCreateNestedManyWithoutUserInput
    contactOf?: ContactCreateNestedManyWithoutContactInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    certificates?: CertificateCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentCreateNestedManyWithoutUserInput
    company?: CompanyCreateNestedOneWithoutProfilesInput
    quizAttempts?: QuizAttemptCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutModuleCertificatesInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
    companyId?: string | null
    contacts?: ContactUncheckedCreateNestedManyWithoutUserInput
    contactOf?: ContactUncheckedCreateNestedManyWithoutContactInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    certificates?: CertificateUncheckedCreateNestedManyWithoutUserInput
    courseEnrollments?: CourseEnrollmentUncheckedCreateNestedManyWithoutStudentInput
    instructedCourses?: CourseUncheckedCreateNestedManyWithoutInstructorInput
    discussions?: DiscussionUncheckedCreateNestedManyWithoutUserInput
    entrepreneurships?: EntrepreneurshipUncheckedCreateNestedManyWithoutOwnerInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutApplicantInput
    newsArticles?: NewsArticleUncheckedCreateNestedManyWithoutAuthorInput
    newsComments?: NewsCommentUncheckedCreateNestedManyWithoutUserInput
    quizAttempts?: QuizAttemptUncheckedCreateNestedManyWithoutStudentInput
    studentNotes?: StudentNoteUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutModuleCertificatesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutModuleCertificatesInput, ProfileUncheckedCreateWithoutModuleCertificatesInput>
  }

  export type CourseModuleUpsertWithoutModuleCertificatesInput = {
    update: XOR<CourseModuleUpdateWithoutModuleCertificatesInput, CourseModuleUncheckedUpdateWithoutModuleCertificatesInput>
    create: XOR<CourseModuleCreateWithoutModuleCertificatesInput, CourseModuleUncheckedCreateWithoutModuleCertificatesInput>
    where?: CourseModuleWhereInput
  }

  export type CourseModuleUpdateToOneWithWhereWithoutModuleCertificatesInput = {
    where?: CourseModuleWhereInput
    data: XOR<CourseModuleUpdateWithoutModuleCertificatesInput, CourseModuleUncheckedUpdateWithoutModuleCertificatesInput>
  }

  export type CourseModuleUpdateWithoutModuleCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    course?: CourseUpdateOneRequiredWithoutModulesNestedInput
    lessons?: LessonUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleUncheckedUpdateWithoutModuleCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    lessons?: LessonUncheckedUpdateManyWithoutModuleNestedInput
  }

  export type ProfileUpsertWithoutModuleCertificatesInput = {
    update: XOR<ProfileUpdateWithoutModuleCertificatesInput, ProfileUncheckedUpdateWithoutModuleCertificatesInput>
    create: XOR<ProfileCreateWithoutModuleCertificatesInput, ProfileUncheckedCreateWithoutModuleCertificatesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutModuleCertificatesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutModuleCertificatesInput, ProfileUncheckedUpdateWithoutModuleCertificatesInput>
  }

  export type ProfileUpdateWithoutModuleCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneWithoutProfilesNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutModuleCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ContactCreateManyUserInput = {
    id?: string
    contactId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ContactCreateManyContactInput = {
    id?: string
    userId: string
    status?: $Enums.ContactStatus
    requestMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    conversationId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateManyReceiverInput = {
    id?: string
    conversationId: string
    senderId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type CertificateCreateManyUserInput = {
    id?: string
    courseId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CourseEnrollmentCreateManyStudentInput = {
    id?: string
    courseId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseCreateManyInstructorInput = {
    id?: string
    title: string
    slug: string
    description: string
    shortDescription?: string | null
    thumbnail?: string | null
    videoPreview?: string | null
    objectives?: CourseCreateobjectivesInput | string[]
    prerequisites?: CourseCreateprerequisitesInput | string[]
    duration: number
    level: $Enums.CourseLevel
    category: $Enums.CourseCategory
    isMandatory?: boolean
    isActive?: boolean
    price?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    studentsCount?: number
    completionRate?: Decimal | DecimalJsLike | number | string | null
    totalLessons?: number
    totalQuizzes?: number
    totalResources?: number
    tags?: CourseCreatetagsInput | string[]
    certification?: boolean
    includedMaterials?: CourseCreateincludedMaterialsInput | string[]
    institutionName?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
  }

  export type DiscussionCreateManyUserInput = {
    id?: string
    lessonId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EntrepreneurshipCreateManyOwnerInput = {
    id?: string
    name: string
    description: string
    category: string
    subcategory?: string | null
    businessStage: $Enums.BusinessStage
    logo?: string | null
    images?: EntrepreneurshipCreateimagesInput | string[]
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality: string
    department?: string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: Date | string | null
    employees?: number | null
    annualRevenue?: Decimal | DecimalJsLike | number | string | null
    businessModel?: string | null
    targetMarket?: string | null
    isPublic?: boolean
    isActive?: boolean
    viewsCount?: number
    rating?: Decimal | DecimalJsLike | number | string | null
    reviewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobApplicationCreateManyApplicantInput = {
    id?: string
    jobOfferId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
  }

  export type NewsArticleCreateManyAuthorInput = {
    id?: string
    title: string
    content: string
    summary: string
    imageUrl?: string | null
    videoUrl?: string | null
    authorName: string
    authorType: $Enums.NewsType
    authorLogo?: string | null
    status?: $Enums.NewsStatus
    priority?: $Enums.NewsPriority
    featured?: boolean
    tags?: NewsArticleCreatetagsInput | string[]
    category: string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    targetAudience?: NewsArticleCreatetargetAudienceInput | string[]
    region?: string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsCommentCreateManyUserInput = {
    id?: string
    newsId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QuizAttemptCreateManyStudentInput = {
    id?: string
    enrollmentId?: string | null
    quizId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
  }

  export type StudentNoteCreateManyUserInput = {
    id?: string
    lessonId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ModuleCertificateCreateManyStudentInput = {
    id?: string
    moduleId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type ContactUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ProfileUpdateOneRequiredWithoutContactOfNestedInput
  }

  export type ContactUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: ProfileUpdateOneRequiredWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumContactStatusFieldUpdateOperationsInput | $Enums.ContactStatus
    requestMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    receiver?: ProfileUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    sender?: ProfileUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CertificateUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
    course?: CourseUpdateOneRequiredWithoutCertificatesNestedInput
  }

  export type CertificateUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CertificateUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CourseEnrollmentUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    course?: CourseUpdateOneRequiredWithoutEnrollmentsNestedInput
    lessonProgress?: LessonProgressUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateManyWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseUpdateWithoutInstructorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateWithoutInstructorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    certificates?: CertificateUncheckedUpdateManyWithoutCourseNestedInput
    enrollments?: CourseEnrollmentUncheckedUpdateManyWithoutCourseNestedInput
    modules?: CourseModuleUncheckedUpdateManyWithoutCourseNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateManyWithoutInstructorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    videoPreview?: NullableStringFieldUpdateOperationsInput | string | null
    objectives?: CourseUpdateobjectivesInput | string[]
    prerequisites?: CourseUpdateprerequisitesInput | string[]
    duration?: IntFieldUpdateOperationsInput | number
    level?: EnumCourseLevelFieldUpdateOperationsInput | $Enums.CourseLevel
    category?: EnumCourseCategoryFieldUpdateOperationsInput | $Enums.CourseCategory
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    studentsCount?: IntFieldUpdateOperationsInput | number
    completionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalLessons?: IntFieldUpdateOperationsInput | number
    totalQuizzes?: IntFieldUpdateOperationsInput | number
    totalResources?: IntFieldUpdateOperationsInput | number
    tags?: CourseUpdatetagsInput | string[]
    certification?: BoolFieldUpdateOperationsInput | boolean
    includedMaterials?: CourseUpdateincludedMaterialsInput | string[]
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiscussionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutDiscussionsNestedInput
    parent?: DiscussionUpdateOneWithoutRepliesNestedInput
    replies?: DiscussionUpdateManyWithoutParentNestedInput
  }

  export type DiscussionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: DiscussionUncheckedUpdateManyWithoutParentNestedInput
  }

  export type DiscussionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EntrepreneurshipUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessPlan?: BusinessPlanUpdateOneWithoutEntrepreneurshipNestedInput
  }

  export type EntrepreneurshipUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessPlan?: BusinessPlanUncheckedUpdateOneWithoutEntrepreneurshipNestedInput
  }

  export type EntrepreneurshipUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    businessStage?: EnumBusinessStageFieldUpdateOperationsInput | $Enums.BusinessStage
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: EntrepreneurshipUpdateimagesInput | string[]
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    founded?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employees?: NullableIntFieldUpdateOperationsInput | number | null
    annualRevenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessModel?: NullableStringFieldUpdateOperationsInput | string | null
    targetMarket?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    viewsCount?: IntFieldUpdateOperationsInput | number
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reviewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobApplicationUpdateWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    jobOffer?: JobOfferUpdateOneRequiredWithoutApplicationsNestedInput
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateManyWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobOfferId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NewsArticleUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NewsCommentUpdateManyWithoutNewsNestedInput
  }

  export type NewsArticleUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NewsCommentUncheckedUpdateManyWithoutNewsNestedInput
  }

  export type NewsArticleUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authorName?: StringFieldUpdateOperationsInput | string
    authorType?: EnumNewsTypeFieldUpdateOperationsInput | $Enums.NewsType
    authorLogo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    priority?: EnumNewsPriorityFieldUpdateOperationsInput | $Enums.NewsPriority
    featured?: BoolFieldUpdateOperationsInput | boolean
    tags?: NewsArticleUpdatetagsInput | string[]
    category?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    targetAudience?: NewsArticleUpdatetargetAudienceInput | string[]
    region?: NullableStringFieldUpdateOperationsInput | string | null
    relatedLinks?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    news?: NewsArticleUpdateOneRequiredWithoutCommentsNestedInput
    parent?: NewsCommentUpdateOneWithoutRepliesNestedInput
    replies?: NewsCommentUpdateManyWithoutParentNestedInput
  }

  export type NewsCommentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: NewsCommentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type NewsCommentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QuizAttemptUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutAttemptNestedInput
    enrollment?: CourseEnrollmentUpdateOneWithoutQuizAttemptsNestedInput
    quiz?: QuizUpdateOneRequiredWithoutAttemptsNestedInput
  }

  export type QuizAttemptUncheckedUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    quizId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutAttemptNestedInput
  }

  export type QuizAttemptUncheckedUpdateManyWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    quizId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type StudentNoteUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutNotesNestedInput
  }

  export type StudentNoteUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudentNoteUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    module?: CourseModuleUpdateOneRequiredWithoutModuleCertificatesNestedInput
  }

  export type ModuleCertificateUncheckedUpdateWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateUncheckedUpdateManyWithoutStudentInput = {
    id?: StringFieldUpdateOperationsInput | string
    moduleId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobApplicationCreateManyJobOfferInput = {
    id?: string
    applicantId: string
    coverLetter?: string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: string | null
    coverLetterFile?: string | null
    profileImage?: string | null
    status?: $Enums.ApplicationStatus
    appliedAt?: Date | string
    reviewedAt?: Date | string | null
    notes?: string | null
    rating?: number | null
    decisionReason?: string | null
  }

  export type JobQuestionCreateManyJobOfferInput = {
    id?: string
    question: string
    type: string
    required?: boolean
    options?: JobQuestionCreateoptionsInput | string[]
    orderIndex: number
  }

  export type JobApplicationUpdateWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    applicant?: ProfileUpdateOneRequiredWithoutJobApplicationsNestedInput
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutApplicationNestedInput
    messages?: JobApplicationMessageUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateManyWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: StringFieldUpdateOperationsInput | string
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    cvData?: NullableJsonNullValueInput | InputJsonValue
    cvFile?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterFile?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    appliedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    decisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobQuestionUpdateWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
    questionAnswers?: JobQuestionAnswerUpdateManyWithoutQuestionNestedInput
  }

  export type JobQuestionUncheckedUpdateWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
    questionAnswers?: JobQuestionAnswerUncheckedUpdateManyWithoutQuestionNestedInput
  }

  export type JobQuestionUncheckedUpdateManyWithoutJobOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    options?: JobQuestionUpdateoptionsInput | string[]
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type JobQuestionAnswerCreateManyQuestionInput = {
    id?: string
    applicationId: string
    answer: string
  }

  export type JobQuestionAnswerUpdateWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    application?: JobApplicationUpdateOneRequiredWithoutQuestionAnswersNestedInput
  }

  export type JobQuestionAnswerUncheckedUpdateWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobQuestionAnswerUncheckedUpdateManyWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobQuestionAnswerCreateManyApplicationInput = {
    id?: string
    questionId: string
    answer: string
  }

  export type JobApplicationMessageCreateManyApplicationInput = {
    id?: string
    senderId: string
    senderType: $Enums.SenderType
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type JobQuestionAnswerUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    question?: JobQuestionUpdateOneRequiredWithoutQuestionAnswersNestedInput
  }

  export type JobQuestionAnswerUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobQuestionAnswerUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
  }

  export type JobApplicationMessageUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobApplicationMessageUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobApplicationMessageUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    senderType?: EnumSenderTypeFieldUpdateOperationsInput | $Enums.SenderType
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CertificateCreateManyCourseInput = {
    id?: string
    userId: string
    template?: string
    issuedAt?: Date | string
    verificationCode: string
    digitalSignature: string
    isValid?: boolean
    url?: string | null
  }

  export type CourseEnrollmentCreateManyCourseInput = {
    id?: string
    studentId: string
    enrolledAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    status?: $Enums.EnrollmentStatus
    progress?: Decimal | DecimalJsLike | number | string
    currentModuleId?: string | null
    currentLessonId?: string | null
    certificateUrl?: string | null
    timeSpent?: number
    certificateIssued?: boolean
    finalGrade?: number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseModuleCreateManyCourseInput = {
    id?: string
    title: string
    description?: string | null
    orderIndex: number
    estimatedDuration: number
    isLocked?: boolean
    prerequisites?: CourseModuleCreateprerequisitesInput | string[]
    hasCertificate?: boolean
    certificateTemplate?: string | null
  }

  export type QuizCreateManyCourseInput = {
    id?: string
    lessonId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
  }

  export type CertificateUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
    user?: ProfileUpdateOneRequiredWithoutCertificatesNestedInput
  }

  export type CertificateUncheckedUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CertificateUncheckedUpdateManyWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    template?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationCode?: StringFieldUpdateOperationsInput | string
    digitalSignature?: StringFieldUpdateOperationsInput | string
    isValid?: BoolFieldUpdateOperationsInput | boolean
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CourseEnrollmentUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    student?: ProfileUpdateOneRequiredWithoutCourseEnrollmentsNestedInput
    lessonProgress?: LessonProgressUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
    lessonProgress?: LessonProgressUncheckedUpdateManyWithoutEnrollmentNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutEnrollmentNestedInput
  }

  export type CourseEnrollmentUncheckedUpdateManyWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    enrolledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    progress?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currentModuleId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLessonId?: NullableStringFieldUpdateOperationsInput | string | null
    certificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    certificateIssued?: BoolFieldUpdateOperationsInput | boolean
    finalGrade?: NullableIntFieldUpdateOperationsInput | number | null
    moduleProgress?: NullableJsonNullValueInput | InputJsonValue
    quizResults?: NullableJsonNullValueInput | InputJsonValue
  }

  export type CourseModuleUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    lessons?: LessonUpdateManyWithoutModuleNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleUncheckedUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    lessons?: LessonUncheckedUpdateManyWithoutModuleNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutModuleNestedInput
  }

  export type CourseModuleUncheckedUpdateManyWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    prerequisites?: CourseModuleUpdateprerequisitesInput | string[]
    hasCertificate?: BoolFieldUpdateOperationsInput | boolean
    certificateTemplate?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type QuizUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUpdateManyWithoutQuizNestedInput
    lesson?: LessonUpdateOneWithoutQuizzesNestedInput
  }

  export type QuizUncheckedUpdateWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUncheckedUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type QuizUncheckedUpdateManyWithoutCourseInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LessonCreateManyModuleInput = {
    id?: string
    title: string
    description?: string | null
    content: string
    contentType: $Enums.LessonType
    videoUrl?: string | null
    duration?: number | null
    orderIndex: number
    isRequired?: boolean
    isPreview?: boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ModuleCertificateCreateManyModuleInput = {
    id?: string
    studentId: string
    certificateUrl: string
    issuedAt?: Date | string
    grade?: number | null
    completedAt: Date | string
  }

  export type LessonUpdateWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
    resources?: LessonResourceUncheckedUpdateManyWithoutLessonNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutLessonNestedInput
    progress?: LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
    quizzes?: QuizUncheckedUpdateManyWithoutLessonNestedInput
    notes?: StudentNoteUncheckedUpdateManyWithoutLessonNestedInput
  }

  export type LessonUncheckedUpdateManyWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    contentType?: EnumLessonTypeFieldUpdateOperationsInput | $Enums.LessonType
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isPreview?: BoolFieldUpdateOperationsInput | boolean
    attachments?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ModuleCertificateUpdateWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    student?: ProfileUpdateOneRequiredWithoutModuleCertificatesNestedInput
  }

  export type ModuleCertificateUncheckedUpdateWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModuleCertificateUncheckedUpdateManyWithoutModuleInput = {
    id?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    certificateUrl?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: NullableIntFieldUpdateOperationsInput | number | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonResourceCreateManyLessonInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.ResourceType
    url: string
    filePath?: string | null
    fileSize?: number | null
    orderIndex: number
    isDownloadable?: boolean
    createdAt?: Date | string
  }

  export type DiscussionCreateManyLessonInput = {
    id?: string
    userId: string
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LessonProgressCreateManyLessonInput = {
    id?: string
    enrollmentId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type QuizCreateManyLessonInput = {
    id?: string
    courseId?: string | null
    title: string
    description?: string | null
    timeLimit?: number | null
    passingScore?: number
    showCorrectAnswers?: boolean
    isActive?: boolean
  }

  export type StudentNoteCreateManyLessonInput = {
    id?: string
    userId: string
    content: string
    timestamp?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LessonResourceUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonResourceUncheckedUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonResourceUncheckedUpdateManyWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumResourceTypeFieldUpdateOperationsInput | $Enums.ResourceType
    url?: StringFieldUpdateOperationsInput | string
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    orderIndex?: IntFieldUpdateOperationsInput | number
    isDownloadable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscussionUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DiscussionUpdateOneWithoutRepliesNestedInput
    replies?: DiscussionUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutDiscussionsNestedInput
  }

  export type DiscussionUncheckedUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: DiscussionUncheckedUpdateManyWithoutParentNestedInput
  }

  export type DiscussionUncheckedUpdateManyWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonProgressUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    enrollment?: CourseEnrollmentUpdateOneRequiredWithoutLessonProgressNestedInput
  }

  export type LessonProgressUncheckedUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LessonProgressUncheckedUpdateManyWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type QuizUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUpdateManyWithoutQuizNestedInput
    course?: CourseUpdateOneWithoutQuizzesNestedInput
  }

  export type QuizUncheckedUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attempts?: QuizAttemptUncheckedUpdateManyWithoutQuizNestedInput
    questions?: QuizQuestionUncheckedUpdateManyWithoutQuizNestedInput
  }

  export type QuizUncheckedUpdateManyWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    courseId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    timeLimit?: NullableIntFieldUpdateOperationsInput | number | null
    passingScore?: IntFieldUpdateOperationsInput | number
    showCorrectAnswers?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StudentNoteUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: ProfileUpdateOneRequiredWithoutStudentNotesNestedInput
  }

  export type StudentNoteUncheckedUpdateWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudentNoteUncheckedUpdateManyWithoutLessonInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LessonProgressCreateManyEnrollmentInput = {
    id?: string
    lessonId: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    timeSpent?: number
    videoProgress?: number
    lastWatchedAt?: Date | string | null
  }

  export type QuizAttemptCreateManyEnrollmentInput = {
    id?: string
    quizId: string
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
  }

  export type LessonProgressUpdateWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lesson?: LessonUpdateOneRequiredWithoutProgressNestedInput
  }

  export type LessonProgressUncheckedUpdateWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LessonProgressUncheckedUpdateManyWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    videoProgress?: FloatFieldUpdateOperationsInput | number
    lastWatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type QuizAttemptUpdateWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutAttemptNestedInput
    quiz?: QuizUpdateOneRequiredWithoutAttemptsNestedInput
    student?: ProfileUpdateOneRequiredWithoutQuizAttemptsNestedInput
  }

  export type QuizAttemptUncheckedUpdateWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    quizId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutAttemptNestedInput
  }

  export type QuizAttemptUncheckedUpdateManyWithoutEnrollmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    quizId?: StringFieldUpdateOperationsInput | string
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAttemptCreateManyQuizInput = {
    id?: string
    enrollmentId?: string | null
    studentId: string
    startedAt?: Date | string
    completedAt?: Date | string | null
    score?: number | null
    passed?: boolean | null
    timeSpent?: number
  }

  export type QuizQuestionCreateManyQuizInput = {
    id?: string
    question: string
    type: $Enums.QuestionType
    options?: QuizQuestionCreateoptionsInput | string[]
    correctAnswer: string
    explanation?: string | null
    points?: number
    orderIndex: number
  }

  export type QuizAttemptUpdateWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutAttemptNestedInput
    enrollment?: CourseEnrollmentUpdateOneWithoutQuizAttemptsNestedInput
    student?: ProfileUpdateOneRequiredWithoutQuizAttemptsNestedInput
  }

  export type QuizAttemptUncheckedUpdateWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutAttemptNestedInput
  }

  export type QuizAttemptUncheckedUpdateManyWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    enrollmentId?: NullableStringFieldUpdateOperationsInput | string | null
    studentId?: StringFieldUpdateOperationsInput | string
    startedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    score?: NullableIntFieldUpdateOperationsInput | number | null
    passed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizQuestionUpdateWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUpdateManyWithoutQuestionNestedInput
  }

  export type QuizQuestionUncheckedUpdateWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
    answers?: QuizAnswerUncheckedUpdateManyWithoutQuestionNestedInput
  }

  export type QuizQuestionUncheckedUpdateManyWithoutQuizInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    type?: EnumQuestionTypeFieldUpdateOperationsInput | $Enums.QuestionType
    options?: QuizQuestionUpdateoptionsInput | string[]
    correctAnswer?: StringFieldUpdateOperationsInput | string
    explanation?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    orderIndex?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerCreateManyQuestionInput = {
    id?: string
    attemptId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerUpdateWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
    attempt?: QuizAttemptUpdateOneRequiredWithoutAnswersNestedInput
  }

  export type QuizAnswerUncheckedUpdateWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    attemptId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerUncheckedUpdateManyWithoutQuestionInput = {
    id?: StringFieldUpdateOperationsInput | string
    attemptId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerCreateManyAttemptInput = {
    id?: string
    questionId: string
    answer: string
    isCorrect?: boolean
    timeSpent?: number
  }

  export type QuizAnswerUpdateWithoutAttemptInput = {
    id?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
    question?: QuizQuestionUpdateOneRequiredWithoutAnswersNestedInput
  }

  export type QuizAnswerUncheckedUpdateWithoutAttemptInput = {
    id?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type QuizAnswerUncheckedUpdateManyWithoutAttemptInput = {
    id?: StringFieldUpdateOperationsInput | string
    questionId?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    isCorrect?: BoolFieldUpdateOperationsInput | boolean
    timeSpent?: IntFieldUpdateOperationsInput | number
  }

  export type DiscussionCreateManyParentInput = {
    id?: string
    lessonId: string
    userId: string
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DiscussionUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lesson?: LessonUpdateOneRequiredWithoutDiscussionsNestedInput
    replies?: DiscussionUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutDiscussionsNestedInput
  }

  export type DiscussionUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: DiscussionUncheckedUpdateManyWithoutParentNestedInput
  }

  export type DiscussionUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    lessonId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentCreateManyNewsInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    parentId?: string | null
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsCommentUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: NewsCommentUpdateOneWithoutRepliesNestedInput
    replies?: NewsCommentUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutNewsCommentsNestedInput
  }

  export type NewsCommentUncheckedUpdateWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: NewsCommentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type NewsCommentUncheckedUpdateManyWithoutNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsCommentCreateManyParentInput = {
    id?: string
    newsId: string
    userId: string
    userName: string
    userAvatar?: string | null
    content: string
    likes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsCommentUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    news?: NewsArticleUpdateOneRequiredWithoutCommentsNestedInput
    replies?: NewsCommentUpdateManyWithoutParentNestedInput
    user?: ProfileUpdateOneRequiredWithoutNewsCommentsNestedInput
  }

  export type NewsCommentUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: NewsCommentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type NewsCommentUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    newsId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    likes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateManyCreatorInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    municipalityId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InstitutionCreateManyCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MunicipalityCreateManyCreatorInput = {
    id?: string
    name: string
    department: string
    region?: string | null
    population?: number | null
    mayorName?: string | null
    mayorEmail?: string | null
    mayorPhone?: string | null
    address?: string | null
    website?: string | null
    isActive?: boolean
    username: string
    password: string
    email: string
    phone?: string | null
    institutionType?: $Enums.InstitutionType
    customType?: string | null
    primaryColor?: string | null
    secondaryColor?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    revoked?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompanyUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    municipality?: MunicipalityUpdateOneRequiredWithoutCompaniesNestedInput
    jobOffers?: JobOfferUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobOffers?: JobOfferUncheckedUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    municipalityId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MunicipalityUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companies?: CompanyUpdateManyWithoutMunicipalityNestedInput
  }

  export type MunicipalityUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companies?: CompanyUncheckedUpdateManyWithoutMunicipalityNestedInput
  }

  export type MunicipalityUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    mayorName?: NullableStringFieldUpdateOperationsInput | string | null
    mayorEmail?: NullableStringFieldUpdateOperationsInput | string | null
    mayorPhone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: EnumInstitutionTypeFieldUpdateOperationsInput | $Enums.InstitutionType
    customType?: NullableStringFieldUpdateOperationsInput | string | null
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateManyMunicipalityInput = {
    id?: string
    name: string
    description?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    website?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    foundedYear?: number | null
    isActive?: boolean
    username: string
    password: string
    loginEmail: string
    createdBy: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompanyUpdateWithoutMunicipalityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreatedCompaniesNestedInput
    jobOffers?: JobOfferUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMunicipalityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jobOffers?: JobOfferUncheckedUpdateManyWithoutCompanyNestedInput
    profiles?: ProfileUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateManyWithoutMunicipalityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    loginEmail?: StringFieldUpdateOperationsInput | string
    createdBy?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobOfferCreateManyCompanyInput = {
    id?: string
    title: string
    description: string
    requirements: string
    benefits?: string | null
    salaryMin?: Decimal | DecimalJsLike | number | string | null
    salaryMax?: Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: string | null
    contractType: $Enums.ContractType
    workSchedule: string
    workModality: $Enums.WorkModality
    location: string
    latitude?: number | null
    longitude?: number | null
    images?: JobOfferCreateimagesInput | string[]
    logo?: string | null
    municipality: string
    department?: string
    experienceLevel: $Enums.ExperienceLevel
    educationRequired?: $Enums.EducationLevel | null
    skillsRequired?: JobOfferCreateskillsRequiredInput | string[]
    desiredSkills?: JobOfferCreatedesiredSkillsInput | string[]
    applicationDeadline?: Date | string | null
    isActive?: boolean
    status?: $Enums.JobStatus
    viewsCount?: number
    applicationsCount?: number
    featured?: boolean
    expiresAt?: Date | string | null
    publishedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProfileCreateManyCompanyInput = {
    id?: string
    userId: string
    avatarUrl?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    active?: boolean
    status?: $Enums.UserStatus
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    phone?: string | null
    address?: string | null
    municipality?: string | null
    department?: string | null
    country?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    documentType?: string | null
    documentNumber?: string | null
    educationLevel?: $Enums.EducationLevel | null
    currentInstitution?: string | null
    graduationYear?: number | null
    isStudying?: boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: string | null
    universityName?: string | null
    universityStartDate?: Date | string | null
    universityEndDate?: Date | string | null
    universityStatus?: string | null
    gpa?: number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileCreateskillsInput | string[]
    interests?: ProfileCreateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: string | null
    taxId?: string | null
    legalRepresentative?: string | null
    businessSector?: string | null
    companySize?: $Enums.CompanySize | null
    companyDescription?: string | null
    website?: string | null
    foundedYear?: number | null
    institutionName?: string | null
    institutionType?: string | null
    serviceArea?: string | null
    specialization?: ProfileCreatespecializationInput | string[]
    institutionDescription?: string | null
    profileCompletion?: number
    lastLoginAt?: Date | string | null
    parentalConsent?: boolean
    parentEmail?: string | null
    consentDate?: Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: string | null
    addressLine?: string | null
    cityState?: string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: string | null
    coverLetterContent?: string | null
    coverLetterTemplate?: string | null
  }

  export type JobOfferUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUpdateManyWithoutJobOfferNestedInput
    jobQuestions?: JobQuestionUpdateManyWithoutJobOfferNestedInput
  }

  export type JobOfferUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: JobApplicationUncheckedUpdateManyWithoutJobOfferNestedInput
    jobQuestions?: JobQuestionUncheckedUpdateManyWithoutJobOfferNestedInput
  }

  export type JobOfferUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    requirements?: StringFieldUpdateOperationsInput | string
    benefits?: NullableStringFieldUpdateOperationsInput | string | null
    salaryMin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryMax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salaryCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: EnumContractTypeFieldUpdateOperationsInput | $Enums.ContractType
    workSchedule?: StringFieldUpdateOperationsInput | string
    workModality?: EnumWorkModalityFieldUpdateOperationsInput | $Enums.WorkModality
    location?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    images?: JobOfferUpdateimagesInput | string[]
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    experienceLevel?: EnumExperienceLevelFieldUpdateOperationsInput | $Enums.ExperienceLevel
    educationRequired?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    skillsRequired?: JobOfferUpdateskillsRequiredInput | string[]
    desiredSkills?: JobOfferUpdatedesiredSkillsInput | string[]
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumJobStatusFieldUpdateOperationsInput | $Enums.JobStatus
    viewsCount?: IntFieldUpdateOperationsInput | number
    applicationsCount?: IntFieldUpdateOperationsInput | number
    featured?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUpdateManyWithoutUserNestedInput
    contactOf?: ContactUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    contacts?: ContactUncheckedUpdateManyWithoutUserNestedInput
    contactOf?: ContactUncheckedUpdateManyWithoutContactNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    certificates?: CertificateUncheckedUpdateManyWithoutUserNestedInput
    courseEnrollments?: CourseEnrollmentUncheckedUpdateManyWithoutStudentNestedInput
    instructedCourses?: CourseUncheckedUpdateManyWithoutInstructorNestedInput
    discussions?: DiscussionUncheckedUpdateManyWithoutUserNestedInput
    entrepreneurships?: EntrepreneurshipUncheckedUpdateManyWithoutOwnerNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    newsArticles?: NewsArticleUncheckedUpdateManyWithoutAuthorNestedInput
    newsComments?: NewsCommentUncheckedUpdateManyWithoutUserNestedInput
    quizAttempts?: QuizAttemptUncheckedUpdateManyWithoutStudentNestedInput
    studentNotes?: StudentNoteUncheckedUpdateManyWithoutUserNestedInput
    moduleCertificates?: ModuleCertificateUncheckedUpdateManyWithoutStudentNestedInput
  }

  export type ProfileUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    municipality?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    educationLevel?: NullableEnumEducationLevelFieldUpdateOperationsInput | $Enums.EducationLevel | null
    currentInstitution?: NullableStringFieldUpdateOperationsInput | string | null
    graduationYear?: NullableIntFieldUpdateOperationsInput | number | null
    isStudying?: NullableBoolFieldUpdateOperationsInput | boolean | null
    educationHistory?: NullableJsonNullValueInput | InputJsonValue
    currentDegree?: NullableStringFieldUpdateOperationsInput | string | null
    universityName?: NullableStringFieldUpdateOperationsInput | string | null
    universityStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    universityStatus?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableFloatFieldUpdateOperationsInput | number | null
    academicAchievements?: NullableJsonNullValueInput | InputJsonValue
    skills?: ProfileUpdateskillsInput | string[]
    interests?: ProfileUpdateinterestsInput | string[]
    workExperience?: NullableJsonNullValueInput | InputJsonValue
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    legalRepresentative?: NullableStringFieldUpdateOperationsInput | string | null
    businessSector?: NullableStringFieldUpdateOperationsInput | string | null
    companySize?: NullableEnumCompanySizeFieldUpdateOperationsInput | $Enums.CompanySize | null
    companyDescription?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    foundedYear?: NullableIntFieldUpdateOperationsInput | number | null
    institutionName?: NullableStringFieldUpdateOperationsInput | string | null
    institutionType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceArea?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: ProfileUpdatespecializationInput | string[]
    institutionDescription?: NullableStringFieldUpdateOperationsInput | string | null
    profileCompletion?: IntFieldUpdateOperationsInput | number
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parentalConsent?: BoolFieldUpdateOperationsInput | boolean
    parentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    consentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    achievements?: NullableJsonNullValueInput | InputJsonValue
    jobTitle?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine?: NullableStringFieldUpdateOperationsInput | string | null
    cityState?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableJsonNullValueInput | InputJsonValue
    websites?: NullableJsonNullValueInput | InputJsonValue
    skillsWithLevel?: NullableJsonNullValueInput | InputJsonValue
    extracurricularActivities?: NullableJsonNullValueInput | InputJsonValue
    projects?: NullableJsonNullValueInput | InputJsonValue
    coverLetterRecipient?: NullableJsonNullValueInput | InputJsonValue
    coverLetterSubject?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterContent?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetterTemplate?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessageCreateManyConversationInput = {
    id?: string
    senderId: string
    receiverId: string
    content: string
    messageType?: $Enums.MessageType
    status?: $Enums.MessageStatus
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sender?: ProfileUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: ProfileUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ProfileCountOutputTypeDefaultArgs instead
     */
    export type ProfileCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfileCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobOfferCountOutputTypeDefaultArgs instead
     */
    export type JobOfferCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobOfferCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobQuestionCountOutputTypeDefaultArgs instead
     */
    export type JobQuestionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobQuestionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobApplicationCountOutputTypeDefaultArgs instead
     */
    export type JobApplicationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobApplicationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseCountOutputTypeDefaultArgs instead
     */
    export type CourseCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseModuleCountOutputTypeDefaultArgs instead
     */
    export type CourseModuleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseModuleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LessonCountOutputTypeDefaultArgs instead
     */
    export type LessonCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LessonCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseEnrollmentCountOutputTypeDefaultArgs instead
     */
    export type CourseEnrollmentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseEnrollmentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizCountOutputTypeDefaultArgs instead
     */
    export type QuizCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizQuestionCountOutputTypeDefaultArgs instead
     */
    export type QuizQuestionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizQuestionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizAttemptCountOutputTypeDefaultArgs instead
     */
    export type QuizAttemptCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizAttemptCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DiscussionCountOutputTypeDefaultArgs instead
     */
    export type DiscussionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DiscussionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsArticleCountOutputTypeDefaultArgs instead
     */
    export type NewsArticleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsArticleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsCommentCountOutputTypeDefaultArgs instead
     */
    export type NewsCommentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsCommentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipalityCountOutputTypeDefaultArgs instead
     */
    export type MunicipalityCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipalityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConversationCountOutputTypeDefaultArgs instead
     */
    export type ConversationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConversationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProfileDefaultArgs instead
     */
    export type ProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfileDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobOfferDefaultArgs instead
     */
    export type JobOfferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobOfferDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobQuestionDefaultArgs instead
     */
    export type JobQuestionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobQuestionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobApplicationDefaultArgs instead
     */
    export type JobApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobApplicationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobQuestionAnswerDefaultArgs instead
     */
    export type JobQuestionAnswerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobQuestionAnswerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobApplicationMessageDefaultArgs instead
     */
    export type JobApplicationMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobApplicationMessageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseDefaultArgs instead
     */
    export type CourseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseModuleDefaultArgs instead
     */
    export type CourseModuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseModuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LessonDefaultArgs instead
     */
    export type LessonArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LessonDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourseEnrollmentDefaultArgs instead
     */
    export type CourseEnrollmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourseEnrollmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LessonProgressDefaultArgs instead
     */
    export type LessonProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LessonProgressDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizDefaultArgs instead
     */
    export type QuizArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizQuestionDefaultArgs instead
     */
    export type QuizQuestionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizQuestionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizAttemptDefaultArgs instead
     */
    export type QuizAttemptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizAttemptDefaultArgs<ExtArgs>
    /**
     * @deprecated Use QuizAnswerDefaultArgs instead
     */
    export type QuizAnswerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = QuizAnswerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CertificateDefaultArgs instead
     */
    export type CertificateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CertificateDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StudentNoteDefaultArgs instead
     */
    export type StudentNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StudentNoteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DiscussionDefaultArgs instead
     */
    export type DiscussionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DiscussionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntrepreneurshipDefaultArgs instead
     */
    export type EntrepreneurshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EntrepreneurshipDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BusinessPlanDefaultArgs instead
     */
    export type BusinessPlanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BusinessPlanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsArticleDefaultArgs instead
     */
    export type NewsArticleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsArticleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsCommentDefaultArgs instead
     */
    export type NewsCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsCommentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ResourceDefaultArgs instead
     */
    export type ResourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ResourceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RefreshTokenDefaultArgs instead
     */
    export type RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ExternalApiKeyDefaultArgs instead
     */
    export type ExternalApiKeyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ExternalApiKeyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InstitutionDefaultArgs instead
     */
    export type InstitutionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InstitutionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipalityDefaultArgs instead
     */
    export type MunicipalityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipalityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyDefaultArgs instead
     */
    export type CompanyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContactDefaultArgs instead
     */
    export type ContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContactDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConversationDefaultArgs instead
     */
    export type ConversationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConversationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessageDefaultArgs instead
     */
    export type MessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LessonResourceDefaultArgs instead
     */
    export type LessonResourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LessonResourceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModuleCertificateDefaultArgs instead
     */
    export type ModuleCertificateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModuleCertificateDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}