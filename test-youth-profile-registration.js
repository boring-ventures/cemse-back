const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testYouthProfileRegistration() {
  try {
    console.log('üöÄ Probando registro de perfil de joven...\n');

    // Datos de prueba para el registro
    const youthData = {
      username: 'joven_test_' + Date.now(),
      password: 'password123',
      firstName: 'Mar√≠a',
      lastName: 'Gonz√°lez',
      email: `maria.gonzalez.${Date.now()}@test.com`,
      phone: '+591 70012345',
      address: 'Calle Principal 123',
      municipality: 'Cochabamba',
      department: 'Cochabamba',
      country: 'Bolivia',
      birthDate: '2006-03-15',
      gender: 'Femenino',
      documentType: 'CI',
      documentNumber: '12345678',
      educationLevel: 'SECONDARY',
      currentInstitution: 'Colegio Mar√≠a Auxiliadora',
      graduationYear: 2024,
      isStudying: true,
      currentDegree: 'Bachiller en Ciencias',
      universityName: 'Universidad de Cochabamba',
      skills: ['Python', 'Matem√°ticas', 'Ingl√©s', 'Dibujo'],
      interests: ['Ciencia', 'Matem√°ticas', 'Arte', 'Tecnolog√≠a'],
      parentalConsent: true,
      parentEmail: 'padres.gonzalez@test.com'
    };

    console.log('üìù Datos de registro:');
    console.log(JSON.stringify(youthData, null, 2));
    console.log('\n');

    // 1. Registrar perfil de joven
    console.log('1Ô∏è‚É£ Registrando perfil de joven...');
    const registrationResponse = await axios.post(`${API_BASE_URL}/youth-profile/register`, youthData);
    
    console.log('‚úÖ Registro exitoso!');
    console.log('Usuario creado:', registrationResponse.data.user);
    console.log('Perfil creado:', registrationResponse.data.profile);
    console.log('Token recibido:', registrationResponse.data.token.substring(0, 50) + '...');
    console.log('\n');

    const { user, profile, token } = registrationResponse.data;

    // 2. Obtener perfil usando el token
    console.log('2Ô∏è‚É£ Obteniendo perfil con autenticaci√≥n...');
    const profileResponse = await axios.get(`${API_BASE_URL}/youth-profile/${user.id}`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    console.log('‚úÖ Perfil obtenido exitosamente!');
    console.log('Datos completos del perfil:', JSON.stringify(profileResponse.data, null, 2));
    console.log('\n');

    // 3. Actualizar perfil
    console.log('3Ô∏è‚É£ Actualizando perfil...');
    const updateData = {
      firstName: 'Mar√≠a Elena',
      lastName: 'Gonz√°lez Rodr√≠guez',
      phone: '+591 70054321',
      address: 'Avenida Libertad 456',
      skills: ['Python', 'Matem√°ticas', 'Ingl√©s', 'Dibujo', 'Programaci√≥n'],
      interests: ['Ciencia', 'Matem√°ticas', 'Arte', 'Tecnolog√≠a', 'Rob√≥tica'],
      currentDegree: 'Bachiller en Ciencias con especializaci√≥n en Matem√°ticas'
    };

    const updateResponse = await axios.put(`${API_BASE_URL}/youth-profile/${user.id}`, updateData, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Perfil actualizado exitosamente!');
    console.log('Datos actualizados:', JSON.stringify(updateResponse.data, null, 2));
    console.log('\n');

    // 4. Crear una postulaci√≥n usando el perfil
    console.log('4Ô∏è‚É£ Creando postulaci√≥n usando el perfil...');
    const applicationData = {
      title: 'Desarrolladora Frontend Junior',
      description: 'Soy una desarrolladora frontend con experiencia en Python y matem√°ticas. Me apasiona la tecnolog√≠a y el arte.',
      youthProfileId: user.id,
      isPublic: true
    };

    const applicationResponse = await axios.post(`${API_BASE_URL}/youthapplication`, applicationData, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Postulaci√≥n creada exitosamente!');
    console.log('Postulaci√≥n:', JSON.stringify(applicationResponse.data, null, 2));
    console.log('\n');

    console.log('üéâ ¬°Todas las pruebas completadas exitosamente!');
    console.log('\nüìã Resumen:');
    console.log(`- Usuario creado: ${user.username}`);
    console.log(`- Perfil ID: ${profile.id}`);
    console.log(`- Postulaci√≥n ID: ${applicationResponse.data.id}`);
    console.log(`- Token v√°lido: ${token.substring(0, 20)}...`);

  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.response?.data || error.message);
    
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Headers:', error.response.headers);
      console.error('Data:', error.response.data);
    }
  }
}

// Ejecutar las pruebas
testYouthProfileRegistration();
