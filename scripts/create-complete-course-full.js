const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function createCompleteCourseFull() {
  try {
    console.log('üéì Creando curso completo con todos los campos...\n');

    // 1. Crear el curso principal con todos los campos
    console.log('üìö Creando curso: "Desarrollo Web Full Stack"');
    const course = await prisma.course.create({
      data: {
        title: "Desarrollo Web Full Stack",
        slug: "desarrollo-web-fullstack-completo",
        description: "Aprende a crear aplicaciones web completas desde cero. Este curso te llevar√° desde los fundamentos del desarrollo web hasta la creaci√≥n de aplicaciones full stack modernas y escalables. Cubriremos HTML, CSS, JavaScript, React, Node.js, Express, bases de datos y despliegue en producci√≥n.",
        shortDescription: "Curso completo de desarrollo web full stack para principiantes e intermedios",
        thumbnail: "https://example.com/images/fullstack-course.jpg",
        videoPreview: "https://example.com/videos/fullstack-preview.mp4",
        objectives: [
          "Dominar HTML5, CSS3 y JavaScript moderno",
          "Crear aplicaciones React responsivas y escalables",
          "Desarrollar APIs RESTful con Node.js y Express",
          "Trabajar con bases de datos SQL y NoSQL",
          "Implementar autenticaci√≥n y autorizaci√≥n",
          "Desplegar aplicaciones en servicios cloud",
          "Aplicar mejores pr√°cticas de desarrollo",
          "Trabajar con control de versiones Git"
        ],
        prerequisites: [
          "Conocimientos b√°sicos de inform√°tica",
          "Comprensi√≥n de conceptos b√°sicos de programaci√≥n",
          "Disposici√≥n para aprender y practicar",
          "Computadora con acceso a internet"
        ],
        duration: 80, // horas
        level: "INTERMEDIATE",
        category: "TECHNICAL_SKILLS",
        isMandatory: false,
        isActive: true,
        price: 0,
        rating: 4.9,
        studentsCount: 0,
        completionRate: 0,
        totalLessons: 0,
        totalQuizzes: 0,
        totalResources: 0,
        tags: ["fullstack", "web", "javascript", "react", "nodejs", "express", "database", "api"],
        certification: true,
        includedMaterials: [
          "C√≥digo fuente completo de todos los proyectos",
          "Presentaciones en PDF de cada m√≥dulo",
          "Ejercicios pr√°cticos con soluciones",
          "Proyecto final completo",
          "Certificado de finalizaci√≥n",
          "Acceso a comunidad de estudiantes",
          "Soporte t√©cnico durante 6 meses",
          "Recursos adicionales y bibliograf√≠a"
        ],
        institutionName: "Academia de Desarrollo Web Full Stack",
        publishedAt: new Date()
      }
    });

    console.log(`‚úÖ Curso creado: ${course.title} (ID: ${course.id})`);

    // 2. Crear m√≥dulos completos
    const modules = [
      {
        title: "Fundamentos del Desarrollo Web",
        description: "Introducci√≥n a los conceptos b√°sicos del desarrollo web, HTML5, CSS3 y JavaScript moderno",
        orderIndex: 1,
        estimatedDuration: 12,
        isLocked: false,
        prerequisites: []
      },
      {
        title: "JavaScript Avanzado y ES6+",
        description: "Profundiza en JavaScript moderno, incluyendo ES6+, async/await, m√≥dulos y programaci√≥n funcional",
        orderIndex: 2,
        estimatedDuration: 15,
        isLocked: false,
        prerequisites: ["Fundamentos del Desarrollo Web"]
      },
      {
        title: "React.js - Frontend Moderno",
        description: "Aprende React desde cero: componentes, hooks, estado, routing y gesti√≥n de estado global",
        orderIndex: 3,
        estimatedDuration: 20,
        isLocked: false,
        prerequisites: ["JavaScript Avanzado y ES6+"]
      },
      {
        title: "Node.js y Express.js",
        description: "Desarrollo backend con Node.js, Express.js, middleware, routing y APIs RESTful",
        orderIndex: 4,
        estimatedDuration: 18,
        isLocked: false,
        prerequisites: ["JavaScript Avanzado y ES6+"]
      },
      {
        title: "Bases de Datos y ORM",
        description: "Trabajo con bases de datos SQL y NoSQL, Prisma ORM, y gesti√≥n de datos",
        orderIndex: 5,
        estimatedDuration: 10,
        isLocked: false,
        prerequisites: ["Node.js y Express.js"]
      },
      {
        title: "Autenticaci√≥n y Seguridad",
        description: "Implementaci√≥n de autenticaci√≥n JWT, autorizaci√≥n, validaci√≥n y seguridad web",
        orderIndex: 6,
        estimatedDuration: 8,
        isLocked: false,
        prerequisites: ["Bases de Datos y ORM"]
      },
      {
        title: "Despliegue y DevOps",
        description: "Despliegue de aplicaciones en producci√≥n, CI/CD, Docker y servicios cloud",
        orderIndex: 7,
        estimatedDuration: 7,
        isLocked: false,
        prerequisites: ["Autenticaci√≥n y Seguridad"]
      },
      {
        title: "Proyecto Final Integrador",
        description: "Aplicaci√≥n completa full stack que integra todos los conocimientos adquiridos",
        orderIndex: 8,
        estimatedDuration: 25,
        isLocked: false,
        prerequisites: ["Despliegue y DevOps"]
      }
    ];

    const createdModules = [];
    for (const moduleData of modules) {
      const module = await prisma.courseModule.create({
        data: {
          ...moduleData,
          courseId: course.id
        }
      });
      createdModules.push(module);
      console.log(`‚úÖ M√≥dulo creado: ${module.title}`);
    }

    // 3. Crear lecciones detalladas para cada m√≥dulo
    const lessonsData = [
      // M√≥dulo 1: Fundamentos del Desarrollo Web
      {
        moduleIndex: 0,
        lessons: [
          {
            title: "Introducci√≥n al Desarrollo Web",
            description: "Panorama general del desarrollo web y tecnolog√≠as modernas",
            content: "En esta lecci√≥n aprender√°s sobre la evoluci√≥n del desarrollo web, las tecnolog√≠as actuales y las tendencias futuras. Exploraremos el ecosistema completo de herramientas y frameworks disponibles.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/intro-web-dev.mp4",
            duration: 25,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "HTML5 - Estructura Sem√°ntica",
            description: "Crear p√°ginas web con HTML5 sem√°ntico y accesible",
            content: "Aprende a estructurar contenido web usando las nuevas etiquetas sem√°nticas de HTML5. Veremos c√≥mo crear p√°ginas accesibles y bien estructuradas.",
            contentType: "TEXT",
            duration: 30,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "CSS3 - Estilos Modernos",
            description: "Aplicar estilos modernos con CSS3, Flexbox y Grid",
            content: "Domina CSS3 con t√©cnicas modernas como Flexbox, Grid, animaciones y responsive design. Crearemos dise√±os profesionales y adaptables.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/css3-modern.mp4",
            duration: 35,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          },
          {
            title: "JavaScript B√°sico",
            description: "Fundamentos de JavaScript: variables, funciones y control de flujo",
            content: "Introducci√≥n a JavaScript: sintaxis b√°sica, tipos de datos, funciones, condicionales y bucles. Base fundamental para el desarrollo web moderno.",
            contentType: "EXERCISE",
            duration: 40,
            orderIndex: 4,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 2: JavaScript Avanzado
      {
        moduleIndex: 1,
        lessons: [
          {
            title: "ES6+ Features",
            description: "Caracter√≠sticas modernas de JavaScript: arrow functions, destructuring, spread operator",
            content: "Explora las caracter√≠sticas modernas de ES6+: arrow functions, destructuring, spread/rest operators, template literals y m√°s.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/es6-features.mp4",
            duration: 30,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Async/Await y Promesas",
            description: "Programaci√≥n as√≠ncrona moderna con promesas y async/await",
            content: "Aprende a manejar operaciones as√≠ncronas de forma elegante con promesas y async/await. Fundamental para trabajar con APIs.",
            contentType: "TEXT",
            duration: 35,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "M√≥dulos ES6",
            description: "Organizaci√≥n de c√≥digo con m√≥dulos ES6 e import/export",
            content: "Organiza tu c√≥digo JavaScript usando m√≥dulos ES6. Aprende import/export, m√≥dulos din√°micos y mejores pr√°cticas.",
            contentType: "EXERCISE",
            duration: 25,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 3: React.js
      {
        moduleIndex: 2,
        lessons: [
          {
            title: "Introducci√≥n a React",
            description: "Conceptos fundamentales de React y JSX",
            content: "Introducci√≥n a React: componentes, JSX, props y el modelo de datos unidireccional. Crearemos tu primera aplicaci√≥n React.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/react-intro.mp4",
            duration: 30,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Hooks de React",
            description: "useState, useEffect y hooks personalizados",
            content: "Domina los hooks de React: useState para estado, useEffect para efectos secundarios y creaci√≥n de hooks personalizados.",
            contentType: "TEXT",
            duration: 40,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Routing con React Router",
            description: "Navegaci√≥n entre p√°ginas con React Router v6",
            content: "Implementa navegaci√≥n en tu aplicaci√≥n React usando React Router. Rutas din√°micas, par√°metros y navegaci√≥n program√°tica.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/react-router.mp4",
            duration: 35,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Gesti√≥n de Estado Global",
            description: "Context API y Redux Toolkit para estado global",
            content: "Gestiona estado global en aplicaciones React complejas usando Context API y Redux Toolkit.",
            contentType: "EXERCISE",
            duration: 45,
            orderIndex: 4,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 4: Node.js y Express
      {
        moduleIndex: 3,
        lessons: [
          {
            title: "Introducci√≥n a Node.js",
            description: "Fundamentos de Node.js y el ecosistema npm",
            content: "Introducci√≥n a Node.js: event loop, m√≥dulos nativos, npm y el ecosistema de paquetes.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/nodejs-intro.mp4",
            duration: 25,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Express.js Framework",
            description: "Crear APIs RESTful con Express.js",
            content: "Desarrolla APIs RESTful completas con Express.js: routing, middleware, validaci√≥n y manejo de errores.",
            contentType: "TEXT",
            duration: 40,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Middleware y Validaci√≥n",
            description: "Middleware personalizado y validaci√≥n de datos",
            content: "Crea middleware personalizado y implementa validaci√≥n robusta de datos con bibliotecas como Joi o express-validator.",
            contentType: "EXERCISE",
            duration: 35,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 5: Bases de Datos
      {
        moduleIndex: 4,
        lessons: [
          {
            title: "Introducci√≥n a Bases de Datos",
            description: "Conceptos fundamentales de bases de datos relacionales y NoSQL",
            content: "Fundamentos de bases de datos: SQL vs NoSQL, normalizaci√≥n, relaciones y consultas b√°sicas.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/databases-intro.mp4",
            duration: 30,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Prisma ORM",
            description: "Trabajar con bases de datos usando Prisma ORM",
            content: "Usa Prisma ORM para interactuar con bases de datos de forma segura y eficiente. Schema, migraciones y consultas.",
            contentType: "TEXT",
            duration: 35,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Consultas Avanzadas",
            description: "Consultas complejas, relaciones y optimizaci√≥n",
            content: "Realiza consultas complejas, maneja relaciones entre tablas y optimiza el rendimiento de tu base de datos.",
            contentType: "EXERCISE",
            duration: 40,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 6: Autenticaci√≥n
      {
        moduleIndex: 5,
        lessons: [
          {
            title: "Autenticaci√≥n JWT",
            description: "Implementar autenticaci√≥n segura con JWT",
            content: "Implementa autenticaci√≥n JWT completa: registro, login, refresh tokens y manejo de sesiones.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/jwt-auth.mp4",
            duration: 35,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Autorizaci√≥n y Roles",
            description: "Sistema de roles y permisos",
            content: "Implementa un sistema de autorizaci√≥n basado en roles y permisos para proteger rutas y recursos.",
            contentType: "TEXT",
            duration: 30,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Seguridad Web",
            description: "Mejores pr√°cticas de seguridad web",
            content: "Aprende sobre vulnerabilidades comunes, CORS, rate limiting, sanitizaci√≥n de datos y otras medidas de seguridad.",
            contentType: "EXERCISE",
            duration: 25,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 7: Despliegue
      {
        moduleIndex: 6,
        lessons: [
          {
            title: "Docker y Contenedores",
            description: "Containerizaci√≥n de aplicaciones con Docker",
            content: "Aprende a containerizar tu aplicaci√≥n con Docker. Dockerfiles, docker-compose y mejores pr√°cticas.",
            contentType: "VIDEO",
            videoUrl: "https://example.com/videos/docker-intro.mp4",
            duration: 30,
            orderIndex: 1,
            isRequired: true,
            isPreview: true
          },
          {
            title: "Despliegue en Cloud",
            description: "Desplegar aplicaciones en servicios cloud",
            content: "Despliega tu aplicaci√≥n en servicios cloud como Heroku, Railway, Vercel o AWS. Configuraci√≥n y monitoreo.",
            contentType: "TEXT",
            duration: 35,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "CI/CD Pipeline",
            description: "Automatizaci√≥n de despliegue con GitHub Actions",
            content: "Configura un pipeline de CI/CD con GitHub Actions para automatizar testing y despliegue.",
            contentType: "EXERCISE",
            duration: 40,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          }
        ]
      },
      // M√≥dulo 8: Proyecto Final
      {
        moduleIndex: 7,
        lessons: [
          {
            title: "Planificaci√≥n del Proyecto",
            description: "Dise√±o y arquitectura de la aplicaci√≥n final",
            content: "Planifica tu aplicaci√≥n full stack: arquitectura, tecnolog√≠as, base de datos y funcionalidades principales.",
            contentType: "TEXT",
            duration: 45,
            orderIndex: 1,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Desarrollo Frontend",
            description: "Implementaci√≥n del frontend con React",
            content: "Desarrolla el frontend completo de tu aplicaci√≥n: componentes, routing, estado y integraci√≥n con APIs.",
            contentType: "EXERCISE",
            duration: 120,
            orderIndex: 2,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Desarrollo Backend",
            description: "Implementaci√≥n del backend con Node.js",
            content: "Desarrolla el backend completo: APIs, autenticaci√≥n, base de datos y l√≥gica de negocio.",
            contentType: "EXERCISE",
            duration: 150,
            orderIndex: 3,
            isRequired: true,
            isPreview: false
          },
          {
            title: "Integraci√≥n y Despliegue",
            description: "Integraci√≥n completa y despliegue en producci√≥n",
            content: "Integra frontend y backend, realiza testing completo y despliega tu aplicaci√≥n en producci√≥n.",
            contentType: "EXERCISE",
            duration: 90,
            orderIndex: 4,
            isRequired: true,
            isPreview: false
          }
        ]
      }
    ];

    // Crear lecciones
    let totalLessons = 0;
    for (const moduleData of lessonsData) {
      const module = createdModules[moduleData.moduleIndex];
      for (const lessonData of moduleData.lessons) {
        const lesson = await prisma.lesson.create({
          data: {
            ...lessonData,
            moduleId: module.id
          }
        });
        totalLessons++;
        console.log(`‚úÖ Lecci√≥n creada: ${lesson.title} (M√≥dulo: ${module.title})`);
      }
    }

    // 4. Crear quizzes completos
    const quizzes = [
      {
        title: "Quiz: Fundamentos del Desarrollo Web",
        description: "Eval√∫a tu conocimiento de HTML5, CSS3 y JavaScript b√°sico",
        timeLimit: 1800, // 30 minutos
        passingScore: 70,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz: JavaScript Avanzado",
        description: "Eval√∫a tu comprensi√≥n de ES6+, async/await y m√≥dulos",
        timeLimit: 1500, // 25 minutos
        passingScore: 75,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz: React.js",
        description: "Eval√∫a tu conocimiento de React, hooks y routing",
        timeLimit: 2000, // 33 minutos
        passingScore: 80,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz: Node.js y Express",
        description: "Eval√∫a tu comprensi√≥n de backend con Node.js y Express",
        timeLimit: 1600, // 27 minutos
        passingScore: 75,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz: Bases de Datos",
        description: "Eval√∫a tu conocimiento de bases de datos y Prisma ORM",
        timeLimit: 1200, // 20 minutos
        passingScore: 70,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz: Autenticaci√≥n y Seguridad",
        description: "Eval√∫a tu comprensi√≥n de JWT, autorizaci√≥n y seguridad web",
        timeLimit: 1400, // 23 minutos
        passingScore: 80,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      },
      {
        title: "Quiz Final Integrador",
        description: "Evaluaci√≥n final que integra todos los conocimientos del curso",
        timeLimit: 3600, // 60 minutos
        passingScore: 85,
        showCorrectAnswers: true,
        isActive: true,
        courseId: course.id
      }
    ];

    const createdQuizzes = [];
    for (const quizData of quizzes) {
      const quiz = await prisma.quiz.create({
        data: quizData
      });
      createdQuizzes.push(quiz);
      console.log(`‚úÖ Quiz creado: ${quiz.title}`);
    }

    // 5. Crear preguntas detalladas para los quizzes
    const quizQuestions = [
      // Quiz 1: Fundamentos del Desarrollo Web
      {
        quizIndex: 0,
        questions: [
          {
            question: "¬øCu√°l es la etiqueta HTML5 sem√°ntica para el contenido principal de una p√°gina?",
            type: "MULTIPLE_CHOICE",
            options: ["<div>", "<main>", "<section>", "<article>"],
            correctAnswer: "<main>",
            explanation: "La etiqueta <main> es la etiqueta sem√°ntica HTML5 que representa el contenido principal de la p√°gina.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øQu√© propiedad CSS se usa para crear un dise√±o flexible?",
            type: "MULTIPLE_CHOICE",
            options: ["display: flex", "position: relative", "float: left", "margin: auto"],
            correctAnswer: "display: flex",
            explanation: "display: flex activa el modelo de caja flexible (Flexbox) en CSS.",
            points: 10,
            orderIndex: 2
          },
          {
            question: "¬øCu√°l es la diferencia entre let y var en JavaScript?",
            type: "SHORT_ANSWER",
            correctAnswer: "let tiene scope de bloque, var tiene scope de funci√≥n",
            explanation: "let tiene scope de bloque (block scope) mientras que var tiene scope de funci√≥n (function scope).",
            points: 15,
            orderIndex: 3
          },
          {
            question: "¬øQu√© m√©todo se usa para agregar un elemento al final de un array en JavaScript?",
            type: "MULTIPLE_CHOICE",
            options: ["push()", "pop()", "shift()", "unshift()"],
            correctAnswer: "push()",
            explanation: "El m√©todo push() agrega uno o m√°s elementos al final de un array.",
            points: 10,
            orderIndex: 4
          }
        ]
      },
      // Quiz 2: JavaScript Avanzado
      {
        quizIndex: 1,
        questions: [
          {
            question: "¬øQu√© es una arrow function en JavaScript?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Una funci√≥n que usa flechas como par√°metros",
              "Una sintaxis m√°s corta para escribir funciones",
              "Una funci√≥n que solo puede ser llamada una vez",
              "Una funci√≥n que siempre retorna una promesa"
            ],
            correctAnswer: "Una sintaxis m√°s corta para escribir funciones",
            explanation: "Las arrow functions son una sintaxis m√°s concisa para escribir funciones en ES6+.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øPara qu√© se usa async/await?",
            type: "SHORT_ANSWER",
            correctAnswer: "Para manejar operaciones as√≠ncronas de forma m√°s legible",
            explanation: "async/await permite escribir c√≥digo as√≠ncrono de forma m√°s legible y f√°cil de entender.",
            points: 15,
            orderIndex: 2
          },
          {
            question: "¬øCu√°l es la diferencia entre const y let?",
            type: "MULTIPLE_CHOICE",
            options: [
              "const no existe en JavaScript",
              "const no permite reasignaci√≥n, let s√≠",
              "let es m√°s r√°pido que const",
              "const solo funciona con objetos"
            ],
            correctAnswer: "const no permite reasignaci√≥n, let s√≠",
            explanation: "const declara una variable que no puede ser reasignada, mientras que let permite reasignaci√≥n.",
            points: 10,
            orderIndex: 3
          }
        ]
      },
      // Quiz 3: React.js
      {
        quizIndex: 2,
        questions: [
          {
            question: "¬øQu√© es un hook en React?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Una funci√≥n que conecta componentes",
              "Una funci√≥n que permite usar estado y efectos en componentes funcionales",
              "Un evento que se dispara autom√°ticamente",
              "Una biblioteca externa de React"
            ],
            correctAnswer: "Una funci√≥n que permite usar estado y efectos en componentes funcionales",
            explanation: "Los hooks son funciones que permiten usar estado y otras caracter√≠sticas de React en componentes funcionales.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øCu√°l es el hook m√°s com√∫n para manejar estado en React?",
            type: "MULTIPLE_CHOICE",
            options: ["useEffect", "useState", "useContext", "useReducer"],
            correctAnswer: "useState",
            explanation: "useState es el hook m√°s com√∫n y fundamental para manejar estado en componentes funcionales.",
            points: 10,
            orderIndex: 2
          },
          {
            question: "¬øPara qu√© se usa useEffect?",
            type: "SHORT_ANSWER",
            correctAnswer: "Para manejar efectos secundarios como llamadas a APIs",
            explanation: "useEffect se usa para manejar efectos secundarios como llamadas a APIs, suscripciones, etc.",
            points: 15,
            orderIndex: 3
          }
        ]
      },
      // Quiz 4: Node.js y Express
      {
        quizIndex: 3,
        questions: [
          {
            question: "¬øQu√© es Node.js?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Un framework de JavaScript",
              "Un runtime de JavaScript para el servidor",
              "Una base de datos",
              "Un editor de c√≥digo"
            ],
            correctAnswer: "Un runtime de JavaScript para el servidor",
            explanation: "Node.js es un runtime de JavaScript que permite ejecutar JavaScript en el servidor.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øQu√© es Express.js?",
            type: "SHORT_ANSWER",
            correctAnswer: "Un framework web minimalista para Node.js",
            explanation: "Express.js es un framework web minimalista y flexible para Node.js que facilita la creaci√≥n de APIs y aplicaciones web.",
            points: 15,
            orderIndex: 2
          },
          {
            question: "¬øQu√© es middleware en Express?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Un tipo de base de datos",
              "Funciones que se ejecutan entre la petici√≥n y la respuesta",
              "Un framework de testing",
              "Un sistema de autenticaci√≥n"
            ],
            correctAnswer: "Funciones que se ejecutan entre la petici√≥n y la respuesta",
            explanation: "Middleware son funciones que se ejecutan entre la petici√≥n HTTP y la respuesta final.",
            points: 10,
            orderIndex: 3
          }
        ]
      },
      // Quiz 5: Bases de Datos
      {
        quizIndex: 4,
        questions: [
          {
            question: "¬øQu√© es un ORM?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Un sistema operativo",
              "Una herramienta que mapea objetos a bases de datos",
              "Un protocolo de red",
              "Un lenguaje de programaci√≥n"
            ],
            correctAnswer: "Una herramienta que mapea objetos a bases de datos",
            explanation: "ORM (Object-Relational Mapping) es una t√©cnica que mapea objetos de programaci√≥n a tablas de base de datos.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øCu√°l es la ventaja principal de usar Prisma ORM?",
            type: "SHORT_ANSWER",
            correctAnswer: "Proporciona type safety y una API intuitiva para bases de datos",
            explanation: "Prisma proporciona type safety, una API intuitiva y herramientas de desarrollo para trabajar con bases de datos.",
            points: 15,
            orderIndex: 2
          }
        ]
      },
      // Quiz 6: Autenticaci√≥n y Seguridad
      {
        quizIndex: 5,
        questions: [
          {
            question: "¬øQu√© significa JWT?",
            type: "MULTIPLE_CHOICE",
            options: [
              "JavaScript Web Token",
              "JSON Web Token",
              "Java Web Token",
              "JavaScript Window Token"
            ],
            correctAnswer: "JSON Web Token",
            explanation: "JWT significa JSON Web Token, un est√°ndar para crear tokens de acceso.",
            points: 10,
            orderIndex: 1
          },
          {
            question: "¬øCu√°l es la diferencia entre autenticaci√≥n y autorizaci√≥n?",
            type: "SHORT_ANSWER",
            correctAnswer: "Autenticaci√≥n verifica identidad, autorizaci√≥n verifica permisos",
            explanation: "Autenticaci√≥n verifica qui√©n eres, autorizaci√≥n verifica qu√© puedes hacer.",
            points: 15,
            orderIndex: 2
          }
        ]
      },
      // Quiz 7: Final Integrador
      {
        quizIndex: 6,
        questions: [
          {
            question: "¬øCu√°les son los componentes principales de una aplicaci√≥n full stack?",
            type: "MULTIPLE_CHOICE",
            options: [
              "Frontend, Backend y Base de Datos",
              "Solo Frontend y Backend",
              "Solo Base de Datos",
              "Solo Frontend"
            ],
            correctAnswer: "Frontend, Backend y Base de Datos",
            explanation: "Una aplicaci√≥n full stack t√≠picamente incluye frontend, backend y base de datos.",
            points: 15,
            orderIndex: 1
          },
          {
            question: "¬øQu√© tecnolog√≠as usar√≠as para crear una API RESTful moderna?",
            type: "SHORT_ANSWER",
            correctAnswer: "Node.js, Express, Prisma y una base de datos como PostgreSQL",
            explanation: "Para una API RESTful moderna se recomienda Node.js, Express, Prisma ORM y una base de datos robusta como PostgreSQL.",
            points: 20,
            orderIndex: 2
          },
          {
            question: "¬øCu√°l es el flujo t√≠pico de autenticaci√≥n en una aplicaci√≥n web?",
            type: "SHORT_ANSWER",
            correctAnswer: "Registro ‚Üí Login ‚Üí JWT Token ‚Üí Autorizaci√≥n en rutas protegidas",
            explanation: "El flujo t√≠pico incluye registro, login, generaci√≥n de JWT y uso del token para autorizar rutas protegidas.",
            points: 20,
            orderIndex: 3
          }
        ]
      }
    ];

    // Crear preguntas
    let totalQuestions = 0;
    for (const quizData of quizQuestions) {
      const quiz = createdQuizzes[quizData.quizIndex];
      for (const questionData of quizData.questions) {
        const question = await prisma.quizQuestion.create({
          data: {
            ...questionData,
            quizId: quiz.id
          }
        });
        totalQuestions++;
        console.log(`‚úÖ Pregunta creada: ${question.question.substring(0, 30)}...`);
      }
    }

    // 6. Actualizar estad√≠sticas del curso
    const totalQuizzes = createdQuizzes.length;

    await prisma.course.update({
      where: { id: course.id },
      data: {
        totalLessons,
        totalQuizzes,
        totalResources: 25 // Recursos adicionales como PDFs, videos, etc.
      }
    });

    console.log('\nüéâ ¬°Curso completo creado exitosamente!');
    console.log(`üìä Estad√≠sticas finales:`);
    console.log(`   - M√≥dulos: ${createdModules.length}`);
    console.log(`   - Lecciones: ${totalLessons}`);
    console.log(`   - Quizzes: ${totalQuizzes}`);
    console.log(`   - Preguntas: ${totalQuestions}`);
    console.log(`   - Recursos: 25`);
    console.log(`\nüîó URL para acceder al curso:`);
    console.log(`   GET http://localhost:3001/api/course/${course.id}`);
    console.log(`\nüìã Informaci√≥n del curso:`);
    console.log(`   ID: ${course.id}`);
    console.log(`   T√≠tulo: ${course.title}`);
    console.log(`   Slug: ${course.slug}`);
    console.log(`   Duraci√≥n: ${course.duration} horas`);
    console.log(`   Nivel: ${course.level}`);
    console.log(`   Categor√≠a: ${course.category}`);
    console.log(`   Precio: $${course.price}`);
    console.log(`   Certificaci√≥n: ${course.certification ? 'S√≠' : 'No'}`);
    console.log(`   Activo: ${course.isActive ? 'S√≠' : 'No'}`);

  } catch (error) {
    console.error('‚ùå Error creando curso:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createCompleteCourseFull();
