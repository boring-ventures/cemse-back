const axios = require('axios');

const BASE_URL = 'http://localhost:3001/api';

async function testPublicEndpoints() {
  console.log('üß™ Probando endpoints p√∫blicos de municipios e instituciones...\n');

  try {
    // Test municipios p√∫blicos
    console.log('üìã Probando GET /api/municipality/public');
    const municipalitiesResponse = await axios.get(`${BASE_URL}/municipality/public`);
    console.log('‚úÖ Municipios obtenidos exitosamente');
    console.log(`üìä Total de municipios: ${municipalitiesResponse.data.length}`);
    
    if (municipalitiesResponse.data.length > 0) {
      console.log('üìù Primeros 3 municipios:');
      municipalitiesResponse.data.slice(0, 3).forEach((municipality, index) => {
        console.log(`   ${index + 1}. ${municipality.name} - ${municipality.department}`);
      });
    }
    console.log('');

    // Test instituciones p√∫blicas
    console.log('üèõÔ∏è Probando GET /api/institution/public');
    const institutionsResponse = await axios.get(`${BASE_URL}/institution/public`);
    console.log('‚úÖ Instituciones obtenidas exitosamente');
    console.log(`üìä Total de instituciones: ${institutionsResponse.data.length}`);
    
    if (institutionsResponse.data.length > 0) {
      console.log('üìù Primeras 3 instituciones:');
      institutionsResponse.data.slice(0, 3).forEach((institution, index) => {
        console.log(`   ${index + 1}. ${institution.name} - ${institution.department} (${institution.institutionType})`);
      });
    }
    console.log('');

    // Test que los endpoints protegidos requieren autenticaci√≥n
    console.log('üîí Probando que endpoints protegidos requieren autenticaci√≥n...');
    
    try {
      await axios.get(`${BASE_URL}/municipality`);
      console.log('‚ùå Error: El endpoint protegido de municipios deber√≠a requerir autenticaci√≥n');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Endpoint protegido de municipios correctamente requiere autenticaci√≥n');
      } else {
        console.log('‚ùå Error inesperado:', error.message);
      }
    }

    try {
      await axios.get(`${BASE_URL}/institution`);
      console.log('‚ùå Error: El endpoint protegido de instituciones deber√≠a requerir autenticaci√≥n');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ Endpoint protegido de instituciones correctamente requiere autenticaci√≥n');
      } else {
        console.log('‚ùå Error inesperado:', error.message);
      }
    }

    console.log('\nüéâ Todas las pruebas completadas exitosamente!');
    console.log('\nüìã Resumen de endpoints disponibles:');
    console.log('   ‚Ä¢ GET /api/municipality/public - Lista p√∫blica de municipios');
    console.log('   ‚Ä¢ GET /api/institution/public - Lista p√∫blica de instituciones');
    console.log('   ‚Ä¢ GET /api/municipality - Lista protegida de municipios (requiere auth)');
    console.log('   ‚Ä¢ GET /api/institution - Lista protegida de instituciones (requiere auth)');

  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
    if (error.response) {
      console.error('   Status:', error.response.status);
      console.error('   Data:', error.response.data);
    }
  }
}

// Ejecutar las pruebas
testPublicEndpoints();
