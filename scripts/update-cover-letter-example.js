const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function updateCoverLetterExample() {
  try {
    // Buscar el usuario joven
    const user = await prisma.user.findUnique({
      where: { username: 'joven_test' }
    });

    if (!user) {
      console.log('Usuario joven_test no encontrado');
      return;
    }

    // Datos de ejemplo para la carta de presentaci√≥n
    const coverLetterData = {
      recipient: {
        department: "Recursos Humanos",
        companyName: "TechCorp Bolivia",
        address: "Av. Principal 123, Zona Centro",
        city: "Cochabamba",
        country: "Bolivia"
      },
      subject: "Postulaci√≥n para Desarrollador Frontend Junior",
      content: `Estimado equipo de Recursos Humanos,

Me dirijo a ustedes con gran inter√©s para postularme a la posici√≥n de Desarrollador Frontend Junior que han publicado en su empresa.

Como joven profesional apasionado por la tecnolog√≠a, he desarrollado habilidades s√≥lidas en JavaScript, React, HTML y CSS a trav√©s de proyectos personales y actividades extracurriculares. Mi formaci√≥n en desarrollo web me ha preparado para enfrentar los desaf√≠os que presenta esta posici√≥n.

Durante mi tiempo como voluntario en organizaciones tecnol√≥gicas, he demostrado mi capacidad para trabajar en equipo, aprender r√°pidamente nuevas tecnolog√≠as y contribuir de manera efectiva a proyectos de desarrollo web.

Estoy comprometido con mi desarrollo profesional y creo que esta oportunidad en TechCorp Bolivia me permitir√≠a crecer y contribuir significativamente a su organizaci√≥n, aplicando mis conocimientos t√©cnicos y mi pasi√≥n por crear experiencias de usuario excepcionales.

Agradezco su consideraci√≥n y quedo atento a sus comentarios.

Saludos cordiales,
Juan P√©rez`,
      template: "professional"
    };

    // Actualizar el perfil con los datos de la carta de presentaci√≥n
    const updatedProfile = await prisma.profile.update({
      where: { userId: user.id },
      data: {
        coverLetterRecipient: coverLetterData.recipient,
        coverLetterSubject: coverLetterData.subject,
        coverLetterContent: coverLetterData.content,
        coverLetterTemplate: coverLetterData.template
      }
    });

    console.log('‚úÖ Carta de presentaci√≥n actualizada exitosamente');
    console.log('üìã Datos agregados:');
    console.log(`   - Destinatario: ${coverLetterData.recipient.department} - ${coverLetterData.recipient.companyName}`);
    console.log(`   - Asunto: ${coverLetterData.subject}`);
    console.log(`   - Template: ${coverLetterData.template}`);
    console.log(`   - Contenido: ${coverLetterData.content.length} caracteres`);

  } catch (error) {
    console.error('‚ùå Error actualizando carta de presentaci√≥n:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateCoverLetterExample();
